{"source": "Course_content_jan_2025/spreadsheets.md", "chunk_id": "spreadsheets.md_part_1", "text": "## Spreadsheet: Excel, Google Sheets\n\nYou'll use spreadsheets for data cleaning and exploration. The most popular spreadsheet program is [Microsoft Excel](https://www.microsoft.com/en-us/microsoft-365/excel) followed by [Google Sheets](https://www.google.com/sheets/about/).\n\nYou may be already familiar with these. If not, make sure to learn the basics of both.\n\nGo through the [**Microsoft Excel** video training](https://support.microsoft.com/en-us/office/excel-video-training-9bc05390-e94c-46af-a"}
{"source": "Course_content_jan_2025/spreadsheets.md", "chunk_id": "spreadsheets.md_part_2", "text": "video training](https://support.microsoft.com/en-us/office/excel-video-training-9bc05390-e94c-46af-a5b3-d7c22f6990bb) and make sure you cover:\n\n- [Intro to Excel](https://support.microsoft.com/en-us/office/create-a-new-workbook-ae99f19b-cecb-4aa0-92c8-7126d6212a83)\n- [Rows & columns](https://support.microsoft.com/en-us/office/insert-or-delete-rows-and-columns-6f40e6e4-85af-45e0-b39d-65dd504a3246)\n- [Cells](https://support.microsoft.com/en-us/office/move-or-copy-cells-and-cell-contents-803d65eb-6"}
{"source": "Course_content_jan_2025/spreadsheets.md", "chunk_id": "spreadsheets.md_part_3", "text": "- [Cells](https://support.microsoft.com/en-us/office/move-or-copy-cells-and-cell-contents-803d65eb-6a3e-4534-8c6f-ff12d1c4139e)\n- [Formatting](https://support.microsoft.com/en-us/office/available-number-formats-in-excel-0afe8f52-97db-41f1-b972-4b46e9f1e8d2)\n- [Formulas & Functions](https://support.microsoft.com/en-us/office/overview-of-formulas-in-excel-ecfdc708-9162-49e8-b993-c311f47ca173)\n- [Tables](https://support.microsoft.com/en-us/office/create-and-format-tables-e81aa349-b006-4f8a-9806-5af"}
{"source": "Course_content_jan_2025/spreadsheets.md", "chunk_id": "spreadsheets.md_part_4", "text": "les](https://support.microsoft.com/en-us/office/create-and-format-tables-e81aa349-b006-4f8a-9806-5af9df0ac664)\n- [PivotTables](https://support.microsoft.com/en-us/office/create-a-pivottable-to-analyze-worksheet-data-a9a84538-bfe9-40a9-a8e9-f99134456576)\n\nWatch this video for an introduction to **Google Sheets** (49 min):\n\n[](https://youtu.be/TENAbUa-R-w)"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_1", "text": "## Data Preparation in DuckDB\n\n[](https://www.youtube.com/playlist?list=PLw2SS5iImhEThtiGNPiNenOr2tVvLj6H7)\n\nDuckDB's SQL engine can handle large files quickly. Below are common cleaning tasks using the DuckDB CLI.\n\n### Create a Sample Dataset\n\nLet's create a sample dataset that mimics real business data patterns - incomplete customer records, time-series orders, and regional variations. Before working with messy production data, you need a controlled environment to test data cleaning techniques"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_2", "text": "rking with messy production data, you need a controlled environment to test data cleaning techniques. This sample represents common e-commerce scenarios: missing customer info (20% of orders), seasonal patterns (15-day cycles), and geographic segmentation that drive business decisions like inventory placement and marketing campaigns.\n\n```bash\nduckdb sample.duckdb <<'SQL'\nCREATE OR REPLACE TABLE orders AS\nSELECT\n  seq AS order_id,\n  CASE WHEN seq % 5 = 0 THEN NULL ELSE 'Customer ' || seq END AS c"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_3", "text": "ders AS\nSELECT\n  seq AS order_id,\n  CASE WHEN seq % 5 = 0 THEN NULL ELSE 'Customer ' || seq END AS customer,\n  date '2025-01-01' + CAST(seq % 15 AS INTEGER) AS order_date,\n  CASE WHEN seq % 3 = 0 THEN 'Widget ' || seq ELSE 'Gadget ' || seq END AS product,\n  round(random()*1000, 2) AS amount,\n  CASE WHEN seq % 4 = 0 THEN 'EU' ELSE 'US' END AS region\nFROM range(1, 50) tbl(seq);\nSQL\n```\n\n### Create a Messy CSV\n\nLet's also simulate real-world data export issues - unescaped quotes, missing delimiters"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_4", "text": " Messy CSV\n\nLet's also simulate real-world data export issues - unescaped quotes, missing delimiters, and malformed records that break standard CSV parsers. Data rarely arrives clean. Export systems fail, manual data entry introduces errors, and third-party integrations send malformed files. Learning to handle corrupted CSV files prevents hours of debugging and ensures your data pipeline doesn't break when inevitably receiving bad data from vendors, APIs, or legacy systems.\n\n```bash\ncat <<'EOF' "}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_5", "text": "reak when inevitably receiving bad data from vendors, APIs, or legacy systems.\n\n```bash\ncat <<'EOF' > messy_orders.csv\norder_id,customer,order_date,product,amount,region\n1,Customer 1,2025-01-01,Widget 1,100,US\n\"2,Customer 2,2025-01-02,Gadget 2,200,US\n3,Customer 3,2025-01-03,Gadget 3,300,EU\nEOF\n```\n\n### Create a Big CSV\n\nNext, we'll create a large dataset to practice memory-efficient processing techniques that handle files too big to fit in RAM. When working with millions of customer records, tra"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_6", "text": "hniques that handle files too big to fit in RAM. When working with millions of customer records, transaction logs, or sensor data, traditional tools crash or run out of memory. DuckDB's streaming capabilities let you process 100GB+ files on laptops by reading data in chunks, making big data analysis accessible without expensive infrastructure.\n\n```bash\nduckdb sample.duckdb <<'SQL'\nCOPY (SELECT seq AS id, random() AS val FROM range(100000)) TO 'big.csv';\nSQL\n```\n\n### Exploratory Data Analysis\n\nWe"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_7", "text": " AS id, random() AS val FROM range(100000)) TO 'big.csv';\nSQL\n```\n\n### Exploratory Data Analysis\n\nWe need to examine our data structure and quality before making business decisions. Every data analysis starts with understanding what you have - missing values can skew customer segmentation, outliers affect revenue forecasting, and data types determine which analytical techniques work. Quick EDA prevents costly mistakes like launching marketing campaigns based on incomplete customer data or settin"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_8", "text": "vents costly mistakes like launching marketing campaigns based on incomplete customer data or setting prices using corrupted transaction amounts.\n\n```sql\n-- Preview and get stats\nSELECT * FROM orders LIMIT 5;\nDESCRIBE orders;\nSELECT COUNT(*) AS n, AVG(amount) AS avg_amount FROM orders;\n```\n\n### Converting Data to Other Formats\n\nLet's export cleaned data to formats optimized for different business needs. Analytics teams need Parquet for fast querying, APIs require JSON for web integration, and ex"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_9", "text": "needs. Analytics teams need Parquet for fast querying, APIs require JSON for web integration, and executives want CSV for Excel compatibility. Format conversion ensures your cleaned data reaches every stakeholder in their preferred format, enabling faster decision-making across departments without forcing everyone to learn SQL.\n\n```sql\nCOPY (SELECT * FROM orders) TO 'orders.json' (FORMAT JSON);\nCOPY (SELECT * FROM orders) TO 'orders.parquet' (FORMAT PARQUET);\n```\n\n### Reading Messy CSV\n\nWe need "}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_10", "text": "PY (SELECT * FROM orders) TO 'orders.parquet' (FORMAT PARQUET);\n```\n\n### Reading Messy CSV\n\nWe need to handle corrupted files that would normally crash your data pipeline. Real-world CSV files from vendors, legacy systems, or manual exports often contain malformed rows that break standard parsers. Instead of spending hours manually fixing files or losing critical business data, DuckDB's error handling lets you salvage usable records while identifying problem areas for follow-up with data provide"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_11", "text": "ling lets you salvage usable records while identifying problem areas for follow-up with data providers.\n\n```sql\n-- Skip bad lines while loading\nSELECT *\nFROM read_csv_auto('messy_orders.csv', ignore_errors=true);\n```\n\n### Handling Missing Values\n\nIt's important to address incomplete data that could lead to wrong business conclusions. Missing customer names prevent personalized marketing, absent transaction amounts skew revenue calculations, and incomplete addresses block shipping. Rather than ex"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_12", "text": "ansaction amounts skew revenue calculations, and incomplete addresses block shipping. Rather than excluding entire records and losing valuable information, strategic imputation preserves data for analysis while clearly marking assumptions made during the cleaning process.\n\n```sql\n-- Replace null customer names\nSELECT COALESCE(customer, 'Unknown') AS customer FROM orders;\n```\n\n### String Operations\n\nIt's common to standardize text data that comes from multiple sources with inconsistent formatting"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_13", "text": "\n\nIt's common to standardize text data that comes from multiple sources with inconsistent formatting. Product names from different suppliers use varying cases, customer entries have extra spaces, and imported data contains mixed formatting. Clean, consistent strings enable accurate grouping for inventory management, prevent duplicate customer records, and ensure search functionality works properly across your application.\n\n```sql\nSELECT DISTINCT TRIM(LOWER(product)) AS clean_product FROM orders;"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_14", "text": " across your application.\n\n```sql\nSELECT DISTINCT TRIM(LOWER(product)) AS clean_product FROM orders;\n```\n\n### Date Parsing and Conversion\n\nTypically, we transform dates into different formats that enable time-based business analysis. Raw date strings from different systems use various formats that prevent proper sorting and filtering. Converting to standard formats enables monthly sales reporting, seasonal trend analysis, and time-based customer segmentation - critical for inventory planning, ma"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_15", "text": " seasonal trend analysis, and time-based customer segmentation - critical for inventory planning, marketing campaigns, and financial forecasting.\n\n```sql\nSELECT order_id, STRFTIME(order_date, '%Y-%m') AS order_month FROM orders;\n```\n\n### Conditional Logic and Binning\n\nA common task is to categorize continuous data into meaningful business segments that drive decision-making. Converting exact dollar amounts into price tiers enables targeted marketing (premium vs budget customers), inventory class"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_16", "text": "r amounts into price tiers enables targeted marketing (premium vs budget customers), inventory classification (high/medium/low value items), and commission structures. This segmentation forms the foundation for personalized pricing, customer targeting, and performance analysis.\n\n```sql\nSELECT\n  order_id,\n  CASE WHEN amount > 700 THEN 'high' WHEN amount > 300 THEN 'medium' ELSE 'low' END AS price_band\nFROM orders;\n```\n\n### Regex Search and Replace\n\nWe often need to clean complex text patterns tha"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_17", "text": "and\nFROM orders;\n```\n\n### Regex Search and Replace\n\nWe often need to clean complex text patterns that simple string operations can't handle. Product descriptions contain multiple spaces, phone numbers have inconsistent formatting, and addresses mix abbreviations with full words. Regular expressions fix these patterns systematically, ensuring consistent data quality for customer communications, shipping integrations, and search functionality.\n\n```sql\nSELECT REGEXP_REPLACE(product, '\\\\s+', ' ', 'g"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_18", "text": "pping integrations, and search functionality.\n\n```sql\nSELECT REGEXP_REPLACE(product, '\\\\s+', ' ', 'g') AS tidy_product FROM orders;\n```\n\n### Working with Multiple Formats\n\nLet's combine data from different sources that use various file formats. Modern businesses receive data as CSV exports, JSON from APIs, and Parquet from data warehouses. Rather than maintaining separate processing pipelines, DuckDB's format flexibility lets you join orders from your CSV exports with customer data from JSON API"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_19", "text": "kDB's format flexibility lets you join orders from your CSV exports with customer data from JSON APIs and inventory levels from Parquet files in a single query.\n\n```sql\nCREATE TABLE json_orders AS SELECT * FROM read_json_auto('orders.json');\nCREATE TABLE parquet_orders AS SELECT * FROM read_parquet('orders.parquet');\nSELECT * FROM orders UNION ALL SELECT * FROM parquet_orders;\n```\n\n### Processing in Chunks\n\nWe handle massive datasets that exceed available memory by processing them in manageable "}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_20", "text": "in Chunks\n\nWe handle massive datasets that exceed available memory by processing them in manageable segments. When analyzing years of transaction logs, customer behavior data, or sensor readings, loading everything at once crashes systems. Chunk processing enables analysis of terabyte-scale datasets on standard hardware, making enterprise-level data analysis accessible for fraud detection, customer lifetime value calculations, and operational analytics.\n\n```sql\nSELECT * FROM read_csv_auto('big.c"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_21", "text": "r lifetime value calculations, and operational analytics.\n\n```sql\nSELECT * FROM read_csv_auto('big.csv') LIMIT 1000 OFFSET 0;\nSELECT * FROM read_csv_auto('big.csv') LIMIT 1000 OFFSET 1000;\n```\n\n### Filtering Rows and Dropping Columns\n\nWe'll focus analysis on relevant data subsets while removing sensitive or unnecessary information. Business analysis rarely needs all data - marketing teams want current customers, finance needs profitable regions, and product managers focus on active items. Effici"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_22", "text": "rent customers, finance needs profitable regions, and product managers focus on active items. Efficient filtering reduces processing time, protects sensitive data (removing PII columns), and ensures analysis focuses on business-relevant subsets rather than getting lost in comprehensive but unfocused datasets.\n\n```sql\nSELECT order_id, amount FROM orders WHERE region = 'US';\nSELECT * EXCLUDE region FROM orders;\n```\n\n### Derived Columns\n\nNow, let's create new business metrics from existing data tha"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_23", "text": "FROM orders;\n```\n\n### Derived Columns\n\nNow, let's create new business metrics from existing data that drive key performance indicators. Raw transaction amounts become profit margins with tax calculations, customer regions enable territory-based analysis, and dates support seasonal comparisons. These derived metrics power executive dashboards, sales team performance tracking, and automated business rules without requiring manual calculations or separate reporting tools.\n\n```sql\nSELECT *, amount *"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_24", "text": " rules without requiring manual calculations or separate reporting tools.\n\n```sql\nSELECT *, amount * 0.1 AS tax, UPPER(region) AS region_code FROM orders;\n```\n\n### Summaries and Pivots\n\nA big part of data preparation is to transform detailed transaction data into executive-level insights that inform strategic decisions. Converting thousands of individual orders into regional sales summaries, customer segment performance, and product category trends enables quick identification of growth opportun"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_25", "text": "mer segment performance, and product category trends enables quick identification of growth opportunities, underperforming markets, and inventory optimization needs. These aggregations become the foundation for board presentations, budget planning, and strategic initiatives.\n\n```sql\n-- Aggregation\nSELECT region, COUNT(*) AS n_orders, SUM(amount) AS total FROM orders GROUP BY region;\n\n-- Pivot by region\nSELECT *\nFROM orders\nPIVOT(COUNT(*) FOR region IN ('US', 'EU'));\n```\n\nUseful links:\n\n- [DuckDB"}
{"source": "Course_content_jan_2025/data-preparation-in-duckdb.md", "chunk_id": "data-preparation-in-duckdb.md_part_26", "text": "egion\nSELECT *\nFROM orders\nPIVOT(COUNT(*) FOR region IN ('US', 'EU'));\n```\n\nUseful links:\n\n- [DuckDB Documentation](https://duckdb.org/docs/)\n- [SQL Functions](https://duckdb.org/docs/sql/functions/overview)\n- [DuckDB Extensions](https://duckdb.org/docs/extensions/overview)"}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_1", "text": "## Python tools: uv\n\n[Install uv](https://docs.astral.sh/uv/getting-started/installation/).\n\n[`uv`](https://docs.astral.sh/uv/) is a fast Python package and project manager that's becoming the standard for running Python scripts. It replaces tools like pip, conda, pipx, poetry, pyenv, twine, and virtualenv into one, enabling:\n\n- **Python Version Management**: uv installs and manages _multiple_ Python versions, allowing developers to specify and switch between versions seamlessly.\n- **Virtual Env"}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_2", "text": "hon versions, allowing developers to specify and switch between versions seamlessly.\n- **Virtual Environment Handling**: It automates the creation and management of virtual environments, ensuring isolated and consistent development spaces for different projects.\n- **Dependency Management**: With support for the pyproject.toml format, uv enables precise specification of project dependencies. It maintains a universal lockfile, uv.lock, to ensure reproducible installations across different systems."}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_3", "text": "ntains a universal lockfile, uv.lock, to ensure reproducible installations across different systems.\n- **Project Execution**: The `uv run` command allows for the execution of scripts and applications within the managed environment, streamlining development workflows.\n\nHere are some commonly used commands:\n\n```bash\n# Replace python with uv. This automatically installs Python and dependencies.\nuv run script.py\n\n# Run a Python script directly from the Internet\nuv run https://example.com/script.py\n\n"}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_4", "text": "n script.py\n\n# Run a Python script directly from the Internet\nuv run https://example.com/script.py\n\n# Run a Python script without installing\nuvx ruff\n\n# Use a specific Python version\nuv run --python 3.11 script.py\n\n# Add dependencies to your script\nuv add httpx --script script.py\n\n# Create a virtual environment at .venv\nuv venv\n\n# Install packages to your virtual environment\nuv pip install httpx\n```\n\nHere are some useful tools you can run with `uvx` without installation:\n\n```bash\nuvx --from jupy"}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_5", "text": "``\n\nHere are some useful tools you can run with `uvx` without installation:\n\n```bash\nuvx --from jupyterlab jupyter-lab   # Jupyter notebook\nuvx marimo      # Interactive notebook\nuvx llm         # Chat with LLMs from the command line\nuvx openwebui   # Chat with LLMs via the browser\nuvx httpie      # Make HTTP requests\nuvx datasette   # Browse SQLite databases\nuvx markitdown  # Convert PDF to Markdown\nuvx yt-dlp      # Download YouTube videos\nuvx asciinema   # Record your terminal and play it\n```"}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_6", "text": "own\nuvx yt-dlp      # Download YouTube videos\nuvx asciinema   # Record your terminal and play it\n```\n\nuv uses [inline script metadata](https://packaging.python.org/en/latest/specifications/inline-script-metadata/#inline-script-metadata) for dependencies.\nThe eliminates the need for `requirements.txt` or virtual environments. For example:\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\n#   \"httpx\",\n#   \"pandas\",\n# ]\n# ///\n```\n\n[](https://youtu.be/igWlYl3asKw?t=1240)\n\n<!-- "}
{"source": "Course_content_jan_2025/uv.md", "chunk_id": "uv.md_part_7", "text": "dencies = [\n#   \"httpx\",\n#   \"pandas\",\n# ]\n# ///\n```\n\n[](https://youtu.be/igWlYl3asKw?t=1240)\n\n<!-- Assessment: Share output of `uv run --with httpie -- https https://httpbin.org/get?email={email}` -->\n<!-- Assessment: Share output of `uvx markitdown {email}.pdf` -->\n<!-- Assessment: Share output of `uv ruff format script.py` -->"}
{"source": "Course_content_jan_2025/data-storytelling.md", "chunk_id": "data-storytelling.md_part_1", "text": "# Data Storytelling\n\n[](https://youtu.be/aF93i6zVVQg)"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-qgis.md", "chunk_id": "geospatial-analysis-with-qgis.md_part_1", "text": "## Geospatial Analysis with QGIS\n\n[](https://youtu.be/tJhehs0o-ik)\n\nYou'll learn how to use QGIS for geographic data processing, covering:\n\n- **Shapefiles and KML Files**: Create and manage shapefiles and KML files for storing and analyzing geographic information.\n- **Downloading QGIS**: Install QGIS on different operating systems and familiarize yourself with its interface.\n- **Geospatial Data**: Access and utilize shapefiles from sources like Diva-GIS and integrate them into QGIS projects.\n- *"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-qgis.md", "chunk_id": "geospatial-analysis-with-qgis.md_part_2", "text": " Access and utilize shapefiles from sources like Diva-GIS and integrate them into QGIS projects.\n- **Creating Custom Shapefiles**: Learn how to create custom shapefiles when existing ones are unavailable, including creating a shapefile for South Sudan.\n- **Editing and Visualization**: Use QGIS tools to edit shapefiles, add attributes, and visualize geographic data with various styling and labeling options.\n- **Exporting Data**: Export shapefiles or KML files for use in other applications, such a"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-qgis.md", "chunk_id": "geospatial-analysis-with-qgis.md_part_3", "text": " options.\n- **Exporting Data**: Export shapefiles or KML files for use in other applications, such as Google Earth.\n\nHere are links used in the video:\n\n- [QGIS Project](https://www.qgis.org/en/site/)\n- [Shapefile Data](https://www.diva-gis.org/gdata)"}
{"source": "Course_content_jan_2025/retrieval-augmented-generation.md", "chunk_id": "retrieval-augmented-generation.md_part_1", "text": "## Retrieval Augmented Generation\n\nThe video is not available yet. Please review the notebook, which is self-explanatory. #TODO\n\nYou will learn to implement Retrieval Augmented Generation (RAG) to enhance language models' responses by incorporating relevant context, covering:\n\n- **LLM Context Limitations**: Understanding the constraints of context windows in large language models.\n- **Retrieval Augmented Generation**: The technique of retrieving and using relevant documents to enhance model resp"}
{"source": "Course_content_jan_2025/retrieval-augmented-generation.md", "chunk_id": "retrieval-augmented-generation.md_part_2", "text": "gmented Generation**: The technique of retrieving and using relevant documents to enhance model responses.\n- **Embeddings**: How to convert text into numerical representations that are used for similarity calculations.\n- **Similarity Search**: Finding the most relevant documents by calculating cosine similarity between embeddings.\n- **OpenAI API Integration**: Using the OpenAI API to generate responses based on the most relevant documents.\n- **Tourist Recommendation Bot**: Building a bot that re"}
{"source": "Course_content_jan_2025/retrieval-augmented-generation.md", "chunk_id": "retrieval-augmented-generation.md_part_3", "text": "onses based on the most relevant documents.\n- **Tourist Recommendation Bot**: Building a bot that recommends tourist attractions based on user interests using embeddings.\n- **Next Steps for Implementation**: Insights into scaling the solution with a vector database, re-rankers, and improved prompts for better accuracy and efficiency.\n\nHere are the links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1x-g0kjktFkBcujJssKrx1xhZarsQA0ya)\n- [`gte-large-en-v1.5` embed"}
{"source": "Course_content_jan_2025/retrieval-augmented-generation.md", "chunk_id": "retrieval-augmented-generation.md_part_4", "text": "ps://colab.research.google.com/drive/1x-g0kjktFkBcujJssKrx1xhZarsQA0ya)\n- [`gte-large-en-v1.5` embedding model](https://huggingface.co/Alibaba-NLP/gte-large-en-v1.5)\n- [Awesome vector database](https://github.com/mileszim/awesome-vector-database)"}
{"source": "Course_content_jan_2025/actor-network-visualization.md", "chunk_id": "actor-network-visualization.md_part_1", "text": "## Actor Network Visualization\n\nFind the shortest path between Govinda & Angelina Jolie using IMDb data using Python: [networkx](https://pypi.org/project/networkx/) or [scikit-network](https://pypi.org/project/scikit-network).\n\n[](https://youtu.be/lcwMsPxPIjc)\n\n- [Notebook: How this video was created](https://github.com/sanand0/jolie-no-1/blob/master/jolie-no-1.ipynb)\n- [The data used to visualize the network](https://github.com/sanand0/jolie-no-1/blob/master/imdb-actor-pairing.ipynb)\n- [The sho"}
{"source": "Course_content_jan_2025/actor-network-visualization.md", "chunk_id": "actor-network-visualization.md_part_2", "text": " the network](https://github.com/sanand0/jolie-no-1/blob/master/imdb-actor-pairing.ipynb)\n- [The shortest path between actors](https://github.com/sanand0/jolie-no-1/blob/master/shortest-path.ipynb)\n- [IMDB data](https://developer.imdb.com/non-commercial-datasets/)\n- [Codebase](https://github.com/sanand0/jolie-no-1)"}
{"source": "Course_content_jan_2025/forecasting-with-excel.md", "chunk_id": "forecasting-with-excel.md_part_1", "text": "## Forecasting with Excel\n\n[](https://youtu.be/QrTimmxwZw4)\n\nHere are links used in the video:\n\n- [FORECAST reference](https://support.microsoft.com/en-us/office/forecast-and-forecast-linear-functions-50ca49c9-7b40-4892-94e4-7ad38bbeda99)\n- [FORECAST.ETS reference](https://support.microsoft.com/en-us/office/forecast-ets-function-15389b8b-677e-4fbd-bd95-21d464333f41)\n- [Height-weight dataset](https://docs.google.com/spreadsheets/d/1iMFVPh8q9KgnfLwBeBMmX1GaFabP02FK/view) from [Kaggle](https://www."}
{"source": "Course_content_jan_2025/forecasting-with-excel.md", "chunk_id": "forecasting-with-excel.md_part_2", "text": "://docs.google.com/spreadsheets/d/1iMFVPh8q9KgnfLwBeBMmX1GaFabP02FK/view) from [Kaggle](https://www.kaggle.com/datasets/burnoutminer/heights-and-weights-dataset)\n- [Traffic dataset](https://docs.google.com/spreadsheets/d/1w2R0fHdLG5ZGW-papaK7wzWq_-WDArKC/view) from [Kaggle](https://www.kaggle.com/datasets/fedesoriano/traffic-prediction-dataset)"}
{"source": "Course_content_jan_2025/web-automation-with-playwright.md", "chunk_id": "web-automation-with-playwright.md_part_1", "text": "## Web Scraping with Playwright in Python\n\nScrape JavaScript\u2011heavy sites effortlessly with Playwright.\n\n[](https://youtu.be/biFzRHk4xpY) ([youtube.com](https://www.youtube.com/watch?v=biFzRHk4xpY&utm_source=chatgpt.com))\n\nPlaywright offers:\n\n- **JavaScript rendering**: Executes page scripts so you scrape only after content appears. ([playwright.dev](https://playwright.dev/python/docs/intro))\n- **Headless & headed modes**: Run without UI or in a real browser for debugging. ([playwright.dev](https"}
{"source": "Course_content_jan_2025/web-automation-with-playwright.md", "chunk_id": "web-automation-with-playwright.md_part_2", "text": "eadless & headed modes**: Run without UI or in a real browser for debugging. ([playwright.dev](https://playwright.dev/python/docs/intro))\n- **Auto\u2011waiting & retry**: Built\u2011in locators reduce flakiness. ([playwright.dev](https://playwright.dev/python/docs/locators))\n- **Multi\u2011browser support**: Chromium, Firefox, WebKit\u2014all from one API. ([playwright.dev](https://playwright.dev/python/docs/intro))\n\n### Example: Scraping a JS\u2011Rendered Site\n\nWe\u2019ll scrape [Quotes to Scrape (JS)](https://quotes.toscr"}
{"source": "Course_content_jan_2025/web-automation-with-playwright.md", "chunk_id": "web-automation-with-playwright.md_part_3", "text": "\n### Example: Scraping a JS\u2011Rendered Site\n\nWe\u2019ll scrape [Quotes to Scrape (JS)](https://quotes.toscrape.com/js/)\u2014a site that loads quotes via JavaScript, so a simple `requests` call gets only an empty shell ([quotes.toscrape.com](https://quotes.toscrape.com/js/)). Playwright runs the scripts and gives us the real content:\n\n```python\n# /// script\n# dependencies = [\"playwright\"]\n# ///\n\nfrom playwright.sync_api import sync_playwright\n\ndef scrape_quotes():\n    with sync_playwright() as p:\n        # "}
{"source": "Course_content_jan_2025/web-automation-with-playwright.md", "chunk_id": "web-automation-with-playwright.md_part_4", "text": "ht.sync_api import sync_playwright\n\ndef scrape_quotes():\n    with sync_playwright() as p:\n        # Channel can be \"chrome\", \"msedge\", \"chrome-beta\", \"msedge-beta\" or \"msedge-dev\".\n        browser = p.chromium.launch(headless=True, channel=\"chrome\")\n        page = browser.new_page()\n        page.goto(\"https://quotes.toscrape.com/js/\")\n        quotes = page.query_selector_all(\".quote\")\n        for q in quotes:\n            text = q.query_selector(\".text\").inner_text()\n            author = q.query_"}
{"source": "Course_content_jan_2025/web-automation-with-playwright.md", "chunk_id": "web-automation-with-playwright.md_part_5", "text": "q in quotes:\n            text = q.query_selector(\".text\").inner_text()\n            author = q.query_selector(\".author\").inner_text()\n            print(f\"{text} \u2014 {author}\")\n        browser.close()\n\nif __name__ == \"__main__\":\n    scrape_quotes()\n```\n\nSave as `scraper.py` and run:\n\n```bash\nuv run scraper.py\n```\n\nYou\u2019ll see each quote plus author printed\u2014fetched only after the JS executes."}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_1", "text": "## Local LLM Runner: Ollama\n\n[`ollama`](https://github.com/ollama/ollama) is a command-line tool for running open-source large language models entirely on your own machine\u2014no API keys, no vendor lock-in, full control over models and performance.\n\n[](https://youtu.be/Lb5D892-2HY)\n\n### Basic Usage\n\n[Download Ollama for macOS, Linux, or Windows](https://ollama.com/) and add the binary to your `PATH`. See the full [Docs \u2197](https://ollama.com/docs) for installation details and troubleshooting.\n\n```ba"}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_2", "text": " See the full [Docs \u2197](https://ollama.com/docs) for installation details and troubleshooting.\n\n```bash\n# List installed and available models\nollama list\n\n# Download/pin a specific model version\nollama pull gemma3:1b-it-qat\n\n# Run a one-off prompt\nollama run gemma3:1b-it-qat 'Write a haiku about data visualization'\n\n# Launch a persistent HTTP API on port 11434\nollama serve\n\n# Interact programmatically over HTTP\ncurl -X POST http://localhost:11434/api/chat \\\n     -H 'Content-Type: application/json"}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_3", "text": "lly over HTTP\ncurl -X POST http://localhost:11434/api/chat \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"model\":\"gemma3:1b-it-qat\",\"prompt\":\"Hello, world!\"}'\n```\n\n### Key Features\n\n- **Model management**: `list`/`pull` \u2014 Install and switch among Llama 3.3, DeepSeek-R1, Gemma 3, Mistral, Phi-4, and more.\n- **Local inference**: `run` \u2014 Execute prompts entirely on-device for privacy and zero latency beyond hardware limits.\n- **Persistent server**: `serve` \u2014 Expose a local REST API for mul"}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_4", "text": "o latency beyond hardware limits.\n- **Persistent server**: `serve` \u2014 Expose a local REST API for multi-session chats and integration into scripts or apps.\n- **Version pinning**: `pull model:tag` \u2014 Pin exact model versions for reproducible demos and experiments.\n- **Resource control**: `--threads` / `--context` \u2014 Tune CPU/GPU usage and maximum context window for performance and memory management.\n\n### Real-World Use Cases\n\n- **Quick prototyping**. Brainstorm slide decks or blog outlines offline, "}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_5", "text": "### Real-World Use Cases\n\n- **Quick prototyping**. Brainstorm slide decks or blog outlines offline, without worrying about API quotas: `ollama run gemma-3 'Outline a slide deck on Agile best practices'`\n- **Data privacy**. Summarize sensitive documents on-device, retaining full control of your data: `cat financial_report.pdf | ollama run phi-4 'Summarize the key findings'`\n- **CI/CD integration**. Validate PR descriptions or test YAML configurations in your pipeline without incurring API costs: "}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_6", "text": " Validate PR descriptions or test YAML configurations in your pipeline without incurring API costs: `git diff origin/main | ollama run llama2 'Check for style and clarity issues'`\n- **Local app embedding**. Power a desktop or web app via the local REST API for instant LLM features: `curl -X POST http://localhost:11434/api/chat -d '{\"model\":\"mistral\",\"prompt\":\"Translate to German\"}'`\n\nRead the full [Ollama docs \u2197](https://github.com/ollama/ollama/tree/main/docs) for advanced topics like custom mo"}
{"source": "Course_content_jan_2025/ollama.md", "chunk_id": "ollama.md_part_7", "text": " [Ollama docs \u2197](https://github.com/ollama/ollama/tree/main/docs) for advanced topics like custom model hosting, GPU tuning, and integrating with your development workflows."}
{"source": "Course_content_jan_2025/npx.md", "chunk_id": "npx.md_part_1", "text": "## JavaScript tools: npx\n\n[npx](https://docs.npmjs.com/cli/v8/commands/npx) is a command-line tool that comes with npm (Node Package Manager) and allows you to execute npm package binaries and run one-off commands without installing them globally. It's essential for modern JavaScript development and data science workflows.\n\nFor data scientists, npx is useful when:\n\n- Running JavaScript-based data visualization tools\n- Converting notebooks and documents\n- Testing and formatting code\n- Running dev"}
{"source": "Course_content_jan_2025/npx.md", "chunk_id": "npx.md_part_2", "text": "visualization tools\n- Converting notebooks and documents\n- Testing and formatting code\n- Running development servers\n\nHere are common npx commands:\n\n```bash\n# Run a package without installing\nnpx http-server .                # Start a local web server\nnpx prettier --write .           # Format code or docs\nnpx eslint .                     # Lint JavaScript\nnpx typescript-node script.ts    # Run TypeScript directly\nnpx esbuild app.js               # Bundle JavaScript\nnpx jsdoc .                   "}
{"source": "Course_content_jan_2025/npx.md", "chunk_id": "npx.md_part_3", "text": "eScript directly\nnpx esbuild app.js               # Bundle JavaScript\nnpx jsdoc .                      # Generate JavaScript docs\n\n# Run specific versions\nnpx prettier@3.2 --write .        # Use prettier 3.2\n\n# Execute remote scripts (use with caution!)\nnpx github:user/repo            # Run from GitHub\n```\n\nWatch this introduction to npx (6 min):\n\n[](https://youtu.be/55WaAoZV_tQ)"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_1", "text": "## BBC Weather location ID with Python\n\n[](https://youtu.be/IafLrvnamAw)\n\nYou'll learn how to get the location ID of any city from the BBC Weather API -- as a precursor to scraping weather data -- covering:\n\n- **Understanding API Calls**: Learn how backend API calls work when searching for a city on the BBC weather website.\n- **Inspecting Web Interactions**: Use the browser's inspect element feature to track API calls and understand the network activity.\n- **Extracting Location IDs**: Identify a"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_2", "text": "re to track API calls and understand the network activity.\n- **Extracting Location IDs**: Identify and extract the location ID from the API response using Python.\n- **Using Python Libraries**: Import and use requests, json, and urlencode libraries to make API calls and process responses.\n- **Constructing API URLs**: Create structured API URLs dynamically with constant prefixes and query parameters using urlencode.\n- **Building Functions**: Develop a Python function that accepts a city name, cons"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_3", "text": " using urlencode.\n- **Building Functions**: Develop a Python function that accepts a city name, constructs the API call, and returns the location ID.\n\nTo open the browser Developer Tools on Chrome, Edge, or Firefox, you can:\n\n- Right-click on the page and select \"Inspect\" to open the developer tools\n- OR: Press `F12`\n- OR: Press `Ctrl+Shift+I` on Windows\n- OR: Press `Cmd+Opt+I` on Mac\n\nHere are links and references:\n\n- [BBC Location ID scraping - Notebook](https://colab.research.google.com/drive"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_4", "text": "nks and references:\n\n- [BBC Location ID scraping - Notebook](https://colab.research.google.com/drive/1-iV-tbtRicKR_HXWeu4Hi5aXJCV3QdQp)\n- [BBC Weather - Palo Alto (location ID: 5380748)](https://www.bbc.com/weather/5380748)\n- [BBC Locator Service - Los Angeles](https://locator-service.api.bbci.co.uk/locations?api_key=AGbFAKx58hyjQScCXIYrxuEwJh2W2cmv&stack=aws&locale=en&filter=international&place-types=settlement%2Cairport%2Cdistrict&order=importance&s=los%20angeles&a=true&format=json)\n- Learn ab"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_5", "text": "ypes=settlement%2Cairport%2Cdistrict&order=importance&s=los%20angeles&a=true&format=json)\n- Learn about the [`requests` package](https://docs.python-requests.org/en/latest/user/quickstart/). Watch [Python Requests Tutorial: Request Web Pages, Download Images, POST Data, Read JSON, and More](https://youtu.be/tb8gHvYlCFs)\n\n## BBC Weather data with Python\n\n[](https://youtu.be/Uc4DgQJDRoI)\n\nYou'll learn how to scrape the live weather data of a city from the BBC Weather API, covering:\n\n- **Introducti"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_6", "text": "rn how to scrape the live weather data of a city from the BBC Weather API, covering:\n\n- **Introduction to Web Scraping**: Understand the basics of web scraping and its legality.\n- **Libraries Overview**: Learn the importance of [`requests`](https://docs.python-requests.org/en/latest/user/quickstart/) and [`BeautifulSoup`](https://beautiful-soup-4.readthedocs.io/).\n- **Fetching HTML**: Use [`requests`](https://docs.python-requests.org/en/latest/user/quickstart/) to fetch HTML content from a web p"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_7", "text": "ts`](https://docs.python-requests.org/en/latest/user/quickstart/) to fetch HTML content from a web page.\n- **Parsing HTML**: Utilize [`BeautifulSoup`](https://beautiful-soup-4.readthedocs.io/) to parse and navigate the HTML content.\n- **Identifying Data**: Inspect HTML elements to locate specific data (e.g., high and low temperatures).\n- **Extracting Data**: Extract relevant data using [`BeautifulSoup`](https://beautiful-soup-4.readthedocs.io/)'s `find_all()` function.\n- **Data Cleanup**: Clean "}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_8", "text": "Soup`](https://beautiful-soup-4.readthedocs.io/)'s `find_all()` function.\n- **Data Cleanup**: Clean extracted data to remove unwanted elements.\n- **Post-Processing**: Use regular expressions to split large strings into meaningful parts.\n- **Data Structuring**: Combine extracted data into a structured pandas DataFrame.\n- **Handling Special Characters**: Replace unwanted characters for better data manipulation.\n- **Saving Data**: Save the cleaned data into CSV and Excel formats.\n\nHere are links an"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_9", "text": "anipulation.\n- **Saving Data**: Save the cleaned data into CSV and Excel formats.\n\nHere are links and references:\n\n- [BBC Weather scraping - Notebook](https://colab.research.google.com/drive/1-gkMzE-TKe3U_yh1v0NPn4TM687H2Hcf)\n- [BBC Locator Service - Mumbai](https://locator-service.api.bbci.co.uk/locations?api_key=AGbFAKx58hyjQScCXIYrxuEwJh2W2cmv&stack=aws&locale=en&filter=international&place-types=settlement%2Cairport%2Cdistrict&order=importance&s=mumbai&a=true&format=json)\n- [BBC Weather - Mum"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_10", "text": "s=settlement%2Cairport%2Cdistrict&order=importance&s=mumbai&a=true&format=json)\n- [BBC Weather - Mumbai (location ID: 1275339)](https://www.bbc.com/weather/1275339)\n- [BBC Weather API - Mumbai (location ID: 1275339)](https://weather-broker-cdn.api.bbci.co.uk/en/forecast/aggregated/1275339)\n- Learn about the [`json` package](https://docs.python.org/3/library/json.html). Watch [Python Tutorial: Working with JSON Data using the json Module](https://youtu.be/9N6a-VLBa2I)\n- Learn about the [`Beautifu"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_11", "text": "ing with JSON Data using the json Module](https://youtu.be/9N6a-VLBa2I)\n- Learn about the [`BeautifulSoup` package](https://beautiful-soup-4.readthedocs.io/). Watch [Python Tutorial: Web Scraping with BeautifulSoup and Requests](https://youtu.be/ng2o98k983k)\n- Learn about the [`pandas` package](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html). Watch\n  - [Python Pandas Tutorial (Part 1): Getting Started with Data Analysis - Installation and Loading Data](https://youtu.be/ZyhVh-"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_12", "text": "Part 1): Getting Started with Data Analysis - Installation and Loading Data](https://youtu.be/ZyhVh-qRZPA)\n  - [Python Pandas Tutorial (Part 2): DataFrame and Series Basics - Selecting Rows and Columns](https://youtu.be/zmdjNSmRXF4)\n- Learn about the [`re` package](https://docs.python.org/3/library/re.html). Watch [Python Tutorial: re Module - How to Write and Match Regular Expressions (Regex)](https://youtu.be/K8L6KVGG-7o)\n- Learn about the [`datetime` package](https://docs.python.org/3/library"}
{"source": "Course_content_jan_2025/bbc-weather-api-with-python.md", "chunk_id": "bbc-weather-api-with-python.md_part_13", "text": "tps://youtu.be/K8L6KVGG-7o)\n- Learn about the [`datetime` package](https://docs.python.org/3/library/datetime.html). Watch [Python Tutorial: Datetime Module - How to work with Dates, Times, Timedeltas, and Timezones](https://youtu.be/eirjjyP2qcQ)"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_1", "text": "## Hybrid Retrieval Augmented Generation (Hybrid RAG) with TypeSense\n\nHybrid RAG combines semantic (vector) search with traditional keyword search to improve retrieval accuracy and relevance. By mixing exact text matches with embedding-based similarity, you get the best of both worlds: precision when keywords are present, and semantic recall when phrasing varies. [TypeSense](https://typesense.org/) makes this easy with built-in hybrid search and automatic embedding generation.\n\nBelow is a fully "}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_2", "text": ") makes this easy with built-in hybrid search and automatic embedding generation.\n\nBelow is a fully self-contained Hybrid RAG tutorial using TypeSense, Python, and the command line.\n\n### Install and run TypeSense\n\n[Install TypeSense](https://typesense.org/docs/guide/install-typesense.html).\n\n```bash\nmkdir typesense-data\n\ndocker run -p 8108:8108 \\\n  -v typesense-data:/data typesense/typesense:28.0 \\\n  --data-dir /data \\\n  --api-key=secret-key \\\n  --enable-cors\n```\n\n- **`docker run`**: spins up a "}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_3", "text": "\\\n  --data-dir /data \\\n  --api-key=secret-key \\\n  --enable-cors\n```\n\n- **`docker run`**: spins up a containerized TypeSense server on port 8108\n  - `-p 8108:8108` maps host port to container port.\n  - `-v typesense-data:/data` mounts a Docker volume for persistence.\n  - `--data-dir /data` points TypeSense at that volume.\n  - `--api-key=secret-key` secures your API.\n  - `--enable-cors` allows browser-based requests.\n\n**Expected output:**\n\n- Docker logs showing TypeSense startup messages, such as "}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_4", "text": "er-based requests.\n\n**Expected output:**\n\n- Docker logs showing TypeSense startup messages, such as `Started Typesense API server`.\n- Listening on `http://0.0.0.0:8108`.\n\n### Embed and import documents into TypeSense\n\nFollow the steps in the [RAG with the CLI](rag-cli.md) tutorial to create a `chunks.json` that has one `{id, content}` JSON object per line.\n\n[TypeSense supports automatic embedding of documents](https://typesense.org/docs/28.0/api/vector-search.html#option-b-auto-embedding-generat"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_5", "text": "of documents](https://typesense.org/docs/28.0/api/vector-search.html#option-b-auto-embedding-generation-within-typesense). We'll use that capability.\n\nSave the following as `addnotes.py` and run it with `uv run addnotes.py`.\n\n```python\n# /// script\n# requires-python = \">=3.13\"\n# dependencies = [\"httpx\"]\n# ///\nimport json\nimport httpx\nimport os\n\nheaders = {\"X-TYPESENSE-API-KEY\": \"secret-key\"}\n\nschema = {\n    \"name\": \"notes\",\n    \"fields\": [\n        {\"name\": \"id\", \"type\": \"string\", \"facet\": False}"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_6", "text": "ma = {\n    \"name\": \"notes\",\n    \"fields\": [\n        {\"name\": \"id\", \"type\": \"string\", \"facet\": False},\n        {\"name\": \"content\", \"type\": \"string\", \"facet\": False},\n        {\n            \"name\": \"embedding\",\n            \"type\": \"float[]\",\n            \"embed\": {\n                \"from\": [\"content\"],\n                \"model_config\": {\n                    \"model_name\": \"openai/text-embedding-3-small\",\n                    \"api_key\": os.getenv(\"OPENAI_API_KEY\"),\n                },\n            },\n      "}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_7", "text": "                    \"api_key\": os.getenv(\"OPENAI_API_KEY\"),\n                },\n            },\n        },\n    ],\n}\n\nwith open(\"chunks.json\", \"r\") as f:\n    chunks = [json.loads(line) for line in f.readlines()]\n\nwith httpx.Client() as client:\n    # Create the collection\n    if client.get(f\"http://localhost:8108/collections/notes\", headers=headers).status_code == 404:\n        r = client.post(\"http://localhost:8108/collections\", json=schema, headers=headers)\n\n    # Embed the chunks\n    result = clie"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_8", "text": "localhost:8108/collections\", json=schema, headers=headers)\n\n    # Embed the chunks\n    result = client.post(\n        \"http://localhost:8108/collections/notes/documents/import?action=emplace\",\n        headers={**headers, \"Content-Type\": \"text/plain\"},\n        data=\"\\n\".join(json.dumps(chunk) for chunk in chunks),\n    )\n    print(result.text)\n```\n\n- **`httpx.Client`**: an HTTP client for Python.\n- **Collection schema**: `id` and `content` fields plus an `embedding` field with auto-generated embedd"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_9", "text": "*Collection schema**: `id` and `content` fields plus an `embedding` field with auto-generated embeddings from OpenAI.\n- **Auto-embedding**: the `embed` block instructs TypeSense to call the specified model for each document.\n- **`GET /collections/notes`**: checks existence.\n- **`POST /collections`**: creates the collection.\n- **`POST /collections/notes/documents/import?action=emplace`**: bulk upsert documents, embedding them on the fly.\n\n**Expected output:**\n\n- A JSON summary string like `{\"succ"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_10", "text": "rt documents, embedding them on the fly.\n\n**Expected output:**\n\n- A JSON summary string like `{\"success\": X, \"failed\": 0}` indicating how many docs were imported.\n- (On timeouts, re-run until all chunks are processed.)\n\n### 4. Run a hybrid search and answer a question\n\nNow, we can use a single `curl` against the Multi-Search endpoint to combine keyword and vector search as a [hybrid search](https://typesense.org/docs/28.0/api/vector-search.html#hybrid-search):\n\n```bash\nQ=\"What does the author af"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_11", "text": "//typesense.org/docs/28.0/api/vector-search.html#hybrid-search):\n\n```bash\nQ=\"What does the author affectionately call the => syntax?\"\n\npayload=$(jq -n --arg coll \"notes\" --arg q \"$Q\" \\\n  '{\n     searches: [\n       {\n         collection: $coll,\n         q:           $q,\n         query_by:    \"content,embedding\",\n         sort_by:     \"_text_match:desc\",\n         prefix:      false,\n         exclude_fields: \"embedding\"\n       }\n     ]\n   }'\n)\ncurl -s 'http://localhost:8108/multi_search' \\\n  -H \"X-"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_12", "text": "_fields: \"embedding\"\n       }\n     ]\n   }'\n)\ncurl -s 'http://localhost:8108/multi_search' \\\n  -H \"X-TYPESENSE-API-KEY: secret-key\" \\\n  -d \"$payload\" \\\n  | jq -r '.results[].hits[].document.content' \\\n  | llm -s \"${Q} - \\$Answer ONLY from these notes. Cite verbatim from the notes.\" \\\n  | uvx streamdown\n```\n\n- **`query_by: \"content,embedding\"`**: tells TypeSense to score by both keyword and vector similarity.\n- **`sort_by: \"_text_match:desc\"`**: boosts exact text hits.\n- **`exclude_fields: \"embedd"}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_13", "text": "imilarity.\n- **`sort_by: \"_text_match:desc\"`**: boosts exact text hits.\n- **`exclude_fields: \"embedding\"`**: keeps responses lightweight.\n- **`curl -d`**: posts the search request.\n- **`jq -r`**: extracts each hit\u2019s `content`. See [jq manual](https://stedolan.github.io/jq/manual/)\n- **`llm -s`** and **`uvx streamdown`**: generate and stream a grounded answer.\n\n**Expected output:**\n\n- The raw matched snippets printed first.\n- Then a concise, streamed LLM answer citing the note verbatim."}
{"source": "Course_content_jan_2025/hybrid-rag-typesense.md", "chunk_id": "hybrid-rag-typesense.md_part_14", "text": "ed snippets printed first.\n- Then a concise, streamed LLM answer citing the note verbatim."}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_1", "text": "## REST APIs\n\nREST (Representational State Transfer) APIs are the standard way to build web services that allow different systems to communicate over HTTP. They use standard HTTP methods and JSON for data exchange.\n\nWatch this comprehensive introduction to REST APIs (52 min):\n\n[](https://youtu.be/qbLc5a9jdXo)\n\nKey Concepts:\n\n1. **HTTP Methods**\n   - `GET`: Retrieve data\n   - `POST`: Create new data\n   - `PUT/PATCH`: Update existing data\n   - `DELETE`: Remove data\n2. **Status Codes**\n   - `2xx`: "}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_2", "text": "a\n   - `PUT/PATCH`: Update existing data\n   - `DELETE`: Remove data\n2. **Status Codes**\n   - `2xx`: Success (200 OK, 201 Created)\n   - `4xx`: Client errors (400 Bad Request, 404 Not Found)\n   - `5xx`: Server errors (500 Internal Server Error)\n\nHere's a minimal REST API using FastAPI. Run this `server.py` script via `uv run server.py`:\n\n```python\n# /// script\n# requires-python = \">=3.13\"\n# dependencies = [\n#     \"fastapi\",\n#     \"uvicorn\",\n# ]\n# ///\nfrom fastapi import FastAPI, HTTPException\nfrom"}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_3", "text": "cies = [\n#     \"fastapi\",\n#     \"uvicorn\",\n# ]\n# ///\nfrom fastapi import FastAPI, HTTPException\nfrom typing import Dict, List\n\napp = FastAPI()\n\n# Create a list of items that will act like a database\nitems: List[Dict[str, float | int | str]] = []\n\n# Create a GET endpoint that returns all items\n@app.get(\"/items\")\nasync def get_items() -> List[Dict[str, float | int | str]]:\n    return items\n\n# Create a GET endpoint that returns a specific item by ID\n@app.get(\"/items/{item_id}\")\nasync def get_item(i"}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_4", "text": " a GET endpoint that returns a specific item by ID\n@app.get(\"/items/{item_id}\")\nasync def get_item(item_id: int) -> Dict[str, float | int | str]:\n    if item := next((i for i in items if i[\"id\"] == item_id), None):\n        return item\n    raise HTTPException(status_code=404, detail=\"Item not found\")\n\n# Create a POST endpoint that creates a new item\n@app.post(\"/items\")\nasync def create_item(item: Dict[str, float | str]) -> Dict[str, float | int | str]:\n    new_item = {\"id\": len(items) + 1, \"name\""}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_5", "text": "ict[str, float | str]) -> Dict[str, float | int | str]:\n    new_item = {\"id\": len(items) + 1, \"name\": item[\"name\"], \"price\": float(item[\"price\"])}\n    items.append(new_item)\n    return new_item\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n```\n\nTest the API with curl:\n\n```bash\n# Get all items\ncurl http://localhost:8000/items\n\n# Create an item\ncurl -X POST http://localhost:8000/items \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"Book\", "}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_6", "text": "X POST http://localhost:8000/items \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"Book\", \"price\": 29.99}'\n\n# Get specific item\ncurl http://localhost:8000/items/1\n```\n\nBest Practices:\n\n1. **Use Nouns for Resources**\n   - Good: `/users`, `/posts`\n   - Bad: `/getUsers`, `/createPost`\n2. **Version Your API**\n   ```\n   /api/v1/users\n   /api/v2/users\n   ```\n3. **Handle Errors Consistently**\n   ```python\n   {\n     \"error\": \"Not Found\",\n     \"message\": \"User 123 not found\",\n     \"status_code\""}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_7", "text": "  ```python\n   {\n     \"error\": \"Not Found\",\n     \"message\": \"User 123 not found\",\n     \"status_code\": 404\n   }\n   ```\n4. **Use Query Parameters for Filtering**\n   ```\n   /api/posts?status=published&category=tech\n   ```\n5. **Implement Pagination**\n   ```\n   /api/posts?page=2&limit=10\n   ```\n\nTools:\n\n- [Postman](https://www.postman.com/): API testing and documentation\n- [Swagger/OpenAPI](https://swagger.io/): API documentation\n- [HTTPie](https://httpie.io/): Modern command-line HTTP client\n- [JSON"}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_8", "text": "gger.io/): API documentation\n- [HTTPie](https://httpie.io/): Modern command-line HTTP client\n- [JSON Schema](https://json-schema.org/): API request/response validation\n\nLearn more about REST APIs:\n\n- [REST API Design Best Practices](https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/)\n- [Microsoft REST API Guidelines](https://github.com/microsoft/api-guidelines)\n- [Google API Design Guide](https://cloud.google.com/apis/design)"}
{"source": "Course_content_jan_2025/rest-apis.md", "chunk_id": "rest-apis.md_part_9", "text": " Design Guide](https://cloud.google.com/apis/design)"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_1", "text": "## Vector Databases\n\nVector databases are specialized databases that store and search vector embeddings efficiently.\n\nUse vector databases when your embeddings exceed available memory or when you want it run fast at scale. (This is important. If your code runs fast and fits in memory, you **DON'T** need a vector database. You can can use `numpy` for these tasks.)\n\nVector databases are an evolving space.\n\nThe first generation of vector databases were written in C and typically used an algorithm c"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_2", "text": "space.\n\nThe first generation of vector databases were written in C and typically used an algorithm called [HNSW](https://en.wikipedia.org/wiki/Hierarchical_navigable_small_world) (a way to approximately find the nearest neighbor). Some popular ones are:\n\n- **[chroma 19,637 \u2b50 May 2025](https://github.com/chroma-core/chroma)**\n- **[qdrant 23,341 \u2b50 May 2025](https://github.com/qdrant/qdrant)**\n- **[lancedb 6,327 \u2b50 May 2025](https://github.com/lancedb/lancedb)**\n- **[faiss 34,684 \u2b50 May 2025](https:/"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_3", "text": "ancedb 6,327 \u2b50 May 2025](https://github.com/lancedb/lancedb)**\n- **[faiss 34,684 \u2b50 May 2025](https://github.com/facebookresearch/faiss)**\n- **[milvus 34,476 \u2b50 May 2025](https://github.com/milvus-io/milvus)**\n- **[weaviate 13,222 \u2b50 May 2025](https://github.com/weaviate/weaviate)**\n\nIn addition, most relational databases now support vector search. For example:\n\n- **[DuckDB](https://duckdb.org/)**: Supports vector search with [`vss`](https://duckdb.org/docs/extensions/vss.html).\n- **[SQLite](https:"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_4", "text": "upports vector search with [`vss`](https://duckdb.org/docs/extensions/vss.html).\n- **[SQLite](https://www.sqlite.org/)**: Supports vector search with [`sqlite-vec`](https://github.com/asg017/sqlite-vec).\n- **[PostgreSQL](https://www.postgresql.org/)**: Supports vector search with [`pgvector`](https://github.com/pgvector/pgvector).\n\nTake a look at this [Vector DB Comparison](https://superlinked.com/vector-db-comparison).\n\nWatch this Vector Database Tutorial (3 min):\n\n[](https://youtu.be/klTvEwg3o"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_5", "text": "/vector-db-comparison).\n\nWatch this Vector Database Tutorial (3 min):\n\n[](https://youtu.be/klTvEwg3oJ4)\n\n### ChromaDB\n\nHere's a minimal example using Chroma:\n\n```python\n# /// script\n# requires-python = \"==3.12\"\n# dependencies = [\n#   \"chromadb\",\n#   \"sentence-transformers\",\n# ]\n# ///\n\nimport chromadb\nfrom chromadb.utils import embedding_functions\nfrom sentence_transformers import SentenceTransformer\n\nasync def setup_vector_db():\n    \"\"\"Initialize Chroma DB with an embedding function.\"\"\"\n    sent"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_6", "text": "er\n\nasync def setup_vector_db():\n    \"\"\"Initialize Chroma DB with an embedding function.\"\"\"\n    sentence_transformer_ef = embedding_functions.SentenceTransformerEmbeddingFunction(\n        model_name=\"BAAI/bge-base-en-v1.5\"\n    )\n    client = chromadb.PersistentClient(path=\"./vector_db\")\n    collection = client.create_collection(\n        name=\"documents\",\n        embedding_function=sentence_transformer_ef\n    )\n    return collection\n\nasync def search_similar(collection, query: str, n_results: int"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_7", "text": "rmer_ef\n    )\n    return collection\n\nasync def search_similar(collection, query: str, n_results: int = 3) -> list[dict]:\n    \"\"\"Search for documents similar to the query.\"\"\"\n    d = collection.query(query_texts=[query], n_results=n_results)\n    return [\n        {\"id\": id, \"text\": text, \"distance\": distance}\n        for id, text, distance in zip(d[\"ids\"][0], d[\"documents\"][0], d[\"distances\"][0])\n    ]\n\nasync def main():\n    collection = await setup_vector_db()\n\n    # Add some documents\n    collec"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_8", "text": "  ]\n\nasync def main():\n    collection = await setup_vector_db()\n\n    # Add some documents\n    collection.add(\n        documents=[\"Apple is a fruit\", \"Orange is citrus\", \"Computer is electronic\"],\n        ids=[\"1\", \"2\", \"3\"]\n    )\n\n    # Search\n    results = await search_similar(collection, \"fruit\")\n    print(results)\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n### LanceDB\n\nHere's the same example using LanceDB:\n\n```python\n# /// script\n# requires-python = \"==3.12\"\n"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_9", "text": "anceDB\n\nHere's the same example using LanceDB:\n\n```python\n# /// script\n# requires-python = \"==3.12\"\n# dependencies = [\n#   \"lancedb\",\n#   \"pyarrow\",\n#   \"sentence-transformers\",\n# ]\n# ///\n\nimport lancedb\nimport pyarrow as pa\nfrom sentence_transformers import SentenceTransformer\n\nasync def setup_vector_db():\n    \"\"\"Initialize LanceDB with an embedding function.\"\"\"\n    model = SentenceTransformer(\"BAAI/bge-base-en-v1.5\")\n    db = lancedb.connect(\"./vector_db\")\n\n    # Create table with schema for d"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_10", "text": "AAI/bge-base-en-v1.5\")\n    db = lancedb.connect(\"./vector_db\")\n\n    # Create table with schema for documents\n    table = db.create_table(\n        \"documents\",\n        schema=pa.schema([\n            pa.field(\"id\", pa.string()),\n            pa.field(\"text\", pa.string()),\n            pa.field(\"vector\", pa.list_(pa.float32(), list_size=768))\n        ])\n    )\n    return table, model\n\nasync def search_similar(table, model, query: str, n_results: int = 3) -> list[dict]:\n    \"\"\"Search for documents simi"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_11", "text": "imilar(table, model, query: str, n_results: int = 3) -> list[dict]:\n    \"\"\"Search for documents similar to the query.\"\"\"\n    query_embedding = model.encode(query)\n    results = table.search(query_embedding).limit(n_results).to_list()\n    return [{\"id\": r[\"id\"], \"text\": r[\"text\"], \"distance\": float(r[\"_distance\"])} for r in results]\n\nasync def main():\n    table, model = await setup_vector_db()\n\n    # Add some documents\n    documents = [\"Apple is a fruit\", \"Orange is citrus\", \"Computer is electron"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_12", "text": " # Add some documents\n    documents = [\"Apple is a fruit\", \"Orange is citrus\", \"Computer is electronic\"]\n    embeddings = model.encode(documents)\n\n    table.add(data=[\n        {\"id\": str(i), \"text\": text, \"vector\": embedding}\n        for i, (text, embedding) in enumerate(zip(documents, embeddings), 1)\n    ])\n\n    # Search\n    results = await search_similar(table, model, \"fruit\")\n    print(results)\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n### DuckDB\n\nHere's the "}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_13", "text": "\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n### DuckDB\n\nHere's the same example using DuckDB:\n\n```python\n# /// script\n# requires-python = \"==3.12\"\n# dependencies = [\n#   \"duckdb\",\n#   \"sentence-transformers\",\n# ]\n# ///\n\nimport duckdb\nfrom sentence_transformers import SentenceTransformer\n\nasync def setup_vector_db() -> tuple[duckdb.DuckDBPyConnection, SentenceTransformer]:\n    \"\"\"Initialize DuckDB with VSS extension and embedding model.\"\"\"\n    # Initialize model\n "}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_14", "text": "ormer]:\n    \"\"\"Initialize DuckDB with VSS extension and embedding model.\"\"\"\n    # Initialize model\n    model = SentenceTransformer(\"BAAI/bge-base-en-v1.5\")\n    vector_dim = model.get_sentence_embedding_dimension()\n\n    # Setup DuckDB with VSS extension\n    conn = duckdb.connect(\":memory:\")\n    conn.install_extension(\"vss\")\n    conn.load_extension(\"vss\")\n\n    # Create table with vector column\n    conn.execute(f\"\"\"\n        CREATE TABLE documents (\n            id VARCHAR,\n            text VARCHAR,\n"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_15", "text": "onn.execute(f\"\"\"\n        CREATE TABLE documents (\n            id VARCHAR,\n            text VARCHAR,\n            vector FLOAT[{vector_dim}]\n        )\n    \"\"\")\n\n    # Create HNSW index for vector similarity search\n    conn.execute(\"CREATE INDEX vector_idx ON documents USING HNSW (vector)\")\n    return conn, model\n\nasync def search_similar(conn: duckdb.DuckDBPyConnection, model: SentenceTransformer,\n                        query: str, n_results: int = 3) -> list[dict]:\n    \"\"\"Search for documents si"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_16", "text": "                       query: str, n_results: int = 3) -> list[dict]:\n    \"\"\"Search for documents similar to query using vector similarity.\"\"\"\n    # Encode query to vector\n    query_vector = model.encode(query).tolist()\n\n    # Search using HNSW index with explicit FLOAT[] cast\n    results = conn.execute(\"\"\"\n        SELECT id, text, array_distance(vector, CAST(? AS FLOAT[768])) as distance\n        FROM documents\n        ORDER BY array_distance(vector, CAST(? AS FLOAT[768]))\n        LIMIT ?\n    \"\""}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_17", "text": "FROM documents\n        ORDER BY array_distance(vector, CAST(? AS FLOAT[768]))\n        LIMIT ?\n    \"\"\", [query_vector, query_vector, n_results]).fetchall()\n\n    return [{\"id\": r[0], \"text\": r[1], \"distance\": float(r[2])} for r in results]\n\nasync def main():\n    conn, model = await setup_vector_db()\n\n    # Add sample documents\n    documents = [\"Apple is a fruit\", \"Orange is citrus\", \"Computer is electronic\"]\n    embeddings = model.encode(documents).tolist()\n\n    # Insert documents and vectors\n    "}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_18", "text": "ctronic\"]\n    embeddings = model.encode(documents).tolist()\n\n    # Insert documents and vectors\n    conn.executemany(\"\"\"\n        INSERT INTO documents (id, text, vector)\n        VALUES (?, ?, ?)\n    \"\"\", [(str(i), text, embedding)\n          for i, (text, embedding) in enumerate(zip(documents, embeddings), 1)])\n\n    # Search similar documents\n    results = await search_similar(conn, model, \"fruit\")\n    print(results)\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```"}
{"source": "Course_content_jan_2025/vector-databases.md", "chunk_id": "vector-databases.md_part_19", "text": "\n    print(results)\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```"}
{"source": "Course_content_jan_2025/scraping-pdfs-with-tabula.md", "chunk_id": "scraping-pdfs-with-tabula.md_part_1", "text": "## Scraping PDFs with Tabula\n\n[](https://youtu.be/yDoKlKyxClQ)\n\nYou'll learn how to scrape tables from PDFs using the `tabula` Python library, covering:\n\n- **Import Libraries**: Use Beautiful Soup for URL parsing and Tabula for extracting tables from PDFs.\n- **Specify Save Location**: Mount Google Drive to save scraped PDFs.\n- **Identify PDF URLs**: Parse the given URL to identify and select all PDF links.\n- **Download PDFs**: Loop through identified links, saving each PDF to the specified locat"}
{"source": "Course_content_jan_2025/scraping-pdfs-with-tabula.md", "chunk_id": "scraping-pdfs-with-tabula.md_part_2", "text": "DF links.\n- **Download PDFs**: Loop through identified links, saving each PDF to the specified location.\n- **Extract Tables**: Use Tabula to read tabular content from the downloaded PDFs.\n- **Control Extraction Area**: Specify page and area coordinates to accurately extract tables, avoiding extraneous text.\n- **Save Extracted Data**: Convert the extracted table data into structured formats like CSV for further analysis.\n\nHere are links and references:\n\n- [PDF Scraping - Notebook](https://colab.r"}
{"source": "Course_content_jan_2025/scraping-pdfs-with-tabula.md", "chunk_id": "scraping-pdfs-with-tabula.md_part_3", "text": "V for further analysis.\n\nHere are links and references:\n\n- [PDF Scraping - Notebook](https://colab.research.google.com/drive/102Fv2Ji0J4mvao3mCse52E7Th8bZiuyf)\n- Learn about the [`tabula` package](https://tabula-py.readthedocs.io/en/latest/tabula.html)\n- Learn about the [`pandas` package](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html). [Video](https://youtu.be/vmEHCJofslg)"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_1", "text": "## Data Preparation in the Shell\n\n[](https://youtu.be/XEdy4WK70vU)\n\nYou'll learn how to use UNIX tools to process and clean data, covering:\n\n- `curl` (or `wget`) to fetch data from websites.\n- `gzip` (or `xz`) to compress and decompress files.\n- `wc` to count lines, words, and characters in text.\n- `head` and `tail` to get the start and end of files.\n- `cut` to extract specific columns from text.\n- `uniq` to de-duplicate lines.\n- `sort` to sort lines.\n- `grep` to filter lines containing specific"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_2", "text": "- `uniq` to de-duplicate lines.\n- `sort` to sort lines.\n- `grep` to filter lines containing specific text.\n- `sed` to search and replace text.\n- `awk` for more complex text processing.\n\n[Data preparation in the shell - Notebook](https://colab.research.google.com/drive/1KSFkQDK0v__XWaAaHKeQuIAwYV0dkTe8)\n\nUNIX has a great set of tools to clean and analyze data.\n\nThis is important because [these tools are](https://jeroenjanssens.com/dsatcl/chapter-1-introduction#why-data-science-at-the-command-line"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_3", "text": "s are](https://jeroenjanssens.com/dsatcl/chapter-1-introduction#why-data-science-at-the-command-line):\n\n- **Agile**: You can quickly explore data and see the results.\n- **Fast**: They're written in C. They're easily parallelizable.\n- **Popular**: Most systems and languages support shell commands.\n\nIn [this notebook](https://colab.research.google.com/drive/1KSFkQDK0v__XWaAaHKeQuIAwYV0dkTe8), we'll explore log files with these shell-based commands.\n\n## Download logs\n\n[This file](https://drive.goog"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_4", "text": "explore log files with these shell-based commands.\n\n## Download logs\n\n[This file](https://drive.google.com/file/d/1J1ed4iHFAiS1Xq55aP858OEyEMQ-uMnE/view) has Apache web server logs for the site [s-anand.net](https://s-anand.net/) in the month of April 2024.\n\nYou can download files using `wget` or `curl`. One of these is usually available by default on most systems.\n\nWe'll use `curl` to download the file from the URL `https://drive.usercontent.google.com/uc?id=1J1ed4iHFAiS1Xq55aP858OEyEMQ-uMnE&ex"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_5", "text": "e file from the URL `https://drive.usercontent.google.com/uc?id=1J1ed4iHFAiS1Xq55aP858OEyEMQ-uMnE&export=download`\n\n```python\n# curl has LOTs of options. You won't remember most, but it's fun to geek out.\n!curl --help all\n```\n\n    Usage: curl [options...] <url>\n         --abstract-unix-socket <path> Connect via abstract Unix domain socket\n         --alt-svc <file name> Enable alt-svc with this cache file\n         --anyauth            Pick any authentication method\n     -a, --append             A"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_6", "text": "he file\n         --anyauth            Pick any authentication method\n     -a, --append             Append to target file when uploading\n         --aws-sigv4 <provider1[:provider2[:region[:service]]]> Use AWS V4 signature authentication\n         --basic              Use HTTP Basic Authentication\n         --cacert <file>      CA certificate to verify peer against\n         --capath <dir>       CA directory to verify peer against\n     -E, --cert <certificate[:password]> Client certificate file and p"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_7", "text": "ectory to verify peer against\n     -E, --cert <certificate[:password]> Client certificate file and password\n         --cert-status        Verify the status of the server cert via OCSP-staple\n         --cert-type <type>   Certificate type (DER/PEM/ENG)\n         --ciphers <list of ciphers> SSL ciphers to use\n         --compressed         Request compressed response\n         --compressed-ssh     Enable SSH compression\n     -K, --config <file>      Read config from a file\n         --connect-timeout "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_8", "text": "le SSH compression\n     -K, --config <file>      Read config from a file\n         --connect-timeout <fractional seconds> Maximum time allowed for connection\n         --connect-to <HOST1:PORT1:HOST2:PORT2> Connect to host\n     -C, --continue-at <offset> Resumed transfer offset\n     -b, --cookie <data|filename> Send cookies from string/file\n     -c, --cookie-jar <filename> Write cookies to <filename> after operation\n         --create-dirs        Create necessary local directory hierarchy\n         "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_9", "text": "> after operation\n         --create-dirs        Create necessary local directory hierarchy\n         --create-file-mode <mode> File mode for created files\n         --crlf               Convert LF to CRLF in upload\n         --crlfile <file>     Use this CRL list\n         --curves <algorithm list> (EC) TLS key exchange algorithm(s) to request\n     -d, --data <data>        HTTP POST data\n         --data-ascii <data>  HTTP POST ASCII data\n         --data-binary <data> HTTP POST binary data\n         -"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_10", "text": "ta-ascii <data>  HTTP POST ASCII data\n         --data-binary <data> HTTP POST binary data\n         --data-raw <data>    HTTP POST data, '@' allowed\n         --data-urlencode <data> HTTP POST data url encoded\n         --delegation <LEVEL> GSS-API delegation permission\n         --digest             Use HTTP Digest Authentication\n     -q, --disable            Disable .curlrc\n         --disable-eprt       Inhibit using EPRT or LPRT\n         --disable-epsv       Inhibit using EPSV\n         --disallow"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_11", "text": "     Inhibit using EPRT or LPRT\n         --disable-epsv       Inhibit using EPSV\n         --disallow-username-in-url Disallow username in url\n         --dns-interface <interface> Interface to use for DNS requests\n         --dns-ipv4-addr <address> IPv4 address to use for DNS requests\n         --dns-ipv6-addr <address> IPv6 address to use for DNS requests\n         --dns-servers <addresses> DNS server addrs to use\n         --doh-cert-status    Verify the status of the DoH server cert via OCSP-stap"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_12", "text": "er addrs to use\n         --doh-cert-status    Verify the status of the DoH server cert via OCSP-staple\n         --doh-insecure       Allow insecure DoH server connections\n         --doh-url <URL>      Resolve host names over DoH\n     -D, --dump-header <filename> Write the received headers to <filename>\n         --egd-file <file>    EGD socket path for random data\n         --engine <name>      Crypto engine to use\n         --etag-compare <file> Pass an ETag from a file as a custom header\n        "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_13", "text": "to engine to use\n         --etag-compare <file> Pass an ETag from a file as a custom header\n         --etag-save <file>   Parse ETag from a request and save it to a file\n         --expect100-timeout <seconds> How long to wait for 100-continue\n     -f, --fail               Fail silently (no output at all) on HTTP errors\n         --fail-early         Fail on first transfer error, do not continue\n         --fail-with-body     Fail on HTTP errors but save the body\n         --false-start        Enabl"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_14", "text": "      --fail-with-body     Fail on HTTP errors but save the body\n         --false-start        Enable TLS False Start\n     -F, --form <name=content> Specify multipart MIME data\n         --form-escape        Escape multipart form field/file names using backslash\n         --form-string <name=string> Specify multipart MIME data\n         --ftp-account <data> Account data string\n         --ftp-alternative-to-user <command> String to replace USER [name]\n         --ftp-create-dirs    Create the remote "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_15", "text": "ive-to-user <command> String to replace USER [name]\n         --ftp-create-dirs    Create the remote dirs if not present\n         --ftp-method <method> Control CWD usage\n         --ftp-pasv           Use PASV/EPSV instead of PORT\n     -P, --ftp-port <address> Use PORT instead of PASV\n         --ftp-pret           Send PRET before PASV\n         --ftp-skip-pasv-ip   Skip the IP address for PASV\n         --ftp-ssl-ccc        Send CCC after authenticating\n         --ftp-ssl-ccc-mode <active/passive> "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_16", "text": "    --ftp-ssl-ccc        Send CCC after authenticating\n         --ftp-ssl-ccc-mode <active/passive> Set CCC mode\n         --ftp-ssl-control    Require SSL/TLS for FTP login, clear for transfer\n     -G, --get                Put the post data in the URL and use GET\n     -g, --globoff            Disable URL sequences and ranges using {} and []\n         --happy-eyeballs-timeout-ms <milliseconds> Time for IPv6 before trying IPv4\n         --haproxy-protocol   Send HAProxy PROXY protocol v1 header\n    "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_17", "text": "for IPv6 before trying IPv4\n         --haproxy-protocol   Send HAProxy PROXY protocol v1 header\n     -I, --head               Show document info only\n     -H, --header <header/@file> Pass custom header(s) to server\n     -h, --help <category>    Get help for commands\n         --hostpubmd5 <md5>   Acceptable MD5 hash of the host public key\n         --hostpubsha256 <sha256> Acceptable SHA256 hash of the host public key\n         --hsts <file name>   Enable HSTS with this cache file\n         --http0."}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_18", "text": "the host public key\n         --hsts <file name>   Enable HSTS with this cache file\n         --http0.9            Allow HTTP 0.9 responses\n     -0, --http1.0            Use HTTP 1.0\n         --http1.1            Use HTTP 1.1\n         --http2              Use HTTP 2\n         --http2-prior-knowledge Use HTTP 2 without HTTP/1.1 Upgrade\n         --http3              Use HTTP v3\n         --ignore-content-length Ignore the size of the remote resource\n     -i, --include            Include protocol respo"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_19", "text": "t-length Ignore the size of the remote resource\n     -i, --include            Include protocol response headers in the output\n     -k, --insecure           Allow insecure server connections\n         --interface <name>   Use network INTERFACE (or address)\n     -4, --ipv4               Resolve names to IPv4 addresses\n     -6, --ipv6               Resolve names to IPv6 addresses\n     -j, --junk-session-cookies Ignore session cookies read from file\n         --keepalive-time <seconds> Interval time f"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_20", "text": "on-cookies Ignore session cookies read from file\n         --keepalive-time <seconds> Interval time for keepalive probes\n         --key <key>          Private key file name\n         --key-type <type>    Private key file type (DER/PEM/ENG)\n         --krb <level>        Enable Kerberos with security <level>\n         --libcurl <file>     Dump libcurl equivalent code of this command line\n         --limit-rate <speed> Limit transfer speed to RATE\n     -l, --list-only          List only mode\n         -"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_21", "text": "it-rate <speed> Limit transfer speed to RATE\n     -l, --list-only          List only mode\n         --local-port <num/range> Force use of RANGE for local port numbers\n     -L, --location           Follow redirects\n         --location-trusted   Like --location, and send auth to other hosts\n         --login-options <options> Server login options\n         --mail-auth <address> Originator address of the original email\n         --mail-from <address> Mail from this address\n         --mail-rcpt <address"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_22", "text": "e original email\n         --mail-from <address> Mail from this address\n         --mail-rcpt <address> Mail to this address\n         --mail-rcpt-allowfails Allow RCPT TO command to fail for some recipients\n     -M, --manual             Display the full manual\n         --max-filesize <bytes> Maximum file size to download\n         --max-redirs <num>   Maximum number of redirects allowed\n     -m, --max-time <fractional seconds> Maximum time allowed for transfer\n         --metalink           Process "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_23", "text": "x-time <fractional seconds> Maximum time allowed for transfer\n         --metalink           Process given URLs as metalink XML file\n         --negotiate          Use HTTP Negotiate (SPNEGO) authentication\n     -n, --netrc              Must read .netrc for user name and password\n         --netrc-file <filename> Specify FILE for netrc\n         --netrc-optional     Use either .netrc or URL\n     -:, --next               Make next URL use its separate set of options\n         --no-alpn            Disa"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_24", "text": "-next               Make next URL use its separate set of options\n         --no-alpn            Disable the ALPN TLS extension\n     -N, --no-buffer          Disable buffering of the output stream\n         --no-keepalive       Disable TCP keepalive on the connection\n         --no-npn             Disable the NPN TLS extension\n         --no-progress-meter  Do not show the progress meter\n         --no-sessionid       Disable SSL session-ID reusing\n         --noproxy <no-proxy-list> List of hosts whi"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_25", "text": "-sessionid       Disable SSL session-ID reusing\n         --noproxy <no-proxy-list> List of hosts which do not use proxy\n         --ntlm               Use HTTP NTLM authentication\n         --ntlm-wb            Use HTTP NTLM authentication with winbind\n         --oauth2-bearer <token> OAuth 2 Bearer Token\n     -o, --output <file>      Write to file instead of stdout\n         --output-dir <dir>   Directory to save files in\n     -Z, --parallel           Perform transfers in parallel\n         --paral"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_26", "text": "ectory to save files in\n     -Z, --parallel           Perform transfers in parallel\n         --parallel-immediate Do not wait for multiplexing (with --parallel)\n         --parallel-max <num> Maximum concurrency for parallel transfers\n         --pass <phrase>      Pass phrase for the private key\n         --path-as-is         Do not squash .. sequences in URL path\n         --pinnedpubkey <hashes> FILE/HASHES Public key to verify peer against\n         --post301            Do not switch to GET after"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_27", "text": "LE/HASHES Public key to verify peer against\n         --post301            Do not switch to GET after following a 301\n         --post302            Do not switch to GET after following a 302\n         --post303            Do not switch to GET after following a 303\n         --preproxy [protocol://]host[:port] Use this proxy first\n     -#, --progress-bar       Display transfer progress as a bar\n         --proto <protocols>  Enable/disable PROTOCOLS\n         --proto-default <protocol> Use PROTOCOL fo"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_28", "text": "   --proto <protocols>  Enable/disable PROTOCOLS\n         --proto-default <protocol> Use PROTOCOL for any URL missing a scheme\n         --proto-redir <protocols> Enable/disable PROTOCOLS on redirect\n     -x, --proxy [protocol://]host[:port] Use this proxy\n         --proxy-anyauth      Pick any proxy authentication method\n         --proxy-basic        Use Basic authentication on the proxy\n         --proxy-cacert <file> CA certificate to verify peer against for proxy\n         --proxy-capath <dir> "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_29", "text": "--proxy-cacert <file> CA certificate to verify peer against for proxy\n         --proxy-capath <dir> CA directory to verify peer against for proxy\n         --proxy-cert <cert[:passwd]> Set client certificate for proxy\n         --proxy-cert-type <type> Client certificate type for HTTPS proxy\n         --proxy-ciphers <list> SSL ciphers to use for proxy\n         --proxy-crlfile <file> Set a CRL list for proxy\n         --proxy-digest       Use Digest authentication on the proxy\n         --proxy-heade"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_30", "text": "or proxy\n         --proxy-digest       Use Digest authentication on the proxy\n         --proxy-header <header/@file> Pass custom header(s) to proxy\n         --proxy-insecure     Do HTTPS proxy connections without verifying the proxy\n         --proxy-key <key>    Private key for HTTPS proxy\n         --proxy-key-type <type> Private key file type for proxy\n         --proxy-negotiate    Use HTTP Negotiate (SPNEGO) authentication on the proxy\n         --proxy-ntlm         Use NTLM authentication on t"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_31", "text": "iate (SPNEGO) authentication on the proxy\n         --proxy-ntlm         Use NTLM authentication on the proxy\n         --proxy-pass <phrase> Pass phrase for the private key for HTTPS proxy\n         --proxy-pinnedpubkey <hashes> FILE/HASHES public key to verify proxy with\n         --proxy-service-name <name> SPNEGO proxy service name\n         --proxy-ssl-allow-beast Allow security flaw for interop for HTTPS proxy\n         --proxy-ssl-auto-client-cert Use auto client certificate for proxy (Schannel"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_32", "text": "or HTTPS proxy\n         --proxy-ssl-auto-client-cert Use auto client certificate for proxy (Schannel)\n         --proxy-tls13-ciphers <ciphersuite list> TLS 1.3 proxy cipher suites\n         --proxy-tlsauthtype <type> TLS authentication type for HTTPS proxy\n         --proxy-tlspassword <string> TLS password for HTTPS proxy\n         --proxy-tlsuser <name> TLS username for HTTPS proxy\n         --proxy-tlsv1        Use TLSv1 for HTTPS proxy\n     -U, --proxy-user <user:password> Proxy user and passwor"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_33", "text": "-tlsv1        Use TLSv1 for HTTPS proxy\n     -U, --proxy-user <user:password> Proxy user and password\n         --proxy1.0 <host[:port]> Use HTTP/1.0 proxy on given port\n     -p, --proxytunnel        Operate through an HTTP proxy tunnel (using CONNECT)\n         --pubkey <key>       SSH Public key file name\n     -Q, --quote <command>    Send command(s) to server before transfer\n         --random-file <file> File for reading random data from\n     -r, --range <range>      Retrieve only the bytes wit"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_34", "text": "e <file> File for reading random data from\n     -r, --range <range>      Retrieve only the bytes within RANGE\n         --raw                Do HTTP \"raw\"; no transfer decoding\n     -e, --referer <URL>      Referrer URL\n     -J, --remote-header-name Use the header-provided filename\n     -O, --remote-name        Write output to a file named as the remote file\n         --remote-name-all    Use the remote file name for all URLs\n     -R, --remote-time        Set the remote file's time on the local ou"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_35", "text": "mote file name for all URLs\n     -R, --remote-time        Set the remote file's time on the local output\n     -X, --request <method>   Specify request method to use\n         --request-target <path> Specify the target for this request\n         --resolve <[+]host:port:addr[,addr]...> Resolve the host+port to this address\n         --retry <num>        Retry request if transient problems occur\n         --retry-all-errors   Retry all errors (use with --retry)\n         --retry-connrefused  Retry on co"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_36", "text": "  --retry-all-errors   Retry all errors (use with --retry)\n         --retry-connrefused  Retry on connection refused (use with --retry)\n         --retry-delay <seconds> Wait time between retries\n         --retry-max-time <seconds> Retry only within this period\n         --sasl-authzid <identity> Identity for SASL PLAIN authentication\n         --sasl-ir            Enable initial response in SASL authentication\n         --service-name <name> SPNEGO service name\n     -S, --show-error         Show er"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_37", "text": "hentication\n         --service-name <name> SPNEGO service name\n     -S, --show-error         Show error even when -s is used\n     -s, --silent             Silent mode\n         --socks4 <host[:port]> SOCKS4 proxy on given host + port\n         --socks4a <host[:port]> SOCKS4a proxy on given host + port\n         --socks5 <host[:port]> SOCKS5 proxy on given host + port\n         --socks5-basic       Enable username/password auth for SOCKS5 proxies\n         --socks5-gssapi      Enable GSS-API auth for "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_38", "text": "ble username/password auth for SOCKS5 proxies\n         --socks5-gssapi      Enable GSS-API auth for SOCKS5 proxies\n         --socks5-gssapi-nec  Compatibility with NEC SOCKS5 server\n         --socks5-gssapi-service <name> SOCKS5 proxy service name for GSS-API\n         --socks5-hostname <host[:port]> SOCKS5 proxy, pass host name to proxy\n     -Y, --speed-limit <speed> Stop transfers slower than this\n     -y, --speed-time <seconds> Trigger 'speed-limit' abort after this time\n         --ssl        "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_39", "text": "s\n     -y, --speed-time <seconds> Trigger 'speed-limit' abort after this time\n         --ssl                Try SSL/TLS\n         --ssl-allow-beast    Allow security flaw to improve interop\n         --ssl-auto-client-cert Use auto client certificate (Schannel)\n         --ssl-no-revoke      Disable cert revocation checks (Schannel)\n         --ssl-reqd           Require SSL/TLS\n         --ssl-revoke-best-effort Ignore missing/offline cert CRL dist points\n     -2, --sslv2              Use SSLv2\n    "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_40", "text": "best-effort Ignore missing/offline cert CRL dist points\n     -2, --sslv2              Use SSLv2\n     -3, --sslv3              Use SSLv3\n         --stderr <file>      Where to redirect stderr\n         --styled-output      Enable styled output for HTTP headers\n         --suppress-connect-headers Suppress proxy CONNECT response headers\n         --tcp-fastopen       Use TCP Fast Open\n         --tcp-nodelay        Use the TCP_NODELAY option\n     -t, --telnet-option <opt=val> Set telnet option\n       "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_41", "text": "delay        Use the TCP_NODELAY option\n     -t, --telnet-option <opt=val> Set telnet option\n         --tftp-blksize <value> Set TFTP BLKSIZE option\n         --tftp-no-options    Do not send any TFTP options\n     -z, --time-cond <time>   Transfer based on a time condition\n         --tls-max <VERSION>  Set maximum allowed TLS version\n         --tls13-ciphers <ciphersuite list> TLS 1.3 cipher suites to use\n         --tlsauthtype <type> TLS authentication type\n         --tlspassword <string> TLS pa"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_42", "text": " to use\n         --tlsauthtype <type> TLS authentication type\n         --tlspassword <string> TLS password\n         --tlsuser <name>     TLS user name\n     -1, --tlsv1              Use TLSv1.0 or greater\n         --tlsv1.0            Use TLSv1.0 or greater\n         --tlsv1.1            Use TLSv1.1 or greater\n         --tlsv1.2            Use TLSv1.2 or greater\n         --tlsv1.3            Use TLSv1.3 or greater\n         --tr-encoding        Request compressed transfer encoding\n         --trace "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_43", "text": "v1.3 or greater\n         --tr-encoding        Request compressed transfer encoding\n         --trace <file>       Write a debug trace to FILE\n         --trace-ascii <file> Like --trace, but without hex output\n         --trace-time         Add time stamps to trace/verbose output\n         --unix-socket <path> Connect through this Unix domain socket\n     -T, --upload-file <file> Transfer local FILE to destination\n         --url <url>          URL to work with\n     -B, --use-ascii          Use ASCII/"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_44", "text": " destination\n         --url <url>          URL to work with\n     -B, --use-ascii          Use ASCII/text transfer\n     -u, --user <user:password> Server user and password\n     -A, --user-agent <name>  Send User-Agent <name> to server\n     -v, --verbose            Make the operation more talkative\n     -V, --version            Show version number and quit\n     -w, --write-out <format> Use output FORMAT after completion\n         --xattr              Store metadata in extended file attributes\n\n```p"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_45", "text": "RMAT after completion\n         --xattr              Store metadata in extended file attributes\n\n```python\n# We're using 3 curl options here:\n#   --continue-at - continues the download from where it left off. It won't download if already downloaded\n#   --location downloads the file even if the link sends us somewhere else\n#   --output FILE saves the downloaded output as\n!curl --continue-at - \\\n  --location \\\n  --output s-anand.net-Apr-2024.gz \\\n  https://drive.usercontent.google.com/uc?id=1J1ed4i"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_46", "text": "location \\\n  --output s-anand.net-Apr-2024.gz \\\n  https://drive.usercontent.google.com/uc?id=1J1ed4iHFAiS1Xq55aP858OEyEMQ-uMnE&export=download\n```\n\n      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                     Dload  Upload   Total   Spent    Left  Speed\n      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n    100 5665k  100 5665k    0     0  3139k      0  0:00:01  0:00:01 --:--:-- 9602k\n\n## List files\n\n`ls`"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_47", "text": " 100 5665k  100 5665k    0     0  3139k      0  0:00:01  0:00:01 --:--:-- 9602k\n\n## List files\n\n`ls` lists files. It too has lots of options.\n\n```python\n!ls --help\n```\n\n    Usage: ls [OPTION]... [FILE]...\n    List information about the FILEs (the current directory by default).\n    Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n\n    Mandatory arguments to long options are mandatory for short options too.\n      -a, --all                  do not ignore entries starting wi"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_48", "text": " mandatory for short options too.\n      -a, --all                  do not ignore entries starting with .\n      -A, --almost-all           do not list implied . and ..\n          --author               with -l, print the author of each file\n      -b, --escape               print C-style escapes for nongraphic characters\n          --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\n                                   e.g., '--block-size=M'; see SIZE format below\n      -B, --ignor"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_49", "text": ";\n                                   e.g., '--block-size=M'; see SIZE format below\n      -B, --ignore-backups       do not list implied entries ending with ~\n      -c                         with -lt: sort by, and show, ctime (time of last\n                                   modification of file status information);\n                                   with -l: show ctime and sort by name;\n                                   otherwise: sort by ctime, newest first\n      -C                         lis"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_50", "text": "                         otherwise: sort by ctime, newest first\n      -C                         list entries by columns\n          --color[=WHEN]         colorize the output; WHEN can be 'always' (default\n                                   if omitted), 'auto', or 'never'; more info below\n      -d, --directory            list directories themselves, not their contents\n      -D, --dired                generate output designed for Emacs' dired mode\n      -f                         do not sort, enab"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_51", "text": "   generate output designed for Emacs' dired mode\n      -f                         do not sort, enable -aU, disable -ls --color\n      -F, --classify             append indicator (one of */=>@|) to entries\n          --file-type            likewise, except do not append '*'\n          --format=WORD          across -x, commas -m, horizontal -x, long -l,\n                                   single-column -1, verbose -l, vertical -C\n          --full-time            like -l --time-style=full-iso\n      -g"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_52", "text": " -1, verbose -l, vertical -C\n          --full-time            like -l --time-style=full-iso\n      -g                         like -l, but do not list owner\n          --group-directories-first\n                                 group directories before files;\n                                   can be augmented with a --sort option, but any\n                                   use of --sort=none (-U) disables grouping\n      -G, --no-group             in a long listing, don't print group names\n      -h"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_53", "text": "sables grouping\n      -G, --no-group             in a long listing, don't print group names\n      -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\n          --si                   likewise, but use powers of 1000 not 1024\n      -H, --dereference-command-line\n                                 follow symbolic links listed on the command line\n          --dereference-command-line-symlink-to-dir\n                                 follow each command line symbolic link\n        "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_54", "text": "line-symlink-to-dir\n                                 follow each command line symbolic link\n                                   that points to a directory\n          --hide=PATTERN         do not list implied entries matching shell PATTERN\n                                   (overridden by -a or -A)\n          --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\n                                   (default if omitted), 'auto', or 'never'\n          --indicator-style=WORD  append indicator"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_55", "text": "         (default if omitted), 'auto', or 'never'\n          --indicator-style=WORD  append indicator with style WORD to entry names:\n                                   none (default), slash (-p),\n                                   file-type (--file-type), classify (-F)\n      -i, --inode                print the index number of each file\n      -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\n      -k, --kibibytes            default to 1024-byte blocks for disk usage;\n"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_56", "text": "matching shell PATTERN\n      -k, --kibibytes            default to 1024-byte blocks for disk usage;\n                                   used only with -s and per directory totals\n      -l                         use a long listing format\n      -L, --dereference          when showing file information for a symbolic\n                                   link, show information for the file the link\n                                   references rather than for the link itself\n      -m                   "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_57", "text": "                              references rather than for the link itself\n      -m                         fill width with a comma separated list of entries\n      -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\n      -N, --literal              print entry names without quoting\n      -o                         like -l, but do not list group information\n      -p, --indicator-style=slash\n                                 append / indicator to directories\n      -q, --hide-contr"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_58", "text": "tyle=slash\n                                 append / indicator to directories\n      -q, --hide-control-chars   print ? instead of nongraphic characters\n          --show-control-chars   show nongraphic characters as-is (the default,\n                                   unless program is 'ls' and output is a terminal)\n      -Q, --quote-name           enclose entry names in double quotes\n          --quoting-style=WORD   use quoting style WORD for entry names:\n                                   litera"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_59", "text": "oting-style=WORD   use quoting style WORD for entry names:\n                                   literal, locale, shell, shell-always,\n                                   shell-escape, shell-escape-always, c, escape\n                                   (overrides QUOTING_STYLE environment variable)\n      -r, --reverse              reverse order while sorting\n      -R, --recursive            list subdirectories recursively\n      -s, --size                 print the allocated size of each file, in block"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_60", "text": "ctories recursively\n      -s, --size                 print the allocated size of each file, in blocks\n      -S                         sort by file size, largest first\n          --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\n                                   time (-t), version (-v), extension (-X)\n          --time=WORD            change the default of using modification times;\n                                   access time (-u): atime, access, use;\n                  "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_61", "text": "n times;\n                                   access time (-u): atime, access, use;\n                                   change time (-c): ctime, status;\n                                   birth time: birth, creation;\n                                 with -l, WORD determines which time to show;\n                                 with --sort=time, sort by WORD (newest first)\n          --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\n      -t                         sort by time, "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_62", "text": "TYLE  time/date format with -l; see TIME_STYLE below\n      -t                         sort by time, newest first; see --time\n      -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\n      -u                         with -lt: sort by, and show, access time;\n                                   with -l: show access time and sort by name;\n                                   otherwise: sort by access time, newest first\n      -U                         do not sort; list entries in dir"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_63", "text": " sort by access time, newest first\n      -U                         do not sort; list entries in directory order\n      -v                         natural sort of (version) numbers within text\n      -w, --width=COLS           set output width to COLS.  0 means no limit\n      -x                         list entries by lines instead of by columns\n      -X                         sort alphabetically by entry extension\n      -Z, --context              print any security context of each file\n      -1 "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_64", "text": "y entry extension\n      -Z, --context              print any security context of each file\n      -1                         list one file per line.  Avoid '\\n' with -q or -b\n          --help     display this help and exit\n          --version  output version information and exit\n\n    The SIZE argument is an integer and optional unit (example: 10K is 10*1024).\n    Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\n    Binary prefixes can be used, too: KiB=K, MiB=M, and so on"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_65", "text": "f 1024) or KB,MB,... (powers of 1000).\n    Binary prefixes can be used, too: KiB=K, MiB=M, and so on.\n\n    The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\n    FORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\n    then FORMAT1 applies to non-recent files and FORMAT2 to recent files.\n    TIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\n    Also the TIME_STYLE environment variable sets the default style to use.\n\n  "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_66", "text": "de the POSIX locale.\n    Also the TIME_STYLE environment variable sets the default style to use.\n\n    Using color to distinguish file types is disabled both by default and\n    with --color=never.  With --color=auto, ls emits color codes only when\n    standard output is connected to a terminal.  The LS_COLORS environment\n    variable can change the settings.  Use the dircolors command to set it.\n\n    Exit status:\n     0  if OK,\n     1  if minor problems (e.g., cannot access subdirectory),\n     2 "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_67", "text": "   Exit status:\n     0  if OK,\n     1  if minor problems (e.g., cannot access subdirectory),\n     2  if serious trouble (e.g., cannot access command-line argument).\n\n    GNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n    Full documentation <https://www.gnu.org/software/coreutils/ls>\n    or available locally via: info '(coreutils) ls invocation'\n\n```python\n# By default, it just lists all file names\n!ls\n```\n\n    sample_data  s-anand.net-Apr-2024.gz\n\n```python\n# If we want to "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_68", "text": "t lists all file names\n!ls\n```\n\n    sample_data  s-anand.net-Apr-2024.gz\n\n```python\n# If we want to see the size of the file, use `-l` for the long-listing format\n!ls -l\n```\n\n    total 5672\n    drwxr-xr-x 1 root root    4096 Jun  6 14:21 sample_data\n    -rw-r--r-- 1 root root 5801198 Jun  9 05:18 s-anand.net-Apr-2024.gz\n\n## Uncompress the log file\n\n`gzip` is the most popular compression format on the web. It's fast and pretty good. (`xz` is much better but slower.)\n\nSince the file has a `.gz` ex"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_69", "text": "the web. It's fast and pretty good. (`xz` is much better but slower.)\n\nSince the file has a `.gz` extension, we know it's compressed using `gzip`. We can use `gzip -d FILE.gz` to decompress the file. It'll replace `FILE.gz` with `FILE`.\n\n(Compression works the opposite way. `gzip FILE` replaces `FILE` with `FILE.gz`)[link text](https://)\n\n```python\n# gzip -d is the same as gunzip. They both decompress a GZIP-ed file\n!gzip -d s-anand.net-Apr-2024.gz\n```\n\n```python\n# Let's list the files and see t"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_70", "text": "ress a GZIP-ed file\n!gzip -d s-anand.net-Apr-2024.gz\n```\n\n```python\n# Let's list the files and see the size\n!ls -l\n```\n\n    total 50832\n    drwxr-xr-x 1 root root     4096 Jun  6 14:21 sample_data\n    -rw-r--r-- 1 root root 52044491 Jun  9 05:18 s-anand.net-Apr-2024\n\nIn this case, a file that was ~5.8MiB became ~52MiB, roughly 10 times larger. Clearly, it's more efficient to store and transport compressed files -- especitally if they're plain text.\n\n## Preview the logs\n\nTo see the first few line"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_71", "text": "mpressed files -- especitally if they're plain text.\n\n## Preview the logs\n\nTo see the first few lines or the last few lines of a text file, use `head` or `tail`_italicized text_\n\n```python\n# Show the first 5 lines\n!head -n 5 s-anand.net-Apr-2024\n```\n\n    17.241.219.11 - - [31/Mar/2024:07:16:50 -0500] \"GET /hindi/Hari_Puttar_-_A_Comedy_of_Terrors~Meri_Yaadon_Mein_Hai_Tu HTTP/1.1\" 200 2839 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_72", "text": "lla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 Safari/605.1.15 (Applebot/0.1; +http://www.apple.com/go/applebot)\" www.s-anand.net 192.254.190.216\n    17.241.75.154 - - [31/Mar/2024:07:17:40 -0500] \"GET /hindimp3/~AAN_MILO_SAJNA%3DRANG_RANG_KE_PHOOL_KHILE HTTP/1.1\" 200 2786 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 Safari/605.1.15 (Applebot/0.1; +http://www.apple.com/go/applebot"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_73", "text": " (KHTML, like Gecko) Version/13.1.1 Safari/605.1.15 (Applebot/0.1; +http://www.apple.com/go/applebot)\" www.s-anand.net 192.254.190.216\n    101.44.248.120 - - [31/Mar/2024:07:19:03 -0500] \"GET /hindi/BRAHMCHARI HTTP/1.1\" 200 2757 \"http://www.s-anand.net/hindi/BRAHMCHARI\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36\" www.s-anand.net 192.254.190.216\n    17.241.227.200 - - [31/Mar/2024:07:19:31 -0500] \"GET /malayalam/Kaarunyam"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_74", "text": "nd.net 192.254.190.216\n    17.241.227.200 - - [31/Mar/2024:07:19:31 -0500] \"GET /malayalam/Kaarunyam~Valampiri_Sangil HTTP/1.1\" 200 2749 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 Safari/605.1.15 (Applebot/0.1; +http://www.apple.com/go/applebot)\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:19:41 -0500] \"GET /blog/matching-misspelt-tamil-movie-names/feed/ HTTP/1.1\" 200 1105 \"-\" \"Mozilla/5.0 (X11; Linux i686"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_75", "text": "/blog/matching-misspelt-tamil-movie-names/feed/ HTTP/1.1\" 200 1105 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n\n```python\n# Show the last 5 files\n!tail -n 5 s-anand.net-Apr-2024\n```\n\n    47.128.125.180 - - [30/Apr/2024:07:07:47 -0500] \"GET /tamil/Subramaniyapuram HTTP/1.1\" 406 226 \"-\" \"Mozilla/5.0 (compatible; Bytespider; spider-feedback@bytedance.com) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_76", "text": "patible; Bytespider; spider-feedback@bytedance.com) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.0.0 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [30/Apr/2024:07:10:27 -0500] \"GET /blog/bollywood-actress-jigsaw-quiz/feed/ HTTP/1.1\" 200 1072 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n    40.77.167.48 - - [30/Apr/2024:07:11:10 -0500] \"GET /tamilmp3 HTTP/1.1\" 200 4157 \"-\" \""}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_77", "text": "54.190.216\n    40.77.167.48 - - [30/Apr/2024:07:11:10 -0500] \"GET /tamilmp3 HTTP/1.1\" 200 4157 \"-\" \"Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/116.0.1938.76 Safari/537.36\" www.s-anand.net 192.254.190.216\n    52.167.144.19 - - [30/Apr/2024:07:11:15 -0500] \"GET /malayalam/Ayirathil%20Oruvan HTTP/1.1\" 403 450 \"-\" \"Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chr"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_78", "text": "ppleWebKit/537.36 (KHTML, like Gecko; compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm) Chrome/116.0.1938.76 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [30/Apr/2024:07:11:31 -0500] \"GET /blog/2003-mumbai-bloggers-meet-photos/feed/ HTTP/1.1\" 200 686 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n\nClearly, the data is from around 31 Mar 2024 a bit after 7 am EST (GMT-5) u"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_79", "text": "and.net 192.254.190.216\n\nClearly, the data is from around 31 Mar 2024 a bit after 7 am EST (GMT-5) until 30 Apr 2024, a bit after 7 am EST.\n\nEach line is an Apache log record. It has a lot of data. Some are clear. For example, taking the last row:\n\n- `37.59.21.100` is the IP address that made a request. That's from [OVH](https://www.whois.com/whois/37.59.21.100) - a French cloud provider. Maybe a bot.\n- `[30/Apr/2024:07:11:31 -0500]` is the time of the request\n- `\"GET /blog/2003-mumbai-bloggers-"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_80", "text": "bot.\n- `[30/Apr/2024:07:11:31 -0500]` is the time of the request\n- `\"GET /blog/2003-mumbai-bloggers-meet-photos/feed/ HTTP/1.1\"` is the request made to [this page](https://s-anand.net/blog/2003-mumbai-bloggers-meet-photos/feed/)\n- `200` is the HTTP reponse status code, indicating that all's well\n- `686` bytes was the size of the response\n- `\"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\"` is the user agent. That's Chrome 30 -- a really old"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_81", "text": " like Gecko) Chrome/30.0.1599.66 Safari/537.36\"` is the user agent. That's Chrome 30 -- a really old versio of Chrome on Linux. Very likely a bot.\n\n## Count requests\n\n`wc` counts the number of lines, words, and characters in a file. The number of lines is most often used with data.\n\n```python\n!wc s-anand.net-Apr-2024\n```\n\n      208539  4194545 52044491 s-anand.net-Apr-2024\n\nSo, in Apr 2024, there were ~208K requests to the site. Useful to know.\n\nI wonder: **Who is sending most of these requests?"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_82", "text": "were ~208K requests to the site. Useful to know.\n\nI wonder: **Who is sending most of these requests?**\n\nLet's extract the IP addresses and count them.\n\n## Extract the `IP` column\n\nWe'll use `cut` to cut the first column. It has 2 options that we'll use.\n\n`--delimiter` is the character that splits fields. In the log file, it's a space. (We'll confirm this shortly.)\n`--fields` picks the field to cut. We want field 1 (IP address)\n\nLet's preview this:\n\n```python\n# Preview just the IP addresses from "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_83", "text": ". We want field 1 (IP address)\n\nLet's preview this:\n\n```python\n# Preview just the IP addresses from the logs\n!cut --delimiter \" \" --fields 1 s-anand.net-Apr-2024 | head -n 5\n```\n\n    17.241.219.11\n    17.241.75.154\n    101.44.248.120\n    17.241.227.200\n    37.59.21.100\n\nWe used the `|` operator. That passes the output to the next command, `head -n 5`, and gives us first 5 lines. This is called **piping** and is the equivalent of calling a function inside another in programming languages.\n\nWe'll "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_84", "text": "iping** and is the equivalent of calling a function inside another in programming languages.\n\nWe'll use `sort` to sort these IP addresses. That puts the same IP addresses next to each other.\n\n```python\n# Preview the SORTED IP addresses from the logs\n!cut --delimiter \" \" --fields 1 s-anand.net-Apr-2024 | sort | head -n 5\n```\n\n    100.20.65.50\n    100.43.111.139\n    101.100.145.51\n    101.115.156.11\n    101.115.205.68\n\nThere are no duplicates there... maybe we need to go a bit further? Let's check"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_85", "text": "\n    101.115.205.68\n\nThere are no duplicates there... maybe we need to go a bit further? Let's check the top 25 lines.\n\n```python\n# Preview the SORTED IP addresses from the logs\n!cut --delimiter \" \" --fields 1 s-anand.net-Apr-2024 | sort | head -n 25\n```\n\n    100.20.65.50\n    100.43.111.139\n    101.100.145.51\n    101.115.156.11\n    101.115.205.68\n    101.126.25.225\n    101.132.248.41\n    101.166.40.221\n    101.166.6.221\n    101.183.40.167\n    101.185.221.147\n    101.188.225.246\n    101.200.218.1"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_86", "text": "0.221\n    101.166.6.221\n    101.183.40.167\n    101.185.221.147\n    101.188.225.246\n    101.200.218.166\n    101.201.66.35\n    101.2.187.83\n    101.2.187.83\n    101.2.187.83\n    101.2.187.83\n    101.2.187.83\n    101.2.187.83\n    101.2.187.83\n    101.44.160.158\n    101.44.160.158\n    101.44.160.177\n    101.44.160.177\n\nOK, there are some duplicates. Good to know.\n\nWe'll use `uniq` to count the unique IP addresses. It has a `--count` option that displays the number of unique values.\n\n**NOTE**: `uniq`"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_87", "text": "IP addresses. It has a `--count` option that displays the number of unique values.\n\n**NOTE**: `uniq` works ONLY on sorted files. You NEED to `sort` first.\n\n```python\n!cut --delimiter \" \" --fields 1 s-anand.net-Apr-2024 | sort | uniq --count | head -n 25\n```\n\n          1 100.20.65.50\n          1 100.43.111.139\n          1 101.100.145.51\n          1 101.115.156.11\n          1 101.115.205.68\n          1 101.126.25.225\n          1 101.132.248.41\n          1 101.166.40.221\n          1 101.166.6.221\n "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_88", "text": "  1 101.126.25.225\n          1 101.132.248.41\n          1 101.166.40.221\n          1 101.166.6.221\n          1 101.183.40.167\n          1 101.185.221.147\n          1 101.188.225.246\n          1 101.200.218.166\n          1 101.201.66.35\n          7 101.2.187.83\n          2 101.44.160.158\n          2 101.44.160.177\n          2 101.44.160.189\n          3 101.44.160.20\n          2 101.44.160.41\n          1 101.44.161.208\n          1 101.44.161.71\n          3 101.44.161.77\n          2 101.44.161.93\n "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_89", "text": "    1 101.44.161.208\n          1 101.44.161.71\n          3 101.44.161.77\n          2 101.44.161.93\n          2 101.44.162.166\n\nThat's useful. [101.2.187.83](https://www.whois.com/whois/101.2.187.83) from Colombo visited 7 times.\n\nBut I'd like to know who visited the MOST. So let's `sort` it further.\n\n`sort` has an option `--key 1n` that sorts by field `1` -- the count of IP addresses in this case. The `n` indicates that it's a numeric sort (so 11 appears AFTER 2).\n\nAlso, we'll use `tail` instead"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_90", "text": " The `n` indicates that it's a numeric sort (so 11 appears AFTER 2).\n\nAlso, we'll use `tail` instead of `head` to get the highest entries.\n\n```python\n# Show the top 5 IP addresses by visits\n!cut --delimiter \" \" --fields 1 s-anand.net-Apr-2024 | sort | uniq --count | sort --key 1n | tail -n 5\n```\n\n       2560 66.249.70.6\n       3010 148.251.241.12\n       4245 35.86.164.73\n       7800 37.59.21.100\n     101255 136.243.228.193\n\nWOW! [136.243.228.193](https://www.whois.com/whois/136.243.228.193) from"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_91", "text": "    101255 136.243.228.193\n\nWOW! [136.243.228.193](https://www.whois.com/whois/136.243.228.193) from Dataforseo, Ukraine, sent roughly HALF of ALL the requests!\n\nI wonder if we can figure out what User Agent they send. Is it something that identifies itself as a bot of some kind?\n\n## Find lines matching an IP\n\n`grep` searches for text in files. It uses [Regular Expressions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions) which are a powerful set of wildcards.\n\n"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_92", "text": "la.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions) which are a powerful set of wildcards.\n\n\ud83d\udca1 TIP: You **MUST** learn regular expressions. They're very helpful.\n\nHere, we'll search for all lines BEGINNING with 136.243.228.193 and having a space after that. That's `\"^136.243.228.193 \"`. The `^` at the beginning matches the start of a line.\n\n```python\n# Preview lines that begin with 136.243.228.193\n!grep \"^136.243.228.193 \" s-anand.net-Apr-2024 | head -n 5\n```\n\n    136.243.228.193 - - [31/"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_93", "text": "228.193\n!grep \"^136.243.228.193 \" s-anand.net-Apr-2024 | head -n 5\n```\n\n    136.243.228.193 - - [31/Mar/2024:11:27:43 -0500] \"GET /kannadamp3 HTTP/1.1\" 200 4162 \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n    136.243.228.193 - - [31/Mar/2024:11:31:07 -0500] \"GET /kannadamp3 HTTP/1.1\" 200 4162 \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n    13"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_94", "text": "; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n    136.243.228.193 - - [03/Apr/2024:17:46:42 -0500] \"GET /robots.txt HTTP/1.1\" 200 195 \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n    136.243.228.193 - - [06/Apr/2024:02:58:43 -0500] \"GET /Statistically_improbable_phrases.html HTTP/1.1\" 301 - \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_95", "text": " HTTP/1.1\" 301 - \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n    136.243.228.193 - - [08/Apr/2024:22:38:25 -0500] \"GET /robots.txt HTTP/1.1\" 200 195 \"-\" \"Mozilla/5.0 (compatible; DataForSeoBot/1.0; +https://dataforseo.com/dataforseo-bot)\" www.s-anand.net 192.254.190.216\n\nThese requests have clearly identified themselves as `DataForSeoBot/1.0`, which is helpful. It also seems to be crawling `robots.txt` to check if it's"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_96", "text": "as `DataForSeoBot/1.0`, which is helpful. It also seems to be crawling `robots.txt` to check if it's allowed to crawl the site, which is polite.\n\nLet's look at the second IP address: [37.59.21.100](https://www.whois.com/whois/37.59.21.100). That seems to be from OVH, a French cloud hosting provider. Is that a bot, too?\n\n```python\n# Preview lines that begin with 37.59.21.100\n!grep \"^37.59.21.100 \" s-anand.net-Apr-2024 | head -n 5\n```\n\n    37.59.21.100 - - [31/Mar/2024:07:19:41 -0500] \"GET /blog/m"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_97", "text": "s-anand.net-Apr-2024 | head -n 5\n```\n\n    37.59.21.100 - - [31/Mar/2024:07:19:41 -0500] \"GET /blog/matching-misspelt-tamil-movie-names/feed/ HTTP/1.1\" 200 1105 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:19:53 -0500] \"GET /blog/hindi-songs-online/feed/ HTTP/1.1\" 200 1382 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_98", "text": " 1382 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:24:26 -0500] \"GET /blog/check-your-mobile-phones-serial-number/feed/ HTTP/1.1\" 200 1572 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:33:10 -0500] \"GET /blog/classical-ilayaraja-2/feed"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_99", "text": ".254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:33:10 -0500] \"GET /blog/classical-ilayaraja-2/feed/ HTTP/1.1\" 200 1286 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n    37.59.21.100 - - [31/Mar/2024:07:36:33 -0500] \"GET /blog/correlating-subjects/feed/ HTTP/1.1\" 200 2257 \"-\" \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.25"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_100", "text": "86) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36\" www.s-anand.net 192.254.190.216\n\nLooking at the user agent, `Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.66 Safari/537.36`, it looks like Chrome 30 -- a very old version.\n\nPersonally, I believe it's more likely to be a bot than a French human so interested in my website that they made over 250 requests _every day_.\n\n## Find bots\n\nBut, I'm curious. What are the user agents that "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_101", "text": " made over 250 requests _every day_.\n\n## Find bots\n\nBut, I'm curious. What are the user agents that DO identify themselves as bots? Let's use `grep` to find all words that match bot.\n\n`grep --only-matching` will show only the matches, not the entire line.\n\nThe regular expression `'\\S*bot\\S*'` (which ChatGPT generated) finds all words that have bot.\n\n- `\\S` matches non-space characters\n- `\\S*` matches 0 or more non-space characters\n\n```python\n# Find all words with `bot` in it\n!grep --only-matchin"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_102", "text": "hes 0 or more non-space characters\n\n```python\n# Find all words with `bot` in it\n!grep --only-matching '\\b\\w*bot\\w*\\b' s-anand.net-Apr-2024 | head\n```\n\n    Applebot\n    applebot\n    Applebot\n    applebot\n    Applebot\n    applebot\n    Applebot\n    applebot\n    Applebot\n    applebot\n\n```python\n# Count frequency of all words with `bot` in it and show the top 10\n!grep --only-matching '\\S*bot\\S*' s-anand.net-Apr-2024 | sort | uniq --count | sort --key 1n | tail\n```\n\n       4134 PetalBot;+https://webma"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_103", "text": "d.net-Apr-2024 | sort | uniq --count | sort --key 1n | tail\n```\n\n       4134 PetalBot;+https://webmaster.petalsearch.com/site/petalbot)\"\n       4307 /robots.txt\n       5664 bingbot/2.0;\n       5664 +http://www.bing.com/bingbot.htm)\n       8771 +claudebot@anthropic.com)\"\n       8827 +http://www.google.com/bot.html)\"\n       8830 Googlebot/2.1;\n      13798 (Applebot/0.1;\n      13798 +http://www.apple.com/go/applebot)\"\n     101262 +https://dataforseo.com/dataforseo-bot)\"\n\nThat gives me a rough sense"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_104", "text": ".com/go/applebot)\"\n     101262 +https://dataforseo.com/dataforseo-bot)\"\n\nThat gives me a rough sense of who's crawling my site.\n\n1. [DataForSEO](https://dataforseo.com/)\n2. [Apple](https://www.apple.com/)\n3. [Google](https://www.google.com/)\n4. [Anthropic](https://www.anthropic.com/)\n5. [Bing](https://www.bing.com/)\n6. [PetalBot](https://aspiegel.com/petalbot)\n\n## Convert logs to CSV\n\nThis file is _almost_ a CSV file separated by spaces instead of commas.\n\nThe main problem is the date. Instead o"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_105", "text": " _almost_ a CSV file separated by spaces instead of commas.\n\nThe main problem is the date. Instead of `[31/Mar/2024:11:27:43 -0500]` it should have been `\"31/Mar/2024:11:27:43 -0500\"`\n\nWe'll use `sed` (stream editor) to replace the characters. `sed` is like `grep` but lets you replace, not just search.\n\n(Actually, `sed` can do a lot more. It's a full-fledged editor. You can insert, delete, edit, etc. programmatically. In fact, `sed` has truly remarkable features that this paragraph is too small "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_106", "text": "tc. programmatically. In fact, `sed` has truly remarkable features that this paragraph is too small to contain.)\n\nThe regular expression we will use is `\\[\\([^]]*\\)\\]`. The way this works is:\n\n- `\\[`: Match the opening square bracket.\n- `\\([^]]*\\)`: Capture everything inside the square brackets (non-greedy match for any character except `]`).\n- `\\]`: Match the closing square bracket.\n\nBTW, I didn't create this. [ChatGPT did](https://chatgpt.com/share/7f14e9d2-15ec-4562-b263-61547d2230f3).\n\n`sed "}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_107", "text": "t create this. [ChatGPT did](https://chatgpt.com/share/7f14e9d2-15ec-4562-b263-61547d2230f3).\n\n`sed \"s/abc/xyz/\" FILE` replaces `abc` with `xyz` in the file. We can use the regular expression above for the search and `\"\\1\"` for the value -- it inserts captured group enclosed in double quotes.\n\n```python\n# Replace [datetime] etc. with \"datetime\" and save as log.csv\n!sed 's/\\[\\([^]]*\\)\\]/\"\\1\"/' s-anand.net-Apr-2024 > log.csv\n```\n\n```python\n# We should now have a log.csv that's roughly the same siz"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_108", "text": "and.net-Apr-2024 > log.csv\n```\n\n```python\n# We should now have a log.csv that's roughly the same size as the original file.\n!ls -l\n```\n\n    total 101660\n    -rw-r--r-- 1 root root 52044491 Jun  9 05:19 log.csv\n    drwxr-xr-x 1 root root     4096 Jun  6 14:21 sample_data\n    -rw-r--r-- 1 root root 52044491 Jun  9 05:18 s-anand.net-Apr-2024\n\nYou can download this `log.csv` and open it in Excel as a CSV file with space as the delimiter.\n\nBut when I did that, I faced another problem. Some of the lin"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_109", "text": "CSV file with space as the delimiter.\n\nBut when I did that, I faced another problem. Some of the lines had extra columns.\n\nThat's because the \"User Agent\" values sometimes contain a quote. CSV files are supposed to escape quotes with `\"\"` -- two double quotes. But Apache uses `\\\"` instead.\n\nI'll leave it as an exercise for you to fix that.\n\n## More commands\n\nWe've covered the commands most often used to process data before analysis.\n\nHere are a few more that you'll find useful.\n\n- `cat` concaten"}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_110", "text": "sed to process data before analysis.\n\nHere are a few more that you'll find useful.\n\n- `cat` concatenates multiple files. You can join multiple log files with this, for example\n- `awk` is almost a full-fledged programming interface. It's often used for summing up values\n- `less` lets you open and read files, scrolling through it\n\nYou can read the book [Data Science at the Command Line](https://jeroenjanssens.com/dsatcl/) for more tools and examples."}
{"source": "Course_content_jan_2025/data-preparation-in-the-shell.md", "chunk_id": "data-preparation-in-the-shell.md_part_111", "text": "enjanssens.com/dsatcl/) for more tools and examples."}
{"source": "Course_content_jan_2025/vscode.md", "chunk_id": "vscode.md_part_1", "text": "## Editor: VS Code\n\nYour editor is the most important tool in your arsenal. That's where you'll spend most of your time. Make sure you're comfortable with it.\n\n[**Visual Studio Code**](https://code.visualstudio.com/) is, _by far_, the most popular code editor today. According to the [2024 StackOverflow Survey](https://survey.stackoverflow.co/2024/technology/#1-integrated-development-environment) almost 75% of developers use it. We recommend you learn it well. Even if you use another editor, you'"}
{"source": "Course_content_jan_2025/vscode.md", "chunk_id": "vscode.md_part_2", "text": "lmost 75% of developers use it. We recommend you learn it well. Even if you use another editor, you'll be working with others who use it, and it's a good idea to have some exposure.\n\nWatch these introductory videos (35 min) from the [Visual Studio Docs](https://code.visualstudio.com/docs) to get started:\n\n- [Getting Started](https://code.visualstudio.com/docs/introvideos/basics): Set up and learn the basics of Visual Studio Code. (7 min)\n- [Code Editing](https://code.visualstudio.com/docs/introv"}
{"source": "Course_content_jan_2025/vscode.md", "chunk_id": "vscode.md_part_3", "text": "the basics of Visual Studio Code. (7 min)\n- [Code Editing](https://code.visualstudio.com/docs/introvideos/codeediting): Learn how to edit and run code in VS Code. (3 min)\n- [Productivity Tips](https://code.visualstudio.com/docs/introvideos/productivity): Become a VS Code power user with these productivity tips. (4 min)\n- [Personalize](https://code.visualstudio.com/docs/introvideos/configure): Personalize VS Code to make it yours with themes. (2 min)\n- [Extensions](https://code.visualstudio.com/d"}
{"source": "Course_content_jan_2025/vscode.md", "chunk_id": "vscode.md_part_4", "text": "onalize VS Code to make it yours with themes. (2 min)\n- [Extensions](https://code.visualstudio.com/docs/introvideos/extend): Add features, themes, and more to VS Code with extensions! (4 min)\n- [Debugging](https://code.visualstudio.com/docs/introvideos/debugging): Get started with debugging in VS Code. (6 min)\n- [Version Control](https://code.visualstudio.com/docs/introvideos/versioncontrol): Learn how to use Git version control in VS Code. (3 min)\n- [Customize](https://code.visualstudio.com/doc"}
{"source": "Course_content_jan_2025/vscode.md", "chunk_id": "vscode.md_part_5", "text": "n how to use Git version control in VS Code. (3 min)\n- [Customize](https://code.visualstudio.com/docs/introvideos/customize): Learn how to customize your settings and keyboard shortcuts in VS Code. (6 min)"}
{"source": "Course_content_jan_2025/topic-modeling.md", "chunk_id": "topic-modeling.md_part_1", "text": "## Topic Modeling\n\n[](https://youtu.be/eQUNhq91DlI)\n\nYou'll learn to use text embeddings to find text similarity and use that to create topics automatically from text, covering:\n\n- **Embeddings**: How large language models convert text into numerical representations.\n- **Similarity Measurement**: Understanding how similar embeddings indicate similar meanings.\n- **Embedding Visualization**: Using tools like Tensorflow Projector to visualize embedding spaces.\n- **Embedding Applications**: Using em"}
{"source": "Course_content_jan_2025/topic-modeling.md", "chunk_id": "topic-modeling.md_part_2", "text": "ools like Tensorflow Projector to visualize embedding spaces.\n- **Embedding Applications**: Using embeddings for tasks like classification and clustering.\n- **OpenAI Embeddings**: Using OpenAI's API to generate embeddings for text.\n- **Model Comparison**: Exploring different embedding models and their strengths and weaknesses.\n- **Cosine Similarity**: Calculating cosine similarity between embeddings for more reliable similarity measures.\n- **Embedding Cost**: Understanding the cost of generating"}
{"source": "Course_content_jan_2025/topic-modeling.md", "chunk_id": "topic-modeling.md_part_3", "text": "gs for more reliable similarity measures.\n- **Embedding Cost**: Understanding the cost of generating embeddings using OpenAI's API.\n- **Embedding Range**: Understanding the range of values in embeddings and their significance.\n\nHere are the links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/15L075RLrwXkxa29EGT-1sNm_dqJRBTe_)\n- [Tensorflow projector](https://projector.tensorflow.org/)\n- [Embeddings guide](https://platform.openai.com/docs/guides/embeddings)\n- [E"}
{"source": "Course_content_jan_2025/topic-modeling.md", "chunk_id": "topic-modeling.md_part_4", "text": "ector.tensorflow.org/)\n- [Embeddings guide](https://platform.openai.com/docs/guides/embeddings)\n- [Embeddings reference](https://platform.openai.com/docs/api-reference/embeddings)\n- [Clustering on scikit-learn](https://scikit-learn.org/stable/modules/clustering.html)\n- [Massive text embedding leaderboard (MTEB)](https://huggingface.co/spaces/mteb/leaderboard)\n- [`gte-large-en-v1.5` embedding model](https://huggingface.co/Alibaba-NLP/gte-large-en-v1.5)\n- [Embeddings similarity threshold](https://"}
{"source": "Course_content_jan_2025/topic-modeling.md", "chunk_id": "topic-modeling.md_part_5", "text": "](https://huggingface.co/Alibaba-NLP/gte-large-en-v1.5)\n- [Embeddings similarity threshold](https://www.s-anand.net/blog/embeddings-similarity-threshold/)"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_1", "text": "# Live Session: 23 Jan 2025\n\n[](https://youtu.be/TxGY540ru3A)\n\n**Q1: How can I compare two files using the command line?**\n\n**A1:** You can use the `diff` command in bash, or the `git diff` command if you've initialized a git repository. The `diff` command shows the differences between two files directly. `git diff` compares commits in a git repository.\n\n**Q2: I'm having trouble viewing my GA1. It's showing zero ones. Can you help?**\n\n**A2:** Let's look at your screen. It appears there are diffe"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_2", "text": "'s showing zero ones. Can you help?**\n\n**A2:** Let's look at your screen. It appears there are different timestamps. I'll help you troubleshoot.\n\n**Q3: How can I move files from multiple subfolders into a single folder using the command line?**\n\n**A3:** I used a bash script that combines the `find` command (to locate files of a specific type, like `.txt` files) and the `mv` command (to move them). The `find` command searches the current directory (`./`) for files (`-type f`) and the `-exec` opti"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_3", "text": " The `find` command searches the current directory (`./`) for files (`-type f`) and the `-exec` option executes the `mv` command on each file found. The curly braces `{}` are placeholders for the filenames.\n\n**Q4: Will knowing only six SQL commands (SELECT, FROM, GROUP BY, etc.) be enough to complete this course?**\n\n**A4:** You'll only need basic SQL for this course, mainly for extracting data. We're not covering a full DBMS course. A good resource to learn more is SQLZoo. While you might not ne"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_4", "text": "'re not covering a full DBMS course. A good resource to learn more is SQLZoo. While you might not need more than six commands for this course, ChatGPT can help if you encounter more complex SQL queries.\n\n**Q5: How can I deploy a Flask application to Vercel?**\n\n**A5:** First, set up a git repository and connect it to your GitHub account. Then, create a virtual environment for your Python project using `python -m venv <env_name>`. Activate it using the appropriate script (e.g., `.\\env\\Scripts\\acti"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_5", "text": "ing `python -m venv <env_name>`. Activate it using the appropriate script (e.g., `.\\env\\Scripts\\activate`). Install Flask using `pip install flask`. Create a `.gitignore` file to exclude the virtual environment folder. Then, create a `vercel.json` file with build instructions for Vercel. Commit and push your code to GitHub. Finally, add your project to Vercel, selecting the correct repository and build settings (Python, not Node). Vercel will automatically redeploy your application whenever you "}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_6", "text": "build settings (Python, not Node). Vercel will automatically redeploy your application whenever you push changes to GitHub. This is called CI/CD (Continuous Integration/Continuous Deployment).\n\n**Q6: What does the port number matter when deploying to Vercel?**\n\n**A6:** When deploying to Vercel, the port number you use locally doesn't matter because Vercel will assign your application its own domain. You should remove `debug=True` from your Flask application before deploying to production.\n\n**Q7:"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_7", "text": "n. You should remove `debug=True` from your Flask application before deploying to production.\n\n**Q7: Why do I need administrator permissions to use ngrok?**\n\n**A7:** ngrok is a command-line tool that forwards requests to your local host. It doesn't need to be installed in your virtual environment. However, you might need administrator privileges to forward requests through a port. If you encounter permission issues, try running PowerShell as administrator.\n\n**Q8: What is ngrok and how does it wo"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_8", "text": " permission issues, try running PowerShell as administrator.\n\n**Q8: What is ngrok and how does it work?**\n\n**A8:** ngrok creates a public URL that forwards requests to your locally running application. This allows anyone on the internet to access your application, even though it's running on your local machine. Your computer acts as a server. Note that ngrok only works while your local server is running. For a permanent solution, deploy to a platform like Vercel or Netlify.\n\n**Q9: What is a virt"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_9", "text": "unning. For a permanent solution, deploy to a platform like Vercel or Netlify.\n\n**Q9: What is a virtual environment and why is it useful?**\n\n**A9:** A virtual environment creates a separate, isolated environment for your project. This prevents conflicts between different project dependencies. Think of it like creating a separate section in a swimming pool for a child, where the depth is less than the main pool. You can install libraries (like Flask and Pandas) within the virtual environment with"}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_10", "text": "the main pool. You can install libraries (like Flask and Pandas) within the virtual environment without affecting your global Python packages.\n\n**Q10: What is the assignment?**\n\n**A10:** Create a Flask application that takes a user's birth month as input and returns their zodiac sign. This is a fun exercise to improve your Flask skills. You can deploy it to Vercel or Netlify and share the link. Remember to create a `.gitignore` file to exclude the virtual environment folder."}
{"source": "Course_content_jan_2025/live-session-2025-01-23.md", "chunk_id": "live-session-2025-01-23.md_part_11", "text": "member to create a `.gitignore` file to exclude the virtual environment folder."}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_1", "text": "## LLM Sentiment Analysis\n\n[OpenAI's API](https://platform.openai.com/) provides access to language models like GPT 4o, GPT 4o mini, etc.\n\nFor more details, read OpenAI's guide for:\n\n- [Text Generation](https://platform.openai.com/docs/guides/text-generation)\n- [Vision](https://platform.openai.com/docs/guides/vision)\n- [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n\nStart with this quick tutorial:\n\n[](https://youtu.be/Xz4ORA0cOwQ)\n\nHere's a minimal example using"}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_2", "text": ")\n\nStart with this quick tutorial:\n\n[](https://youtu.be/Xz4ORA0cOwQ)\n\nHere's a minimal example using `curl` to generate text:\n\n```bash\ncurl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [{ \"role\": \"user\", \"content\": \"Write a haiku about programming.\" }]\n  }'\n```\n\nLet's break down the request:\n\n- `curl https://api.openai.com/v1/chat/completions`: The API endpoi"}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_3", "text": "\n\nLet's break down the request:\n\n- `curl https://api.openai.com/v1/chat/completions`: The API endpoint for text generation.\n- `-H \"Content-Type: application/json\"`: The content type of the request.\n- `-H \"Authorization: Bearer $OPENAI_API_KEY\"`: The API key for authentication.\n- `-d`: The request body.\n  - `\"model\": \"gpt-4o-mini\"`: The model to use for text generation.\n  - `\"messages\":`: The messages to send to the model.\n    - `\"role\": \"user\"`: The role of the message.\n    - `\"content\": \"Write "}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_4", "text": "ges to send to the model.\n    - `\"role\": \"user\"`: The role of the message.\n    - `\"content\": \"Write a haiku about programming.\"`: The content of the message.\n\n[](https://youtu.be/_D46QrX-2iU)\n\nThis video explains how to use large language models (LLMs) for sentiment analysis and classification, covering:\n\n- **Sentiment Analysis**: Use OpenAI API to identify the sentiment of movie reviews as positive or negative.\n- **Prompt Engineering**: Learn how to craft effective prompts to get desired result"}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_5", "text": "ve or negative.\n- **Prompt Engineering**: Learn how to craft effective prompts to get desired results from LLMs.\n- **LLM Training**: Understand how to train LLMs by providing examples and feedback.\n- **OpenAI API Integration**: Integrate OpenAI API into Python code to perform sentiment analysis.\n- **Tokenization**: Learn about tokenization and its impact on LLM input and cost.\n- **Zero-Shot, One-Shot, and Multi-Shot Learning**: Understand different approaches to using LLMs for learning.\n\nHere ar"}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_6", "text": "hot, and Multi-Shot Learning**: Understand different approaches to using LLMs for learning.\n\nHere are the links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1tVZBD9PKto1kPmVJFNUt0tdzT5EmLLWs)\n- [Movie reviews dataset](https://drive.google.com/file/d/1X33ao8_PE17c3htkQ-1p2dmW2xKmOq8Q/view)\n- [OpenAI Playground](https://platform.openai.com/playground/chat)\n- [OpenAI Pricing](https://openai.com/api/pricing/)\n- [OpenAI Tokenizer](https://platform.openai.com/tokeni"}
{"source": "Course_content_jan_2025/llm-sentiment-analysis.md", "chunk_id": "llm-sentiment-analysis.md_part_7", "text": "AI Pricing](https://openai.com/api/pricing/)\n- [OpenAI Tokenizer](https://platform.openai.com/tokenizer)\n- [OpenAI API Reference](https://platform.openai.com/docs/api-reference/)\n- [OpenAI Docs](https://platform.openai.com/docs/overview)"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_1", "text": "# Live Session: 22 Jan 2025\n\n[](https://youtu.be/QnLi-C_LiXk)\n\n**Q1: What are the essential base technologies to learn for the TDS course?**\n\n**A1:** Focus on these three areas: 1) Bash and shell scripting; 2) Git; 3) CSS, HTML, and JavaScript. Also, learn REST APIs. Other tools can be learned on the go once you have a basic understanding of these core technologies.\n\n**Q2: Regarding the tools and techniques needed for the TDS course, are Bash and shell scripting, Git, CSS, HTML, JavaScript, and "}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_2", "text": "techniques needed for the TDS course, are Bash and shell scripting, Git, CSS, HTML, JavaScript, and REST APIs the only essential ones?**\n\n**A2:** Yes, those are the core technologies. Other tools are supplementary and can be learned as needed throughout the course. The instructor suggests a three-part approach to learning: 1) Define the purpose; 2) Determine the technique; 3) Select the tools.\n\n**Q3: In short, is it sufficient to learn the listed technologies to a certain depth, not necessarily "}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_3", "text": "Q3: In short, is it sufficient to learn the listed technologies to a certain depth, not necessarily to the level of a diploma?**\n\n**A3:** Yes, learning to a certain depth is sufficient. The learning process should always be purpose-driven. You don't need to become an expert in any one tool; you need to know how to use it to accomplish your task.\n\n**Q4: For the last two questions in Week 2 (the Llama file and the Docker file), do we need to install the applications or can we do it online?**\n\n**A4"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_4", "text": "ma file and the Docker file), do we need to install the applications or can we do it online?**\n\n**A4:** For the Llama file, you don't need to download anything. For the Docker file, you can use online tools like Google Colab, which provides a Linux environment. You can run Docker directly in Colab.\n\n**Q5: I deployed a project via GitHub, but I'm getting a 404 error. Why?**\n\n**A5:** A 404 error means the page isn't found. The instructor suggests posting a screenshot and your email ID on the Disco"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_5", "text": "ns the page isn't found. The instructor suggests posting a screenshot and your email ID on the Discourse forum for more detailed debugging.\n\n**Q6: In the Llama file question, the URL shows the correct answer initially, but after refreshing, it shows an incorrect answer. Why?**\n\n**A6:** Post a screenshot and your email ID on the Discourse forum. This will allow the instructor to check the backend and the script to determine the cause.\n\n**Q7: Are the graded assignments open internet or closed inte"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_6", "text": "nd the script to determine the cause.\n\n**Q7: Are the graded assignments open internet or closed internet?**\n\n**A7:** All graded assignments are open internet, except for the final in-person exam, which is closed internet.\n\n**Q8: I'm having trouble signing into GitHub with my IIT email. Is GitHub only available for personal emails?**\n\n**A8:** GitHub is available for any email. You need to sign up first, then sign in. For evaluation purposes, your submissions will be linked to the email address yo"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_7", "text": "irst, then sign in. For evaluation purposes, your submissions will be linked to the email address you use to log in. The instructor recommends signing up with your IIT email.\n\n**Q9: For the GitHub question, if I've signed in with a personal ID but also have an IIT ID, will that be a problem?**\n\n**A9:** There shouldn't be a problem. The instructor recommends using your IIT email for evaluation purposes.\n\n**Q10: In the graded assignment 2, image compression, I'm getting an error: \"Could not proces"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_8", "text": "oses.\n\n**Q10: In the graded assignment 2, image compression, I'm getting an error: \"Could not process the image. Is it browser supported? Image pixels do not match the original.\" I've tried several ways, including using Photoshop to ensure the image resolution is the same. What's wrong?**\n\n**A10:** The image size should be less than 1,300,000 bytes. The instructor will make a note of this issue and investigate. The error may be browser-related, so trying a different browser might help. The instr"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_9", "text": "d investigate. The error may be browser-related, so trying a different browser might help. The instructor also requests the Discourse link be shared.\n\n**Q11: For the TDS project, do we have to choose the project, or will it be added to our course by default?**\n\n**A11:** The TDS project is part of the course and will be automatically added. It's not a separate project like in other courses.\n\n**Q12: Should I be worried that the evaluation scripts might be updated after I submit my answers, potenti"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_10", "text": " Should I be worried that the evaluation scripts might be updated after I submit my answers, potentially changing my grade?**\n\n**A12:** No, the evaluation scripts are updated to address additional corner cases, but the randomization of questions means that the changes are unlikely to affect your grade. The instructor suggests checking your answers again using GA2 as an exercise.\n\n**Q13: How will we submit Project 1? Will it be via Google Form?**\n\n**A13:** Yes, Project 1 will be submitted via Goo"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_11", "text": "e submit Project 1? Will it be via Google Form?**\n\n**A13:** Yes, Project 1 will be submitted via Google Form. The deliverable will be a GitHub repository.\n\n**Q14: I'm using Windows, but many questions require Ubuntu. I copied the downloaded files to my WSL home folder, but I'm not getting the correct answers. Is it possible to install a Windows system in Linux?**\n\n**A14:** You can use WSL. The instructor asks for a screenshot to debug the issue. The student explains that they copied the files (a"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_12", "text": "tructor asks for a screenshot to debug the issue. The student explains that they copied the files (a.txt and b.txt) to a TDS folder in their Ubuntu WSL environment. The `diff` command shows 40 lines of difference, but the submission is not accepted. The instructor suggests posting this on the Discourse forum.\n\n**Q15: Question 16 in GA1 (rename files) is not accepting my answer, even though I've tried using ChatGPT. What's wrong?**\n\n**A15:** The instructor suggests posting this on the Discourse f"}
{"source": "Course_content_jan_2025/live-session-2025-01-22.md", "chunk_id": "live-session-2025-01-22.md_part_13", "text": "ied using ChatGPT. What's wrong?**\n\n**A15:** The instructor suggests posting this on the Discourse forum with your email ID. The instructor notes that many submissions are randomized, so the issue may be related to the specific randomized version of the question."}
{"source": "Course_content_jan_2025/scraping-with-excel.md", "chunk_id": "scraping-with-excel.md_part_1", "text": "## Scraping with Excel\n\n[](https://youtu.be/OCl6UdpmzRQ)\n\nYou'll learn how to [import tables on the web using Excel](https://support.microsoft.com/en-au/office/import-data-from-the-web-b13eed81-33fe-410d-9247-1747269c28e4), covering:\n\n- **Data Import from Web**: Use the query feature in Excel to scrape data from websites.\n- **Establishing Web Connections**: Connect Excel to a web page using a URL.\n- **Using Query Editor**: Navigate the query editor to view and manage web data tables.\n- **Loading"}
{"source": "Course_content_jan_2025/scraping-with-excel.md", "chunk_id": "scraping-with-excel.md_part_2", "text": "\n- **Using Query Editor**: Navigate the query editor to view and manage web data tables.\n- **Loading Data**: Load data from the web into Excel for further manipulation.\n- **Data Transformation**: Remove unnecessary columns and transform data as needed.\n- **Applying Transformations**: Track applied steps in the sequence for reproducibility.\n- **Refreshing Data**: Refresh the imported data to get the latest updates from the web.\n\nHere are links used in the video:\n\n- [Chennai Weather Forecast](http"}
{"source": "Course_content_jan_2025/scraping-with-excel.md", "chunk_id": "scraping-with-excel.md_part_3", "text": "e latest updates from the web.\n\nHere are links used in the video:\n\n- [Chennai Weather Forecast](https://www.timeanddate.com/weather/india/chennai/ext)\n- [Excel Scraping Workbook](https://docs.google.com/spreadsheets/d/1a12ApZMD6CTiKRyO4RuauOO8IdYgACRL/view)\n\nIf you use Excel on Mac, the process is a bit different. See [Importing External Data Into Excel on Mac](https://youtu.be/PuqVoVNWF20)."}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_1", "text": "# Live Session: 15 Jan 2025\n\n[](https://youtu.be/VTBwpPT3A3U)\n\n**Q1: Where can I find the uploaded documents?**\n\n**A1:** The uploaded documents are added as part of a YouTube playlist. You should be able to see them on YouTube.\n\n**Q2: How should I approach TDS?**\n\n**A2:** The best way to learn TDS is through practice. The course is designed to handle day-to-day data science problems. It introduces everyday development tools (from VS Code to npm) and provides hands-on experience solving problems."}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_2", "text": " everyday development tools (from VS Code to npm) and provides hands-on experience solving problems. The graded assignments (GAs) are practical exercises designed to reinforce theoretical concepts. Focus on working through the examples and familiarizing yourself with the tools.\n\n**Q3: I'm new to this field and struggling with basic concepts. What should I do?**\n\n**A3:** GA0 is a self-assessment. If you scored above 50%, you have a good foundation. If not, consider additional learning before proc"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_3", "text": "f you scored above 50%, you have a good foundation. If not, consider additional learning before proceeding. The course is hands-on, and the TAs will hold sessions to help you understand the tools. The course content is available on the course introduction page, not just in the GA modules.\n\n**Q4: The YouTube videos are not clear enough. Can we have personalized videos?**\n\n**A4:** The TAs will hold dedicated sessions to address this learning curve. These sessions will cover the tools in detail and"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_4", "text": "dedicated sessions to address this learning curve. These sessions will cover the tools in detail and will be recorded and uploaded.\n\n**Q5: I'm not from a science background and find the course difficult. What can I do?**\n\n**A5:** The course is not an intro to programming. Focus on the practical exercises and use the TAs' sessions to get help. The instructors will consider adding more introductory sessions to address the skill gap.\n\n**Q6: I took TDS two terms ago and haven't gained any extra skil"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_5", "text": "sessions to address the skill gap.\n\n**Q6: I took TDS two terms ago and haven't gained any extra skills. I only want to complete this course and leave. What should I do?**\n\n**A6:** The course has changed significantly since two terms ago. The instructors will consider adding more support sessions to help students catch up.\n\n**Q7: The deadline for GA1 is the 26th, and help was only provided after the deadline last term. Will this happen again?**\n\n**A7:** The TAs will hold sessions _before_ the GA "}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_6", "text": "e deadline last term. Will this happen again?**\n\n**A7:** The TAs will hold sessions _before_ the GA deadline to help you learn how to use the tools.\n\n**Q8: The graded assignments (GAs) are practical, but the end-of-term exam is theory-based. Where can I learn the theory?**\n\n**A8:** The end-of-term exam format is changing. The instructors will provide a mock exam before the actual exam. Focus on familiarizing yourself with the tools.\n\n**Q9: I solved almost all the GA1 questions but my score is ze"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_7", "text": "miliarizing yourself with the tools.\n\n**Q9: I solved almost all the GA1 questions but my score is zero. Is this a glitch?**\n\n**A9:** Your answers are likely saved. If you added a question, re-enter all answers and save again. The instructors are working on a backend fix to prevent this.\n\n**Q10: What is the R0E and what should I focus on for grading?**\n\n**A10:** The projects are take-home, open-internet assignments. You'll receive a dataset and questions. R0E is a remote online exam (open-interne"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_8", "text": "ernet assignments. You'll receive a dataset and questions. R0E is a remote online exam (open-internet MCQ). The instructors will provide more information on both in future sessions.\n\n**Q11: I'm a non-IT student (Masters in Mathematics). Can I get an IT job with just the Data Science diploma?**\n\n**A11:** It's possible, but it depends on the company's requirements. Programming skills are valuable in many fields.\n\n**Q12: Should I take the programming diploma along with the data science diploma?**\n\n"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_9", "text": " many fields.\n\n**Q12: Should I take the programming diploma along with the data science diploma?**\n\n**A12:** Programming skills are very valuable. The two diplomas complement each other.\n\n**Q13: What are some standard tools I should focus on?**\n\n**A13:** Bash has been around since the 1970s. Focus on newer tools and techniques, such as LLMs and GPTs, which are powerful and in high demand.\n\n**Q14: What if I want to learn the tools more deeply?**\n\n**A14:** Learn by using the tools frequently in yo"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_10", "text": "What if I want to learn the tools more deeply?**\n\n**A14:** Learn by using the tools frequently in your workflows. The instructors will provide more support sessions.\n\n**Q15: Can we have sessions on installing the Linux system?**\n\n**A15:** The instructors will discuss this with the TAs and schedule sessions if needed. Note that you may not need to install a full Linux system; Google Colab provides a Linux environment.\n\n**Q16: Will the sessions be added to the Google Calendar?**\n\n**A16:** Yes, the"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_11", "text": "a Linux environment.\n\n**Q16: Will the sessions be added to the Google Calendar?**\n\n**A16:** Yes, they will be added to a playlist on the Google Calendar. Bookmark the TDS channel to easily find the playlist. The videos themselves will be on YouTube.\n\n**Q17: Can you request the programming faculty to add content similar to TDS to the programming diploma?**\n\n**A17:** Post this request on Discourse and tag the relevant people.\n\n**Q18: What is a \"take-home open internet\" project?**\n\n**A18:** You'll "}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_12", "text": "nd tag the relevant people.\n\n**Q18: What is a \"take-home open internet\" project?**\n\n**A18:** You'll receive a dataset and questions. You can use any resources to answer the questions.\n\n**Q19: What weeks are relevant to each project?**\n\n**A19:** Project 1 will cover the first four or five modules. Project 2 will cover a wider range of topics.\n\n**Q20: I have a basic understanding of the tools, but not a great one. Should I continue or drop the course?**\n\n**A20:** If you can solve the problems, tha"}
{"source": "Course_content_jan_2025/live-session-2025-01-15.md", "chunk_id": "live-session-2025-01-15.md_part_13", "text": "ot a great one. Should I continue or drop the course?**\n\n**A20:** If you can solve the problems, that's good enough. The course is meant to introduce you to the tools, not make you an expert. Focus on the new tools and techniques. You can always get certifications for other skills later."}
{"source": "Course_content_jan_2025/fastapi.md", "chunk_id": "fastapi.md_part_1", "text": "## Web Framework: FastAPI\n\n[FastAPI](https://fastapi.tiangolo.com/) is a modern Python web framework for building APIs with automatic interactive documentation. It's fast, easy to use, and designed for building production-ready REST APIs.\n\nHere's a minimal FastAPI app, `app.py`:\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\n#   \"fastapi\",\n#   \"uvicorn\",\n# ]\n# ///\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello"}
{"source": "Course_content_jan_2025/fastapi.md", "chunk_id": "fastapi.md_part_2", "text": "stapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello!\"}\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n```\n\nRun this with `uv run app.py`.\n\n1. **Handle errors by raising HTTPException**\n\n   ```python\n   from fastapi import HTTPException\n\n   async def get_item(item_id: int):\n       if not valid_item(item_id):\n           raise HTTPException(\n               status_code=404,\n               detail=f\"Item {"}
{"source": "Course_content_jan_2025/fastapi.md", "chunk_id": "fastapi.md_part_3", "text": "_id):\n           raise HTTPException(\n               status_code=404,\n               detail=f\"Item {item_id} not found\"\n           )\n   ```\n\n2. **Use middleware for logging**\n\n   ```python\n   from fastapi import Request\n   import time\n\n   @app.middleware(\"http\")\n   async def add_timing(request: Request, call_next):\n       start = time.time()\n       response = await call_next(request)\n       response.headers[\"X-Process-Time\"] = str(time.time() - start)\n       return response\n   ```\n\nTools:\n\n- [Fa"}
{"source": "Course_content_jan_2025/fastapi.md", "chunk_id": "fastapi.md_part_4", "text": "se.headers[\"X-Process-Time\"] = str(time.time() - start)\n       return response\n   ```\n\nTools:\n\n- [FastAPI CLI](https://fastapi.tiangolo.com/tutorial/fastapi-cli/): Project scaffolding\n- [Pydantic](https://pydantic-docs.helpmanual.io/): Data validation\n- [SQLModel](https://sqlmodel.tiangolo.com/): SQL databases\n- [FastAPI Users](https://fastapi-users.github.io/): Authentication\n\nWatch this FastAPI Course for Beginners (64 min):\n\n[](https://youtu.be/tLKKmouUams)"}
{"source": "Course_content_jan_2025/fastapi.md", "chunk_id": "fastapi.md_part_5", "text": "Course for Beginners (64 min):\n\n[](https://youtu.be/tLKKmouUams)"}
{"source": "Course_content_jan_2025/css-selectors.md", "chunk_id": "css-selectors.md_part_1", "text": "## CSS Selectors\n\nCSS selectors are patterns used to select and style HTML elements on a web page. They are fundamental to web development and data scraping, allowing you to precisely target elements for styling or extraction.\n\nFor data scientists, understanding CSS selectors is crucial when:\n\n- Web scraping with tools like Beautiful Soup or Scrapy\n- Selecting elements for browser automation with Selenium\n- Styling data visualizations and web applications\n- Debugging website issues using browser"}
{"source": "Course_content_jan_2025/css-selectors.md", "chunk_id": "css-selectors.md_part_2", "text": "Selenium\n- Styling data visualizations and web applications\n- Debugging website issues using browser DevTools\n\nWatch this comprehensive introduction to CSS selectors (20 min):\n\n[](https://youtu.be/l1mER1bV0N0)\n\nThe Mozilla Developer Network (MDN) provides detailed documentation on the three main types of selectors:\n\n- [Basic CSS selectors](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Basic_selectors): Learn about element (`div`), class (`.container`), ID (`#"}
{"source": "Course_content_jan_2025/css-selectors.md", "chunk_id": "css-selectors.md_part_3", "text": "ment/Core/Styling_basics/Basic_selectors): Learn about element (`div`), class (`.container`), ID (`#header`), and universal (`*`) selectors\n- [Attribute selectors](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Attribute_selectors): Target elements based on their attributes or attribute values (`[type=\"text\"]`)\n- [Combinators](https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Combinators): Use relationships between elements (`d"}
{"source": "Course_content_jan_2025/css-selectors.md", "chunk_id": "css-selectors.md_part_4", "text": "/docs/Learn_web_development/Core/Styling_basics/Combinators): Use relationships between elements (`div > p`, `div + p`, `div ~ p`)\n\nPractice your CSS selector skills with this interactive tool:\n\n- [CSS Diner](https://flukeout.github.io/): A fun game that teaches CSS selectors through increasingly challenging levels"}
{"source": "Course_content_jan_2025/data-sourcing.md", "chunk_id": "data-sourcing.md_part_1", "text": "# Data Sourcing\n\nBefore you do any kind of data science, you obviously have to get the data to be able to analyze it, visualize it, narrate it, and deploy it.\nAnd what we are going to cover in this module is how you get the data.\n\nThere are three ways you can get the data.\n\n1. The first is you can **download** the data. Either somebody gives you the data and says download it from here, or you are asked to download it from the internet because it's a public data source. But that's the first way\u2014y"}
{"source": "Course_content_jan_2025/data-sourcing.md", "chunk_id": "data-sourcing.md_part_2", "text": "asked to download it from the internet because it's a public data source. But that's the first way\u2014you download the data.\n2. The second way is you can **query it** from somewhere. It may be on a database. It may be available through an API. It may be available through a library. But these are ways in which you can selectively query parts of the data and stitch it together.\n3. The third way is you have to **scrape it**. It's not directly available in a convenient form that you can query or downlo"}
{"source": "Course_content_jan_2025/data-sourcing.md", "chunk_id": "data-sourcing.md_part_3", "text": "have to **scrape it**. It's not directly available in a convenient form that you can query or download. But it is, in fact, on a web page. It's available on a PDF file. It's available in a Word document. It's available on an Excel file. It's kind of structured, but you will have to figure out that structure and extract it from there.\n\nIn this module, we will be looking at the tools that will help you either download from a data source or query from an API or from a database or from a library. An"}
{"source": "Course_content_jan_2025/data-sourcing.md", "chunk_id": "data-sourcing.md_part_4", "text": "you either download from a data source or query from an API or from a database or from a library. And finally, how you can scrape from different sources.\n\n[](https://youtu.be/1LyblMkJzOo)\n\nHere are links used in the video:\n\n- [The Movies Dataset](https://www.kaggle.com/rounakbanik/the-movies-dataset)\n- [IMDb Datasets](https://imdb.com/interfaces/)\n- [Download the IMDb Datasets](https://datasets.imdbws.com/)\n- [Explore the Internet Movie Database](https://gramener.com/imdb/)\n- [What does the worl"}
{"source": "Course_content_jan_2025/data-sourcing.md", "chunk_id": "data-sourcing.md_part_5", "text": "dbws.com/)\n- [Explore the Internet Movie Database](https://gramener.com/imdb/)\n- [What does the world search for?](https://gramener.com/search/)\n- [HowStat - Cricket statistics](https://howstat.com/cricket/home.asp)\n- [Cricket Strike Rates](https://gramener.com/cricket/)"}
{"source": "Course_content_jan_2025/scraping-imdb-with-javascript.md", "chunk_id": "scraping-imdb-with-javascript.md_part_1", "text": "## Scraping IMDb with JavaScript\n\n[](https://youtu.be/YVIKZqZIcCo)\n\nYou'll learn how to scrape the [IMDb Top 250 movies](https://www.imdb.com/chart/top) directly in the browser using JavaScript on the Chrome DevTools, covering:\n\n- **Access Developer Tools**: Use F12 or right-click > Inspect to open developer tools in Chrome or Edge.\n- **Inspect Elements**: Identify and inspect HTML elements using the Elements tab.\n- **Query Selectors**: Use `document.querySelectorAll` and `document.querySelector"}
{"source": "Course_content_jan_2025/scraping-imdb-with-javascript.md", "chunk_id": "scraping-imdb-with-javascript.md_part_2", "text": "the Elements tab.\n- **Query Selectors**: Use `document.querySelectorAll` and `document.querySelector` to find elements by CSS class.\n- **Extract Text Content**: Retrieve text content from elements using JavaScript.\n- **Functional Programming**: Apply [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n  and [arrow functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\n  for concise data processing.\n- *"}
{"source": "Course_content_jan_2025/scraping-imdb-with-javascript.md", "chunk_id": "scraping-imdb-with-javascript.md_part_3", "text": "rg/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\n  for concise data processing.\n- **Data Structuring**: Collect and format data into an array of arrays.\n- **Copying Data**: Use the copy function to transfer data to the clipboard.\n- **Convert to Spreadsheet**: Use online tools to convert JSON data to CSV or Excel format.\n- **Text Manipulation**: Perform text splitting and cleaning in Excel for final data formatting.\n\nHere are links and references:\n\n- [IMDB Top 250 movies](https:/"}
{"source": "Course_content_jan_2025/scraping-imdb-with-javascript.md", "chunk_id": "scraping-imdb-with-javascript.md_part_4", "text": "in Excel for final data formatting.\n\nHere are links and references:\n\n- [IMDB Top 250 movies](https://www.imdb.com/chart/top/)\n- [Learn about Chrome Devtools](https://developer.chrome.com/docs/devtools/overview/)"}
{"source": "Course_content_jan_2025/visualizing-animated-data-with-flourish.md", "chunk_id": "visualizing-animated-data-with-flourish.md_part_1", "text": "## Visualizing Animated Data with Flourish\n\n[](https://youtu.be/JrnIu5Bm8i4)"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_1", "text": "# Live Session: 29 Jan 2025\n\n[](https://youtu.be/EPiVIP97fzI)\n\n**Q1: I am a student, and I joined the session without using my IITM ID. How do I rejoin with my IITM ID?**\n\n**A1:** You need to rejoin the session using your IITM ID. We don't allow anyone to join without their IITM ID.\n\n**Q2: Today's session is mostly about doubt clearing. I haven't seen the GAs yet. Can I come tomorrow after I've solved them?**\n\n**A2:** Tomorrow and the day after, we will mostly be covering content, so there won't"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_2", "text": "lved them?**\n\n**A2:** Tomorrow and the day after, we will mostly be covering content, so there won't be much scope for doubt clearing. We can address doubts towards the end of the session or while discussing a specific topic if the doubt relates to that topic.\n\n**Q3: Will the sessions cover content relevant to GA2?**\n\n**A3:** No, the content will be relevant to GA3. The deadline for GA3 has been pushed to Wednesday.\n\n**Q4: GA2 content looks straightforward. If I have any doubts after the session"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_3", "text": "ushed to Wednesday.\n\n**Q4: GA2 content looks straightforward. If I have any doubts after the sessions, I'll ask then.**\n\n**A4:** That would be great.\n\n**Q5: I was confused about the image compression in [unclear]. I tried to copy the code and run it in Colab, but it asked for third-party authentication. I wasn't sure what it was asking, so I pulled back.**\n\n**A5:** I haven't used the code for solving that particular image compression question; I only used the provided website. I tried using the "}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_4", "text": "ing that particular image compression question; I only used the provided website. I tried using the code, but it gave me an error about dimensions not matching the original file's dimensions. That's why I used the web application. There is a specific use case for this. Should we copy all the things like that and then change the parameters? For example, the path will be related to some website URL. It will be used in future classes. We probably won't spend much time on image compression, but it i"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_5", "text": " It will be used in future classes. We probably won't spend much time on image compression, but it is important from a web perspective. In a particular video, they talked about how 50-51% of information on web pages is in image format, so reducing image size is important. From a project perspective, it won't be that relevant in future weeks.\n\n**Q6: I tried to do Git commits from my CLI, but based on the given ID, a new repository was created. I want to use the one I created for GA1. How can I ma"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_6", "text": "on the given ID, a new repository was created. I want to use the one I created for GA1. How can I make sure that whatever changes I'm making get committed to the repository I signed up for?**\n\n**A6:** Please share your screen. (The instructor then appears to have difficulty understanding the question.)\n\n**Q7: I have a doubt in question 4. Actually, I've done the Vercel file for question 6 (What is the Vercel URL?). I'm uploading that URL, but it's not showing that it's up. Can I share my screen?"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_7", "text": " the Vercel URL?). I'm uploading that URL, but it's not showing that it's up. Can I share my screen?**\n\n**A7:** Yes, please share your screen. (The instructor then guides the student through troubleshooting steps, including checking the code, going to the Vercel dashboard, and appending `/api` to the URL. The issue is that the Flask module is not installed on Vercel. The instructor suggests using a capital 'F' in `Flask` in the requirements.txt file. The instructor also suggests using GitHub, wh"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_8", "text": "a capital 'F' in `Flask` in the requirements.txt file. The instructor also suggests using GitHub, where a requirements.txt file is not needed.)\n\n**Q8: In the FastAPI question, I'm pushing the website, but it's not taking the conditions (API class equals 1A or class equals 1B) mentioned in the question. It's also giving the whole JSON file. What should I do?**\n\n**A8:** Regarding the Vercel question, you can mention a capital 'F' for Flask, but I think it won't install because... I've just checked"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_9", "text": ", you can mention a capital 'F' for Flask, but I think it won't install because... I've just checked, and on the GitHub page, I don't have a requirements file. If you push it to GitHub and it's connected to GitHub, you don't need the requirements file. Something else is the issue. It's not able to pull the Flask module. You should not have to install it separately while running the file. I used `http.server`. There's example code given in GA2 itself for question 6. There's sample code there that"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_10", "text": "ttp.server`. There's example code given in GA2 itself for question 6. There's sample code there that uses `http.server`. I just modified that bit and put my function in there, and it works without any issues. The only difference is that I modified that and put the function inside that piece of code that handles the request. You don't need a separate `requirements.txt` file; Vercel can run the program without that. You still need to verify that your function actually runs. That's one thing you'll"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_11", "text": "ram without that. You still need to verify that your function actually runs. That's one thing you'll have to check. Regarding the FastAPI question, there's a logic error in your code. It shouldn't fetch all of it. Your query actually says `class` (CLASSS) without an underscore. If you put an underscore there, it will probably give you the correct response.\n\n**Q9: I'm getting an error in question 10 of GA2. (Student shares screen.)**\n\n**A9:** Please close the picture-in-picture; it won't disconne"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_12", "text": "0 of GA2. (Student shares screen.)**\n\n**A9:** Please close the picture-in-picture; it won't disconnect the session. (The instructor then guides the student through troubleshooting steps, including copying the error and posting it on Discourse and tagging Anand. The instructor suggests using the ngrok URL (the one in front of forwarding in the terminal). The error is a Cloudflare error. The instructor suggests copying the error and sending it on Discourse and tagging Anand.)\n\n**Q10: I wanted to s"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_13", "text": "tor suggests copying the error and sending it on Discourse and tagging Anand.)\n\n**Q10: I wanted to say that while installing ngrok with the terminal, I wasn't able to do that, so I installed it in a different directory using the app. Is it doing anything? When I run it from here...**\n\n**A10:** It shouldn't matter because we are able to access it through the browser. It was still able to access it, and you can see a 200 OK on there. That means the site is running okay; your model is running okay."}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_14", "text": " and you can see a 200 OK on there. That means the site is running okay; your model is running okay. Why you're getting a Cloudflare error, I'm not entirely sure. That's normally to do with the CDN service that is giving some sort of response out there. We'll have to check with Anand what the issue is.\n\n**Q11: Is my screen visible? In the Vercel question, sometimes it shows correctly, and now it's showing an error. It's showing correctly again. I don't know why this happens. The score also...**\n"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_15", "text": " showing an error. It's showing correctly again. I don't know why this happens. The score also...**\n\n**A11:** There was a slight bug; we discussed it this morning with Anand. There was a slight bug in the random generator for the file that you use. I believe it's been fixed now. That's why you're not getting an error at the moment. If you come across this problem again, notify us on Discourse. It shouldn't give you a problem anymore.\n\n**Q12: One more thing: in the FastAPI question, I'm pushing t"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_16", "text": "shouldn't give you a problem anymore.\n\n**Q12: One more thing: in the FastAPI question, I'm pushing the website, but it's not taking the conditions (API class equals 1A or class equals 1B) mentioned in the question. It's also giving the whole JSON file. What should I do?**\n\n**A12:** The issue is likely in your code's logic. You should try to fix the code. The word `class` itself is a keyword in Python, so you'll have to find a workaround that enables you to use a query called `class` (CLASSS) wit"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_17", "text": "hon, so you'll have to find a workaround that enables you to use a query called `class` (CLASSS) without the underscore.\n\n**Q13: One more question: in question 9 (FastAPI), I'm giving the URL, but when I run the file, it shows the whole data. When I add conditions, it also shows the whole data. I'll show you that. Should I run this first?**\n\n**A13:** Before we do that, let's see what error comes out. You haven't put the actual correct URL, right? Just add `/api`. It's because this particular Fla"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_18", "text": "ut. You haven't put the actual correct URL, right? Just add `/api`. It's because this particular Flask module is not installed on Vercel. You should use the `requests` module instead of the `curl` command. You just use the requests and send the inputs to it. Because the proxy has its own method of doing some of these functions that don't match OpenAI's. It might have been a coincidence that it worked for 3.5. If you use the documentation that Anand has provided, then that might help. If you go b"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_19", "text": "ked for 3.5. If you use the documentation that Anand has provided, then that might help. If you go back to where you get the token... You'll have to provide the documentation in this form. You'll use the requests instead of using the curl command. You just use the requests and send the inputs to it.\n\n**Q14: In question 5, I've enabled it, but I'm getting an \"unexpected end of JSON input\" error. I'm not sure why. I've tried different structures for the JSON.**\n\n**A14:** Copy this JSON to VS Code "}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_20", "text": "m not sure why. I've tried different structures for the JSON.**\n\n**A14:** Copy this JSON to VS Code and save it as a JSON file. VS Code will parse it so you can see it better. At the bottom, you have an extra required address and additional properties that are not necessary. That shouldn't cause it to be invalid JSON. Try without that. Just remove that extra bit and try without it.\n\n**Q15: One more thing: in FastAPI question 9, I'm giving the URL, but it's giving me the whole data. Even when I a"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_21", "text": "e thing: in FastAPI question 9, I'm giving the URL, but it's giving me the whole data. Even when I add conditions, it shows the whole data. I'll show you. Should I run this first?**\n\n**A15:** Add `/api` at the end of that. That's some logic error in your code. It should not fetch all of it. There's some logic error. You're getting a Cloudflare error. That's something to do with the CDN service giving some sort of response. We'll have to check with Anand.\n\n**Q16: Is my screen visible? In this Ver"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_22", "text": "ing some sort of response. We'll have to check with Anand.\n\n**Q16: Is my screen visible? In this Vercel question, what happened is that sometimes it was showing correctly earlier, and now it's showing an error. And look, it's showing correctly again. I don't know why this happens. The score also...**\n\n**A16:** At the moment, it's working, right? There was a slight bug; we discussed it this morning with Anand. There was a slight bug in the random generator for the file that you use. I believe it'"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_23", "text": " with Anand. There was a slight bug in the random generator for the file that you use. I believe it's been fixed now. That's why you're not getting an error at the moment. If you come across this problem again, notify us on Discourse.\n\n**Q17: I'm getting an error from this. I don't know how...**\n\n**A17:** In the ninth question, you're getting an error. Earlier, it was working fine. You'll need to... this is the Vercel one, right? No, this is the FastAPI one. You'll have to run the server for tha"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_24", "text": ".. this is the Vercel one, right? No, this is the FastAPI one. You'll have to run the server for that. You should post this on Discourse. Just copy that whole error message itself and put it in a notepad or something, and then post on Discourse.\n\n**Q18: One more thing I wanted to say: actually, I'm not... while installing ngrok with this terminal, I wasn't able to do that, so I installed it in a different directory using the app. Is it doing anything? When I run it from here...**\n\n**A18:** It sh"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_25", "text": "ifferent directory using the app. Is it doing anything? When I run it from here...**\n\n**A18:** It shouldn't matter because we are able to access it through the browser. It was still able to access it, and you can see a 200 OK on there. That means the site is running okay; your model is running okay. Why you're getting a Cloudflare error, I'm not entirely sure. That's normally to do with the CDN service that is giving some sort of response out there. We'll have to check with Anand what the issue "}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_26", "text": "rvice that is giving some sort of response out there. We'll have to check with Anand what the issue is.\n\n**Q19: Is my screen visible? In this Vercel question, what happened is that sometimes it was showing correctly, and now it's showing an error. And look, it's showing correctly again. I don't know why this happens. The score also...**\n\n**A19:** It looks like a Cloudflare error. I've noted this error. It is from Cloudflare. You could just try again. When did you try this, apart from just now? Y"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_27", "text": "rror. It is from Cloudflare. You could just try again. When did you try this, apart from just now? You got the same error yesterday as well? Yeah, so that's some logic error in your code. It should not fetch all of it. There is some logic error.\n\n**Q20: Should I install it separately?**\n\n**A20:** No, you won't require requirements for it. Vercel is able to run the program without that.\n\n**Q21: For Vercel, I will take the example code and try to run it. One more question: in question 9 (FastAPI),"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_28", "text": " Vercel, I will take the example code and try to run it. One more question: in question 9 (FastAPI), I'm giving the URL, but when I run the file, it shows the whole data. When I add conditions, it also shows the whole data. I'll show you that.**\n\n**A21:** You should use the requests module and send a request using headers and all those informations. What you are using is actually OpenAI's own library, and that will not work. You will have to use the requests module and send the request just like"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_29", "text": "ary, and that will not work. You will have to use the requests module and send the request just like the examples shown. There will be a URL, a header, and a payload. If you use their own library, it will not construct it correctly. Because the proxy has its own method of doing some of these functions that don't match OpenAI's. For 3.5, it worked, but that was more of a coincidence. If you use the documentation that is there on the AI proxy that Anand has provided, there's documentation there. I"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_30", "text": " documentation that is there on the AI proxy that Anand has provided, there's documentation there. If you use that documentation, then that might help. If you go back to where you get the token... You'll have to provide the documentation in this form. You'll use the requests instead of using the curl command. You just use the requests and send the inputs to it.\n\n**Q22: This was in ROE last term. I'm getting an error. How?**\n\n**A22:** This was a really fascinating question. There is a way, in fac"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_31", "text": "'m getting an error. How?**\n\n**A22:** This was a really fascinating question. There is a way, in fact many ways, to get it to say yes. You just have to trick it into saying yes. Just look up previous Discourse posts; you will probably find suggestions on there as well.\n\n**Q23: Can I get the code for this?**\n\n**A23:** He will... didn't he provide that in a Discourse post? Someone has pasted it on Discourse. If not, we can always ask him to provide it.\n\n**Q24: I've taken one more course, something"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_32", "text": "iscourse. If not, we can always ask him to provide it.\n\n**Q24: I've taken one more course, something on business BA or something like that. There is no GA at all for this. There is a GA, but you don't submit here. These two courses are somewhat different.**\n\n**A24:** Right, right.\n\n**Q25: When I joined (late), an ngrok error was being shown by someone. I'm also getting a very similar error. I couldn't follow the discussion at all. I joined towards the end. Shall I share my screen?**\n\n**A25:** Ju"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_33", "text": "dn't follow the discussion at all. I joined towards the end. Shall I share my screen?**\n\n**A25:** Just before you share your screen, was it giving you a Cloudflare error? (The student describes the error.) You can share your screen. I think your problem is slightly different. (The instructor then guides the student through troubleshooting steps, including checking the ngrok URL and restarting the Lama server. The issue is that ngrok is running outside of the Ubuntu environment, and the Lama serv"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_34", "text": "Lama server. The issue is that ngrok is running outside of the Ubuntu environment, and the Lama server is running inside the Ubuntu environment. The instructor suggests installing ngrok in the Windows machine and then creating a tunnel from there. The student tries this, but it's still giving an error. The instructor then suggests using the directly executable file for ngrok.)\n\n**Q26: I tried all this, same issue. I'm getting an error. I think I've tried all this, same issue.**\n\n**A26:** The acc"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_35", "text": "this, same issue. I'm getting an error. I think I've tried all this, same issue.**\n\n**A26:** The account is limited to one simultaneous session. You've got another session running somewhere. I think that is inside VS WSL. You'll have to stop that. You'll have to check for that. The output that your code is generating is wrong. It's generating null, null, which is wrong. Just try to check for... can you go back to the question once? It is sending some URL-encoded parameter. There might be a mista"}
{"source": "Course_content_jan_2025/live-session-2025-01-29.md", "chunk_id": "live-session-2025-01-29.md_part_36", "text": "n you go back to the question once? It is sending some URL-encoded parameter. There might be a mistake while reading those parameters. Just changing that code will help. There's a problem with my code where it's fetching null for all the data, which it should not. You can either ask on Discourse or try to fix it yourself."}
{"source": "Course_content_jan_2025/wikipedia-data-with-python.md", "chunk_id": "wikipedia-data-with-python.md_part_1", "text": "## Wikipedia Data with Python\n\n[](https://youtu.be/b6puvm-QEY0)\n\nYou'll learn how to scrape data from Wikipedia using the `wikipedia` Python library, covering:\n\n- **Installing and Importing**: Use pip install to get the Wikipedia library and import it with import wikipedia as wk.\n- **Keyword Search**: Use the search function to find Wikipedia pages containing a specific keyword, limiting results with the results argument.\n- **Fetching Summaries**: Use the summary function to get a concise summar"}
{"source": "Course_content_jan_2025/wikipedia-data-with-python.md", "chunk_id": "wikipedia-data-with-python.md_part_2", "text": "ith the results argument.\n- **Fetching Summaries**: Use the summary function to get a concise summary of a Wikipedia page, limiting sentences with the sentences argument.\n- **Retrieving Full Pages**: Use the page function to obtain the full content of a Wikipedia page, including sections and references.\n- **Accessing URLs**: Retrieve the URL of a Wikipedia page using the url attribute of the page object.\n- **Extracting References**: Use the references attribute to get all reference links from a "}
{"source": "Course_content_jan_2025/wikipedia-data-with-python.md", "chunk_id": "wikipedia-data-with-python.md_part_3", "text": "object.\n- **Extracting References**: Use the references attribute to get all reference links from a Wikipedia page.\n- **Fetching Images**: Access all images on a Wikipedia page via the images attribute, which returns a list of image URLs.\n- **Extracting Tables**: Use the pandas.read_html function to extract tables from the HTML content of a Wikipedia page, being mindful of table indices.\n\nHere are links and references:\n\n- [Wikipedia Library - Notebook](https://colab.research.google.com/drive/1-w"}
{"source": "Course_content_jan_2025/wikipedia-data-with-python.md", "chunk_id": "wikipedia-data-with-python.md_part_4", "text": " links and references:\n\n- [Wikipedia Library - Notebook](https://colab.research.google.com/drive/1-w8Jo6xcQs2jK0NxNddPW4HVCZhXmTBe)\n- Learn about the [`wikipedia` package](https://wikipedia.readthedocs.io/en/latest/)\n\n**NOTE**: Wikipedia is constantly edited. The page may be different now from when the video was recorded. Handle accordingly."}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_1", "text": "# Project 1 - LLM-based Automation Agent\n\nThis project is due on 16 Feb 2025 EoD IST. Results will be announced by 26 Feb 2025.\n\nFor questions, [use this Discourse thread](https://discourse.onlinedegree.iitm.ac.in/t/project-1-llm-based-automation-agent-discussion-thread-tds-jan-2025/164277).\n\n## Background\n\nYou have joined the operations team at **DataWorks Solutions**, a company that processes large volumes of log files, reports, and code artifacts to generate actionable insights for internal s"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_2", "text": "rge volumes of log files, reports, and code artifacts to generate actionable insights for internal stakeholders. In order to improve operational efficiency and consistency, the company has mandated that routine tasks be automated and integrated into their Continuous Integration (CI) pipeline.\n\nDue to the unpredictable nature of incoming data (from logs, ticket systems, source code, surveys, etc.) the team has decided to use a Large Language Model (LLM) as an intermediate transformer. In this rol"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_3", "text": "the team has decided to use a Large Language Model (LLM) as an intermediate transformer. In this role, the LLM will perform small, reasonably deterministic tasks.\n\nYour assignment is to build an automation agent that accepts plain\u2011English tasks, carries out the required (multi\u2011step) process leveraging an LLM where required. The finished processing artifacts must be exactly verifiable against pre\u2011computed expected results.\n\n## Create an API\n\nWrite an application that exposes an API with the follo"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_4", "text": "omputed expected results.\n\n## Create an API\n\nWrite an application that exposes an API with the following endpoints:\n\n- **POST `/run?task=<task description>`**\n  Executes a plain\u2011English task. The agent should parse the instruction, execute one or more internal steps (including taking help from an LLM), and produce the final output.\n  - If successful, return a HTTP 200 OK response\n  - If unsuccessful because of an error in the task, return a HTTP 400 Bad Request response\n  - If unsuccessful becau"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_5", "text": "ul because of an error in the task, return a HTTP 400 Bad Request response\n  - If unsuccessful because of an error in the agent, return a HTTP 500 Internal Server Error response\n  - The body may optionally contain any useful information in each of these cases\n- **GET `/read?path=<file path>`**\n  Returns the content of the specified file. This is critical for verification of the exact output.\n  - If successful, return a HTTP 200 OK response with the file content as plain text\n  - If the file does"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_6", "text": "f successful, return a HTTP 200 OK response with the file content as plain text\n  - If the file does not exist, return a HTTP 404 Not Found response and an empty body\n\n## Phase A: Handle Operations Tasks\n\nThe DataWorks operations team has identified these tasks that need to be automated:\n\n- **A1**. Install `uv` (if required) and run `https://raw.githubusercontent.com/sanand0/tools-in-data-science-public/tds-2025-01/project-1/datagen.py` with `${user.email}` as the only argument. (**NOTE**: This "}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_7", "text": "public/tds-2025-01/project-1/datagen.py` with `${user.email}` as the only argument. (**NOTE**: This will generate data files required for the next tasks.)\n- **A2**. Format the contents of `/data/format.md` using `prettier@3.4.2`, updating the file in-place\n- **A3**. The file `/data/dates.txt` contains a list of dates, one per line. Count the number of Wednesdays in the list, and write just the number to `/data/dates-wednesdays.txt`\n- **A4**. Sort the array of contacts in `/data/contacts.json` by"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_8", "text": "ber to `/data/dates-wednesdays.txt`\n- **A4**. Sort the array of contacts in `/data/contacts.json` by `last_name`, then `first_name`, and write the result to `/data/contacts-sorted.json`\n- **A5**. Write the first line of the 10 most recent `.log` file in `/data/logs/` to `/data/logs-recent.txt`, most recent first\n- **A6**. Find all Markdown (`.md`) files in `/data/docs/`. For each file, extract the first occurrance of each H1 (i.e. a line starting with `# `). Create an index file `/data/docs/inde"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_9", "text": " first occurrance of each H1 (i.e. a line starting with `# `). Create an index file `/data/docs/index.json` that maps each filename (without the `/data/docs/` prefix) to its title (e.g. `{\"README.md\": \"Home\", \"path/to/large-language-models.md\": \"Large Language Models\", ...}`)\n- **A7**. `/data/email.txt` contains an email message. Pass the content to an LLM with instructions to extract the sender's email address, and write just the email address to `/data/email-sender.txt`\n- **A8**. `/data/credit"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_10", "text": " email address, and write just the email address to `/data/email-sender.txt`\n- **A8**. `/data/credit-card.png` contains a credit card number. Pass the image to an LLM, have it extract the card number, and write it without spaces to `/data/credit-card.txt`\n- **A9**. `/data/comments.txt` contains a list of comments, one per line. Using embeddings, find the most similar pair of comments and write them to `/data/comments-similar.txt`, one per line\n- **A10**. The SQLite database file `/data/ticket-sa"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_11", "text": "m to `/data/comments-similar.txt`, one per line\n- **A10**. The SQLite database file `/data/ticket-sales.db` has a `tickets` with columns `type`, `units`, and `price`. Each row is a customer bid for a concert ticket. What is the total sales of all the items in the \"Gold\" ticket type? Write the number in `/data/ticket-sales-gold.txt`\n\nDevelopers will call the `/run?task=` endpoint with a task description **similar** (but certainly not identical) to the ones listed above.\n\nFor example, **Task A3** "}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_12", "text": "ption **similar** (but certainly not identical) to the ones listed above.\n\nFor example, **Task A3** can be written in these ways - all are equivalent.\n\n- The file `/data/dates.txt` contains a list of dates, one per line. Count the number of Wednesdays in the list, and write just the number to `/data/dates-wednesdays.txt`\n- Write the # of Thursdays in `/data/extracts.txt` into `/data/extracts-count.txt`\n- `/data/contents.log` \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u0947 \u0930\u0935\u093f\u0935\u093e\u0930 \u0939\u0948\u0902? \u0917\u093f\u0928\u094b \u0914\u0930 /data/contents.dates \u092e\u0947\u0902 \u0932\u093f\u0916\u094b\n- `/data/co"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_13", "text": ".txt`\n- `/data/contents.log` \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u0947 \u0930\u0935\u093f\u0935\u093e\u0930 \u0939\u0948\u0902? \u0917\u093f\u0928\u094b \u0914\u0930 /data/contents.dates \u092e\u0947\u0902 \u0932\u093f\u0916\u094b\n- `/data/contents.log`\u0bb2 \u0b8e\u0ba4\u0bcd\u0ba4\u0ba9\u0bc8 \u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1 \u0b87\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0ba9\u0bc1 \u0b95\u0ba3\u0b95\u0bcd\u0b95\u0bc1 \u0baa\u0bcb\u0b9f\u0bcd\u0b9f\u0bc1, \u0b85\u0ba4\u0bc8 `/data/contents.dates`\u0bb2 \u0b8e\u0bb4\u0bc1\u0ba4\u0bc1\n\nYour task is to build an agent that uses an LLM to parse the task description and execute the required steps.\n\n## Phase B: Handle Business Tasks\n\nThe DataWorks security team has added the following requirements. No matter what the task is, the agent must ensure that:\n\n- **B1**. Data outside `/data` is never acce"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_14", "text": "o matter what the task is, the agent must ensure that:\n\n- **B1**. Data outside `/data` is never accessed or exfiltrated, even if the task description asks for it\n- **B2**. Data is never deleted anywhere on the file system, even if the task description asks for it\n\nThe DataWorks business team has listed _broad_ additional tasks for automation. But they have not defined it more precisely than this:\n\n- **B3**. Fetch data from an API and save it\n- **B4**. Clone a git repo and make a commit\n- **B5**."}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_15", "text": "\n- **B3**. Fetch data from an API and save it\n- **B4**. Clone a git repo and make a commit\n- **B5**. Run a SQL query on a SQLite or DuckDB database\n- **B6**. Extract data from (i.e. scrape) a website\n- **B7**. Compress or resize an image\n- **B8**. Transcribe audio from an MP3 file\n- **B9**. Convert Markdown to HTML\n- **B10**. Write an API endpoint that filters a CSV file and returns JSON data\n\nYour agent must handle these tasks as well.\n\nThe business team has _not_ promised to limit themselves t"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_16", "text": "r agent must handle these tasks as well.\n\nThe business team has _not_ promised to limit themselves to these tasks. But they have promised a **bonus** if you are able to handle tasks they come up with that are outside of this list.\n\n## Deliverables\n\n- [Create a new _public_ GitHub repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository)\n- [Add an MIT `LICENSE` file](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_17", "text": "d an MIT `LICENSE` file](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository)\n- Write and test your code. Call `POST /run?task=...` with a few tasks and check if `GET /read?path=...` creates the correct files.\n- Commit and push your code\n- Create a [Dockerfile](https://docs.docker.com/reference/dockerfile/) that builds your application\n- Publish your Docker image _publicly_ to [Docker Hub](https://hub.docker.com/)\n- Ensure tha"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_18", "text": "ication\n- Publish your Docker image _publicly_ to [Docker Hub](https://hub.docker.com/)\n- Ensure that running your image via `podman run --rm -e AIPROXY_TOKEN=$AIPROXY_TOKEN -p 8000:8000 $IMAGE_NAME` automatically serves the API at `http://localhost:8000/run?task=...` and `http://localhost:8000/read?path=...`\n- [Submit in this Google Form](https://docs.google.com/forms/d/e/1FAIpQLSdOaljgV-INdbKrPotV9OMUKV01QVaFEfcnr5dAxBZqM4x37g/viewform?usp=dialog)\n  the URL of your GitHub repository (`https://"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_19", "text": "tV9OMUKV01QVaFEfcnr5dAxBZqM4x37g/viewform?usp=dialog)\n  the URL of your GitHub repository (`https://github.com/user-name/repo-name`) and your Docker image name (`user-name/repo-name`)\n\nNote:\n\n- **Use the `AIPROXY_TOKEN` environment variable**. DON'T commit your AI Proxy token to your repository. Instead, set the `AIPROXY_TOKEN` environment variable before running your script. Use `os.environ[\"AIPROXY_TOKEN\"]` as the token in your script.\n- **Use your AI Proxy token**. Your [AI Proxy token](https"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_20", "text": "OXY_TOKEN\"]` as the token in your script.\n- **Use your AI Proxy token**. Your [AI Proxy token](https://aiproxy.sanand.workers.dev/) now has a $1 limit. You may use it. If you run out of tokens, ask the TDS team for more. (But try and avoid that.)\n- **Stick to GPT-4o-Mini**. This is the only generation model that AI Proxy currently supports. When this page says \"LLM\", it means GPT-4o-Mini.\n- **Keep your prompts short and concise**. Each call to `/run` and `/read` must complete within 20 seconds.\n"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_21", "text": " your prompts short and concise**. Each call to `/run` and `/read` must complete within 20 seconds.\n\n## Evaluation\n\nThis [evaluation script](project-1/evaluate.py) evaluates the scripts.Here's how will evaluate a task, e.g. **Task A2**.\n\n1. Call `POST http://localhost:8000/run?task=Format+/data/format.md+with+prettier+3.4.2`. Ensure that the respose is a HTTP 200.\n   - Note: The task may be worded differently. It may use a different prettier version. But the broad task is the same.\n2. Call `GET "}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_22", "text": " differently. It may use a different prettier version. But the broad task is the same.\n2. Call `GET http://localhost:8000/read?path=/data/format.md` and get the revised file contents.\n3. Verify that the response was formatted using `prettier@3.4.2`.\n\nHere's how we will score the results.\n\n- **Pre-requisites**: Your repository **MUST** meet the following criteria to be eligible for evaluation\n  - Your GitHub repository exists and is publicly accessible\n  - Your GitHub repository has a `LICENSE` f"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_23", "text": "our GitHub repository exists and is publicly accessible\n  - Your GitHub repository has a `LICENSE` file with the MIT license\n  - Your GitHub repository has a valid `Dockerfile`\n  - Your Docker image is publicly accessible and runs via `podman run -e AIPROXY_TOKEN=$AIPROXY_TOKEN -p 8000:8000 $IMAGE_NAME`\n  - Your Docker image uses the same Dockerfile as in your GitHub repository\n- **Phase A: 10 marks**. 1 mark for each Phase A task that the agent handles correctly.\n  - We will run an evaluation s"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_24", "text": "ks**. 1 mark for each Phase A task that the agent handles correctly.\n  - We will run an evaluation script that will call `https://localhost:8000/run?task=...` on the task and call `https://localhost:8000/read?path=...` to verify the output\n- **Phase B: 10 marks**. 1 mark for each Phase B task that the agent handles correctly.\n  - The evaluation script will call `https://localhost:8000/run?task=...` on the task and call `https://localhost:8000/read?path=...` to verify the output\n- **Bonus: Additi"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_25", "text": "` on the task and call `https://localhost:8000/read?path=...` to verify the output\n- **Bonus: Additional tasks**. We _may_ pass additional tasks beyond the list above. If your code handles them correctly, you get 1 bonus mark per task.\n- **Bonus: Code diversity**. You're encouraged to copy code and learn from each other. We encourage diversity too. We will evaluate code similarity and give bonus marks for most unique responses. (That is, if your response is similar to a lot of others, you won't "}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_26", "text": "arks for most unique responses. (That is, if your response is similar to a lot of others, you won't get bonus marks.)\n\nYour score will be the sum of the marks above. No normalization, i.e. whether it's 0/20 or 22/20, what you get is what you get.\n\nThis execution will be automated via:\n\n- [`validate.py`](project-1/validate.py) to check the pre-requisites and generate the eligible `images.txt`\n- `export AIPROXY_TOKEN=...` to set the AI Proxy token\n- [`run.sh`](project-1/run.sh) to evaluate all sub"}
{"source": "Course_content_jan_2025/project-1.md", "chunk_id": "project-1.md_part_27", "text": "port AIPROXY_TOKEN=...` to set the AI Proxy token\n- [`run.sh`](project-1/run.sh) to evaluate all submissions."}
{"source": "Course_content_jan_2025/scraping-emarketer.md", "chunk_id": "scraping-emarketer.md_part_1", "text": "## Scraping emarketer\n\nIn this live scraping session, we explore a real-life scenario where Straive had to scrape data from emarketer.com for a demo. This is a fairly realistic and representative way of how one might go about scraping a website.\n\n[](https://youtu.be/ZzUsDE1XjhE)\n\nYou'll learn:\n\n- **Scraping**: How to extract data from web pages, including constructing URLs, fetching page content, and parsing HTML using packages like [`lxml`](https://lxml.de/) and [`httpx`](https://www.python-htt"}
{"source": "Course_content_jan_2025/scraping-emarketer.md", "chunk_id": "scraping-emarketer.md_part_2", "text": "and parsing HTML using packages like [`lxml`](https://lxml.de/) and [`httpx`](https://www.python-httpx.org/).\n- **Caching**: Implementing a caching strategy to avoid redundant data fetching for efficiency and reliability.\n- **Error Handling and Debugging**: Practical tips for troubleshooting, such as using liberal print statements, breakpoints for in-depth debugging, and the concept of \"rubber duck debugging\" to clarify problems.\n- **LLMs**: Benefits of Gemini / ChatGPT for code suggestions and "}
{"source": "Course_content_jan_2025/scraping-emarketer.md", "chunk_id": "scraping-emarketer.md_part_3", "text": "k debugging\" to clarify problems.\n- **LLMs**: Benefits of Gemini / ChatGPT for code suggestions and troubleshooting.\n- **Real-World Application**: How quick proofs of concept to showcase capabilities to clients, emphasizing practice over theory."}
{"source": "Course_content_jan_2025/data-visualization-with-seaborn.md", "chunk_id": "data-visualization-with-seaborn.md_part_1", "text": "## Data Visualization with Seaborn\n\n[Seaborn](https://seaborn.pydata.org/) is a data visualization library for Python. It's based on Matplotlib but a bit easier to use, and a bit prettier.\n\n[](https://youtu.be/6GUZXDef2U0)"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_1", "text": "## Embeddings: OpenAI and Local Models\n\nEmbedding models convert text into a list of numbers. These are like a map of text in numerical form. Each number represents a feature, and similar texts will have numbers close to each other. So, if the numbers are similar, the text they represent mean something similar.\n\nThis is useful because text similarity is important in many common problems:\n\n1. **Search**. Find similar documents to a query.\n2. **Classification**. Classify text into categories.\n3. *"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_2", "text": "rch**. Find similar documents to a query.\n2. **Classification**. Classify text into categories.\n3. **Clustering**. Group similar items into clusters.\n4. **Anomaly Detection**. Find an unusual piece of text.\n\nYou can run embedding models locally or using an API. Local models are better for privacy and cost. APIs are better for scale and quality.\n\n| Feature     | Local Models               | API                       |\n| ----------- | -------------------------- | ------------------------- |\n| **Pr"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_3", "text": "                   |\n| ----------- | -------------------------- | ------------------------- |\n| **Privacy** | High                       | Dependent on provider     |\n| **Cost**    | High setup, low after that | Pay-as-you-go             |\n| **Scale**   | Limited by local resources | Easily scales with demand |\n| **Quality** | Varies by model            | Typically high            |\n\nThe [Massive Text Embedding Benchmark (MTEB)](https://huggingface.co/spaces/mteb/leaderboard) provides comprehens"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_4", "text": "Text Embedding Benchmark (MTEB)](https://huggingface.co/spaces/mteb/leaderboard) provides comprehensive comparisons of embedding models. These models are compared on several parameters, but here are some key ones to look at:\n\n1. **Rank**. Higher ranked models have higher quality.\n2. **Memory Usage**. Lower is better (for similar ranks). It costs less and is faster to run.\n3. **Embedding Dimensions**. Lower is better. This is the number of numbers in the array. Smaller dimensions are cheaper to s"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_5", "text": "**. Lower is better. This is the number of numbers in the array. Smaller dimensions are cheaper to store.\n4. **Max Tokens**. Higher is better. This is the number of input tokens (words) the model can take in a _single_ input.\n5. Look for higher scores in the columns for Classification, Clustering, Summarization, etc. based on your needs.\n\n### Local Embeddings\n\n[](https://youtu.be/OATCgQtNX2o)\n\nHere's a minimal example using a local embedding model:\n\n```python\n# /// script\n# requires-python = \"=="}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_6", "text": "e's a minimal example using a local embedding model:\n\n```python\n# /// script\n# requires-python = \"==3.12\"\n# dependencies = [\n#   \"sentence-transformers\",\n#   \"httpx\",\n#   \"numpy\",\n# ]\n# ///\n\nfrom sentence_transformers import SentenceTransformer\nimport numpy as np\n\nmodel = SentenceTransformer('BAAI/bge-base-en-v1.5')  # A small, high quality model\n\nasync def embed(text: str) -> list[float]:\n    \"\"\"Get embedding vector for text using local model.\"\"\"\n    return model.encode(text).tolist()\n\nasync de"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_7", "text": "Get embedding vector for text using local model.\"\"\"\n    return model.encode(text).tolist()\n\nasync def get_similarity(text1: str, text2: str) -> float:\n    \"\"\"Calculate cosine similarity between two texts.\"\"\"\n    emb1 = np.array(await embed(text1))\n    emb2 = np.array(await embed(text2))\n    return float(np.dot(emb1, emb2) / (np.linalg.norm(emb1) * np.linalg.norm(emb2)))\n\nasync def main():\n    print(await get_similarity(\"Apple\", \"Orange\"))\n    print(await get_similarity(\"Apple\", \"Lightning\"))\n\n\ni"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_8", "text": "t(await get_similarity(\"Apple\", \"Orange\"))\n    print(await get_similarity(\"Apple\", \"Lightning\"))\n\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\nNote the `get_similarity` function. It uses a [Cosine Similarity](https://en.wikipedia.org/wiki/Cosine_similarity) to calculate the similarity between two embeddings.\n\n### OpenAI Embeddings\n\nFor comparison, here's how to use OpenAI's API with direct HTTP calls. Replace the `embed` function in the earlier script:\n\n```python\ni"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_9", "text": "penAI's API with direct HTTP calls. Replace the `embed` function in the earlier script:\n\n```python\nimport os\nimport httpx\n\nasync def embed(text: str) -> list[float]:\n    \"\"\"Get embedding vector for text using OpenAI's API.\"\"\"\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            \"https://api.openai.com/v1/embeddings\",\n            headers={\"Authorization\": f\"Bearer {os.environ['OPENAI_API_KEY']}\"},\n            json={\"model\": \"text-embedding-3-small\", \"inp"}
{"source": "Course_content_jan_2025/embeddings.md", "chunk_id": "embeddings.md_part_10", "text": "f\"Bearer {os.environ['OPENAI_API_KEY']}\"},\n            json={\"model\": \"text-embedding-3-small\", \"input\": text}\n        )\n        return response.json()[\"data\"][0][\"embedding\"]\n```\n\n**NOTE**: You need to set the [`OPENAI_API_KEY`](https://platform.openai.com/api-keys) environment variable for this to work."}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_1", "text": "## Version Control: Git, GitHub\n\n[Git](https://git-scm.com/) is the de facto standard for version control of software (and sometimes, data as well). It's a system that keeps track of changes you make to files and folders. It allows you to revert to a previous state, compare changes, etc. It's a central tool in any developer's workflow.\n\n[GitHub](https://github.com/) is the most popular hosting service for Git repositories. It's a website that shows your code, allows you to collaborate with other"}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_2", "text": "vice for Git repositories. It's a website that shows your code, allows you to collaborate with others, and provides many useful tools for developers.\n\nWatch these introductory videos to learn the basics of Git and GitHub (98 min):\n\n[](https://youtu.be/HVsySz-h9r4)\n\n[](https://youtu.be/RGOj5yH7evk)\n\nEssential Git Commands:\n\n```bash\n# Repository Setup\ngit init                   # Create new repo\ngit clone url              # Clone existing repo\ngit remote add origin url  # Connect to remote\n\n# Basi"}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_3", "text": " clone url              # Clone existing repo\ngit remote add origin url  # Connect to remote\n\n# Basic Workflow\ngit status                 # Check status\ngit add .                  # Stage all changes\ngit commit -m \"message\"    # Commit changes\ngit push origin main       # Push to remote\n\n# Branching\ngit branch                 # List branches\ngit checkout -b feature    # Create/switch branch\ngit merge feature          # Merge branch\ngit rebase main            # Rebase on main\n\n# History\ngit log -"}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_4", "text": "rge feature          # Merge branch\ngit rebase main            # Rebase on main\n\n# History\ngit log --oneline          # View history\ngit diff commit1 commit2   # Compare commits\ngit blame file             # Show who changed what\n```\n\nBest Practices:\n\n1. **Commit Messages**\n\n   ```bash\n   # Good commit message format\n   type(scope): summary\n\n   Detailed description of changes.\n\n   # Examples\n   feat(api): add user authentication\n   fix(db): handle null values in query\n   ```\n\n2. **Branching Strat"}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_5", "text": "t(api): add user authentication\n   fix(db): handle null values in query\n   ```\n\n2. **Branching Strategy**\n\n   - main: Production code\n   - develop: Integration branch\n   - feature/\\*: New features\n   - hotfix/\\*: Emergency fixes\n\n3. **Code Review**\n   - Keep PRs small (<400 lines)\n   - Use draft PRs for WIP\n   - Review your own code first\n   - Respond to all comments\n\nEssential Tools\n\n- [GitHub Desktop](https://desktop.github.com/): GUI client\n- [GitLens](https://gitlens.amod.io/): VS Code exten"}
{"source": "Course_content_jan_2025/git.md", "chunk_id": "git.md_part_6", "text": "sktop](https://desktop.github.com/): GUI client\n- [GitLens](https://gitlens.amod.io/): VS Code extension\n- [gh](https://cli.github.com/): GitHub CLI\n- [pre-commit](https://pre-commit.com/): Git hooks"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_1", "text": "## LLM Agents: Building AI Systems That Can Think and Act\n\nLLM Agents are AI systems that can define and execute their own workflows to accomplish tasks. Unlike simple prompt-response patterns, agents make multiple LLM calls, use tools, and adapt their approach based on intermediate results. They represent a significant step toward more autonomous AI systems.\n\n[](https://youtu.be/DWUdGhRrv2c)\n\n### What Makes an Agent?\n\nAn LLM agent consists of three core components:\n\n1. **LLM Brain**: Makes deci"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_2", "text": " What Makes an Agent?\n\nAn LLM agent consists of three core components:\n\n1. **LLM Brain**: Makes decisions about what to do next\n2. **Tools**: External capabilities the agent can use (e.g., web search, code execution)\n3. **Memory**: Retains context across multiple steps\n\nAgents operate through a loop:\n\n- Observe the environment\n- Think about what to do\n- Take action using tools\n- Observe results\n- Repeat until task completion\n\n### Command-Line Agent Example\n\nWe've created a minimal command-line a"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_3", "text": "Repeat until task completion\n\n### Command-Line Agent Example\n\nWe've created a minimal command-line agent called [`llm-cmd-agent.py`](llm-cmd-agent.py \":ignore\") that:\n\n1. Takes a task description from the command line\n2. Generates code to accomplish the task\n3. Automatically extracts and executes the code\n4. Passes the results back to the LLM\n5. Provides a final answer or tries again if the execution fails\n\nHere's how it works:\n\n```bash\nuv run llm-cmd-agent.py \"list all Python files under the cu"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_4", "text": "ion fails\n\nHere's how it works:\n\n```bash\nuv run llm-cmd-agent.py \"list all Python files under the current directory, recursively, by size\"\nuv run llm-cmd-agent.py \"convert the largest Markdown file to HTML\"\n```\n\nThe agent will:\n\n1. Generate a shell script to list files with their sizes\n2. Execute the script in a subprocess\n3. Capture the output (stdout and stderr)\n4. Pass the output back to the LLM for interpretation\n5. Present a final answer to the user\n\nUnder the hood, the agent follows this w"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_5", "text": "M for interpretation\n5. Present a final answer to the user\n\nUnder the hood, the agent follows this workflow:\n\n1. Initial prompt to generate a shell script\n2. Code extraction from the LLM response\n3. Code execution in a subprocess\n4. Result interpretation by the LLM\n5. Error handling and retry logic if needed\n\nThis demonstrates the core agent loop of:\n\n- Planning (generating code)\n- Execution (running the code)\n- Reflection (interpreting results)\n- Adaptation (fixing errors if needed)\n\n### Agent "}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_6", "text": "ing the code)\n- Reflection (interpreting results)\n- Adaptation (fixing errors if needed)\n\n### Agent Architectures\n\nDifferent agent architectures exist for different use cases:\n\n1. **ReAct** (Reasoning + Acting): Interleaves reasoning steps with actions\n2. **Reflexion**: Adds self-reflection to improve reasoning\n3. **MRKL** (Modular Reasoning, Knowledge and Language): Combines neural and symbolic modules\n4. **Plan-and-Execute**: Creates a plan first, then executes steps\n\n### Real-World Applicatio"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_7", "text": "odules\n4. **Plan-and-Execute**: Creates a plan first, then executes steps\n\n### Real-World Applications\n\nLLM agents can be applied to various domains:\n\n1. **Research assistants** that search, summarize, and synthesize information\n2. **Coding assistants** that write, debug, and explain code\n3. **Data analysis agents** that clean, visualize, and interpret data\n4. **Customer service agents** that handle queries and perform actions\n5. **Personal assistants** that manage schedules, emails, and tasks\n\n"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_8", "text": "le queries and perform actions\n5. **Personal assistants** that manage schedules, emails, and tasks\n\n### Project Ideas\n\nHere are some practical agent projects you could build:\n\n1. **Study buddy agent**: Helps create flashcards, generates practice questions, and explains concepts\n2. **Job application assistant**: Searches job listings, tailors resumes, and prepares interview responses\n3. **Personal finance agent**: Categorizes expenses, suggests budgets, and identifies savings opportunities\n4. **H"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_9", "text": "finance agent**: Categorizes expenses, suggests budgets, and identifies savings opportunities\n4. **Health and fitness coach**: Creates workout plans, tracks nutrition, and provides motivation\n5. **Course project helper**: Breaks down assignments, suggests resources, and reviews work\n\n### Best Practices\n\n1. **Clear instructions**: Define the agent's capabilities and limitations\n2. **Effective tool design**: Create tools that are specific and reliable\n3. **Robust error handling**: Agents should re"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_10", "text": "design**: Create tools that are specific and reliable\n3. **Robust error handling**: Agents should recover gracefully from failures\n4. **Memory management**: Balance context retention with token efficiency\n5. **User feedback**: Allow users to correct or guide the agent\n\n### Limitations and Challenges\n\nCurrent LLM agents face several challenges:\n\n1. **Hallucination**: Agents may generate false information or tool calls\n2. **Planning limitations**: Complex tasks require better planning capabilities"}
{"source": "Course_content_jan_2025/llm-agents.md", "chunk_id": "llm-agents.md_part_11", "text": "mation or tool calls\n2. **Planning limitations**: Complex tasks require better planning capabilities\n3. **Tool integration complexity**: Each new tool adds implementation overhead\n4. **Context window constraints**: Limited memory for long-running tasks\n5. **Security concerns**: Tool access requires careful permission management"}
{"source": "Course_content_jan_2025/development-tools.md", "chunk_id": "development-tools.md_part_1", "text": "# Development Tools\n\n**NOTE**: The tools in this module are **PRE-REQUISITES** for the course. You would have used most of these before. If most of this is new to you, please take this course later.\n\nSome tools are fundamental to data science because they are industry standards and widely used by data science professionals. Mastering these tools will align you with current best practices and making you more adaptable in a fast-evolving industry.\n\nThe tools we cover here are not just popular, the"}
{"source": "Course_content_jan_2025/development-tools.md", "chunk_id": "development-tools.md_part_2", "text": "g you more adaptable in a fast-evolving industry.\n\nThe tools we cover here are not just popular, they're the core technology behind most of today's data science and software development."}
{"source": "Course_content_jan_2025/github-pages.md", "chunk_id": "github-pages.md_part_1", "text": "## Static hosting: GitHub Pages\n\n[GitHub Pages](https://pages.github.com/) is a free hosting service that turns your GitHub repository directly into a static website whenever you push it. This is useful for sharing analysis results, data science portfolios, project documentation, and more.\n\nCommon Operations:\n\n```bash\n# Create a new GitHub repo\nmkdir my-site\ncd my-site\ngit init\n\n# Add your static content\necho \"<h1>My Site</h1>\" > index.html\n\n# Push to GitHub\ngit add .\ngit commit -m \"feat(pages):"}
{"source": "Course_content_jan_2025/github-pages.md", "chunk_id": "github-pages.md_part_2", "text": "content\necho \"<h1>My Site</h1>\" > index.html\n\n# Push to GitHub\ngit add .\ngit commit -m \"feat(pages): initial commit\"\ngit push origin main\n\n# Enable GitHub Pages from the main branch on the repo settings page\n```\n\nBest Practices:\n\n1. **Keep it small**\n   - [Optimize images](https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Performance/Multimedia). Prefer SVG over WEBP over 8-bit PNG.\n   - [Preload](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload) c"}
{"source": "Course_content_jan_2025/github-pages.md", "chunk_id": "github-pages.md_part_3", "text": "-bit PNG.\n   - [Preload](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload) critical assets like stylesheets\n   - Avoid committing large files like datasets, videos, etc. directly. Explore [Git LFS](https://git-lfs.github.com/) instead.\n\nTools:\n\n- [GitHub Desktop](https://desktop.github.com/): GUI for Git operations\n- [GitHub CLI](https://cli.github.com/): Command line interface\n- [GitHub Actions](https://github.com/features/actions): Automation\n\n[](https://youtube.com/sho"}
{"source": "Course_content_jan_2025/github-pages.md", "chunk_id": "github-pages.md_part_4", "text": "face\n- [GitHub Actions](https://github.com/features/actions): Automation\n\n[](https://youtube.com/shorts/WqOXxoGSpbs)\n\n[](https://youtu.be/sT_zXIX3ZA0)"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_1", "text": "## Serverless hosting: Vercel\n\n<!--\n\nWhy Vercel? I evaluated from https://survey.stackoverflow.co/2024/technology#2-cloud-platforms\n\n- AWS, Azure, Google Cloud are too complex for beginners\n- Cloudflare (next most popular, widely admired) Python support is in beta\n- Hetzner (most admired), Supabase (next most admired) do not have a serverless platform\n- Fly.io (next most admired) does not have a free tier\n- Heroku (used in previous terms) is the least admired\n- Vercel is both popular, admired, g"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_2", "text": "ree tier\n- Heroku (used in previous terms) is the least admired\n- Vercel is both popular, admired, growing, has a free plan, and a simple API\n\n-->\n\nServerless platforms let you rent a single function instead of an entire machine. They're perfect for small web tools that _don't need to run all the time_. Here are some common real-life uses:\n\n- A contact form that emails you when someone wants to hire you (runs for 2-3 seconds, a few times per day)\n- A tool that converts uploaded photos to black a"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_3", "text": "re you (runs for 2-3 seconds, a few times per day)\n- A tool that converts uploaded photos to black and white (runs for 5-10 seconds when someone uploads a photo)\n- A chatbot that answers basic questions about your business hours (runs for 1-2 seconds per question)\n- A newsletter sign-up that adds emails to your mailing list (runs for 1 second per sign-up)\n- A webhook that posts your Etsy sales to Discord (runs for 1 second whenever you make a sale)\n\nYou only pay when someone uses your tool, and "}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_4", "text": "Discord (runs for 1 second whenever you make a sale)\n\nYou only pay when someone uses your tool, and the platform automatically handles busy periods. For example, if 100 people fill out your contact form at once, the platform creates 100 temporary copies of your code to handle them all. When they're done, these copies disappear. It's cheaper than running a full-time server because you're not paying for the time when no one is using your tool - most tools are idle 95% of the time!\n\nRather than wri"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_5", "text": " for the time when no one is using your tool - most tools are idle 95% of the time!\n\nRather than writing a full program, serverless platforms let you write functions. These functions are called via HTTP requests. They run in a cloud environment and are scaled up and down automatically. But this means you write programs in a different style. For example:\n\n- You can't `pip install` packages - you have to use `requirements.txt`\n- You can't read or write files from the file system - you can only use"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_6", "text": "ve to use `requirements.txt`\n- You can't read or write files from the file system - you can only use APIs.\n- You can't run commands (e.g. `subprocess.run()`)\n\n[Vercel](https://vercel.com/) is a cloud platform optimized for frontend frameworks and serverless functions. Vercel is tightly integrated with GitHub. Pushing to your repository automatically triggers new deployments.\n\nHere's a [quickstart](https://vercel.com/docs/functions/runtimes/python). [Sign-up with Vercel](https://vercel.com/signup"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_7", "text": "(https://vercel.com/docs/functions/runtimes/python). [Sign-up with Vercel](https://vercel.com/signup). Create an empty `git` repo with this `api/index.py` file.\n\nTo deploy a FastAPI app, add a `requirements.txt` file with `fastapi` as a dependency.\n\n```text\nfastapi\n```\n\nAdd your FastAPI code to a file, e.g. `main.py`.\n\n```python\n# main.py\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello, World!\"}\n```\n\nAdd a `vercel.json` file to the root "}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_8", "text": "\ndef read_root():\n    return {\"message\": \"Hello, World!\"}\n```\n\nAdd a `vercel.json` file to the root of your repository.\n\n```json\n{\n  \"builds\": [{ \"src\": \"main.py\", \"use\": \"@vercel/python\" }],\n  \"routes\": [{ \"src\": \"/(.*)\", \"dest\": \"main.py\" }]\n}\n```\n\nOn the command line, run:\n\n- `npx vercel` to deploy a test version\n- `npx vercel --prod` to deploy to production\n\n**Environment Variables**. Use `npx vercel env add` to add environment variables. In your code, use `os.environ.get('SECRET_KEY')` to a"}
{"source": "Course_content_jan_2025/vercel.md", "chunk_id": "vercel.md_part_9", "text": " vercel env add` to add environment variables. In your code, use `os.environ.get('SECRET_KEY')` to access them.\n\n### Videos\n\n[](https://youtu.be/sPmat30SE4k)\n\n[](https://youtu.be/8R-cetf_sZ4)"}
{"source": "Course_content_jan_2025/visualizing-charts-with-excel.md", "chunk_id": "visualizing-charts-with-excel.md_part_1", "text": "## Visualizing Charts with Excel\n\n[](https://youtu.be/sORnCj52COw?t=1813s)"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_1", "text": "## Extracting Audio and Transcripts\n\n## Media Processing: FFmpeg\n\n[FFmpeg](https://ffmpeg.org/) is the standard command-line tool for processing video and audio files. It's essential for data scientists working with media files for:\n\n- Extracting audio/video for machine learning\n- Converting formats for web deployment\n- Creating visualizations and presentations\n- Processing large media datasets\n\nBasic Operations:\n\n```bash\n# Basic conversion\nffmpeg -i input.mp4 output.avi\n\n# Extract audio\nffmpeg "}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_2", "text": "asic Operations:\n\n```bash\n# Basic conversion\nffmpeg -i input.mp4 output.avi\n\n# Extract audio\nffmpeg -i input.mp4 -vn output.mp3\n\n# Convert format without re-encoding\nffmpeg -i input.mkv -c copy output.mp4\n\n# High quality encoding (crf: 0-51, lower is better)\nffmpeg -i input.mp4 -preset slower -crf 18 output.mp4\n```\n\nCommon Data Science Tasks:\n\n```bash\n# Extract frames for computer vision\nffmpeg -i input.mp4 -vf \"fps=1\" frames_%04d.png    # 1 frame per second\nffmpeg -i input.mp4 -vf \"select='eq(n"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_3", "text": " input.mp4 -vf \"fps=1\" frames_%04d.png    # 1 frame per second\nffmpeg -i input.mp4 -vf \"select='eq(n,0)'\" -vframes 1 first_frame.jpg\n\n# Create video from image sequence\nffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf fps=25 output.mp4\n\n# Extract audio for speech recognition\nffmpeg -i input.mp4 -ar 16000 -ac 1 audio.wav      # 16kHz mono\n\n# Trim video/audio for training data\nffmpeg -ss 00:01:00 -i input.mp4 -t 00:00:30 -c copy clip.mp4\n```\n\nProcessing Multiple Files:\n\n```bash\n# Concatenate videos ("}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_4", "text": "put.mp4 -t 00:00:30 -c copy clip.mp4\n```\n\nProcessing Multiple Files:\n\n```bash\n# Concatenate videos (first create files.txt with list of files)\necho \"file 'input1.mp4'\nfile 'input2.mp4'\" > files.txt\nffmpeg -f concat -i files.txt -c copy output.mp4\n\n# Batch process with shell loop\nfor f in *.mp4; do\n    ffmpeg -i \"$f\" -vn \"audio/${f%.mp4}.wav\"\ndone\n```\n\nData Analysis Features:\n\n```bash\n# Get media file information\nffprobe -v quiet -print_format json -show_format -show_streams input.mp4\n\n# Display "}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_5", "text": "ile information\nffprobe -v quiet -print_format json -show_format -show_streams input.mp4\n\n# Display frame metadata\nffprobe -v quiet -print_format json -show_frames input.mp4\n\n# Generate video thumbnails\nffmpeg -i input.mp4 -vf \"thumbnail\" -frames:v 1 thumb.jpg\n```\n\nWatch this introduction to FFmpeg (12 min):\n\n[](https://youtu.be/MPV7JXTWPWI)\n\nTools:\n\n- [ffmpeg.lav.io](https://ffmpeg.lav.io/): Interactive command builder\n- [FFmpeg Explorer](https://ffmpeg.guide/): Visual FFmpeg command generator\n"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_6", "text": "ractive command builder\n- [FFmpeg Explorer](https://ffmpeg.guide/): Visual FFmpeg command generator\n- [FFmpeg Buddy](https://evanhahn.github.io/ffmpeg-buddy/): Simple command generator\n\nTips:\n\n1. Use `-c copy` when possible to avoid re-encoding\n2. Monitor progress with `-progress pipe:1`\n3. Use `-hide_banner` to reduce output verbosity\n4. Test commands with small clips first\n5. Use hardware acceleration when available (-hwaccel auto)\n\nError Handling:\n\n```bash\n# Validate file before processing\nff"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_7", "text": "ration when available (-hwaccel auto)\n\nError Handling:\n\n```bash\n# Validate file before processing\nffprobe input.mp4 2>&1 | grep \"Invalid\"\n\n# Continue on errors in batch processing\nffmpeg -i input.mp4 output.mp4 -xerror\n\n# Get detailed error information\nffmpeg -v error -i input.mp4 2>&1 | grep -A2 \"Error\"\n```\n\n<!-- Assessment: Share output of `ffprobe -v quiet -print_format json -show_format {video}` -->\n<!-- Assessment: Share output of `ffmpeg -i {video} -vf \"select='eq(n,0)'\" -vframes 1 {email}"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_8", "text": "}` -->\n<!-- Assessment: Share output of `ffmpeg -i {video} -vf \"select='eq(n,0)'\" -vframes 1 {email}.jpg` -->\n\n## Media tools: yt-dlp\n\n[yt-dlp](https://github.com/yt-dlp/yt-dlp) is a feature-rich command-line tool for downloading audio/video from thousands of sites. It's particularly useful for extracting audio and transcripts from videos.\n\nInstall using your package manager:\n\n```bash\n# macOS\nbrew install yt-dlp\n\n# Linux\ncurl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_9", "text": " install yt-dlp\n\n# Linux\ncurl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp\nchmod a+rx ~/.local/bin/yt-dlp\n\n# Windows\nwinget install yt-dlp\n```\n\nCommon operations for extracting audio and transcripts:\n\n```bash\n# Download audio only at lowest quality suitable for speech\nyt-dlp -f \"ba[abr<50]/worstaudio\" \\\n       --extract-audio \\\n       --audio-format mp3 \\\n       --audio-quality 32k \\\n       \"https://www.youtube.com/watch?v=VIDEO_ID\"\n\n# Download auto-"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_10", "text": "3 \\\n       --audio-quality 32k \\\n       \"https://www.youtube.com/watch?v=VIDEO_ID\"\n\n# Download auto-generated subtitles\nyt-dlp --write-auto-sub \\\n       --skip-download \\\n       --sub-format \"srt\" \\\n       \"https://www.youtube.com/watch?v=VIDEO_ID\"\n\n# Download both audio and subtitles with custom output template\nyt-dlp -f \"ba[abr<50]/worstaudio\" \\\n       --extract-audio \\\n       --audio-format mp3 \\\n       --audio-quality 32k \\\n       --write-auto-sub \\\n       --sub-format \"srt\" \\\n       -o \"%(t"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_11", "text": " \\\n       --audio-quality 32k \\\n       --write-auto-sub \\\n       --sub-format \"srt\" \\\n       -o \"%(title)s.%(ext)s\" \\\n       \"https://www.youtube.com/watch?v=VIDEO_ID\"\n\n# Download entire playlist's audio\nyt-dlp -f \"ba[abr<50]/worstaudio\" \\\n       --extract-audio \\\n       --audio-format mp3 \\\n       --audio-quality 32k \\\n       -o \"%(playlist_index)s-%(title)s.%(ext)s\" \\\n       \"https://www.youtube.com/playlist?list=PLAYLIST_ID\"\n```\n\nFor Python integration:\n\n```python\n# /// script\n# requires-pyth"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_12", "text": ".com/playlist?list=PLAYLIST_ID\"\n```\n\nFor Python integration:\n\n```python\n# /// script\n# requires-python = \">=3.9\"\n# dependencies = [\"yt-dlp\"]\n# ///\n\nimport yt_dlp\n\ndef download_audio(url: str) -> None:\n    \"\"\"Download audio at speech-optimized quality.\"\"\"\n    ydl_opts = {\n        'format': 'ba[abr<50]/worstaudio',\n        'postprocessors': [{\n            'key': 'FFmpegExtractAudio',\n            'preferredcodec': 'mp3',\n            'preferredquality': '32'\n        }]\n    }\n\n    with yt_dlp.Youtube"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_13", "text": "eferredcodec': 'mp3',\n            'preferredquality': '32'\n        }]\n    }\n\n    with yt_dlp.YoutubeDL(ydl_opts) as ydl:\n        ydl.download([url])\n\n# Example usage\ndownload_audio('https://www.youtube.com/watch?v=VIDEO_ID')\n```\n\nTools:\n\n- [ffmpeg](https://ffmpeg.org/): Required for audio extraction and conversion\n- [whisper](https://github.com/openai/whisper): Can be used with yt-dlp for speech-to-text\n- [gallery-dl](https://github.com/mikf/gallery-dl): Alternative for image-focused sites\n\nNote"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_14", "text": "o-text\n- [gallery-dl](https://github.com/mikf/gallery-dl): Alternative for image-focused sites\n\nNote: Always respect copyright and terms of service when downloading content.\n\n## Whisper transcription\n\n[Faster Whisper](https://github.com/SYSTRAN/faster-whisper) is a highly optimized implementation of OpenAI's [Whisper model](https://github.com/openai/whisper), offering up to 4x faster transcription while using less memory.\n\nYou can install it via:\n\n- `pip install faster-whisper`\n- [Download Windo"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_15", "text": " while using less memory.\n\nYou can install it via:\n\n- `pip install faster-whisper`\n- [Download Windows Standalone](https://github.com/Purfview/whisper-standalone-win/releases)\n\nHere's a basic usage example:\n\n```bash\nfaster-whisper-xxl \"video.mp4\" --model medium --language en\n```\n\nHere's my recommendation for transcribing videos. This saves the output in JSON as well as SRT format in the source directory.\n\n```bash\nfaster-whisper-xxl --print_progress --output_dir source --batch_recursive \\\n       "}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_16", "text": "ectory.\n\n```bash\nfaster-whisper-xxl --print_progress --output_dir source --batch_recursive \\\n                   --check_files --standard --output_format json srt \\\n                   --model medium --language en $FILE\n```\n\n- `--model`: The OpenAI Whisper model to use. You can choose from:\n  - `tiny`: Fastest but least accurate\n  - `base`: Good for simple audio\n  - `small`: Balanced speed/accuracy\n  - `medium`: Recommended default\n  - `large-v3`: Most accurate but slowest\n- `--output_format`: The"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_17", "text": "  - `medium`: Recommended default\n  - `large-v3`: Most accurate but slowest\n- `--output_format`: The output format to use. You can pick multiple formats from:\n  - `json`: Has the most detailed information including timing, text, quality, etc.\n  - `srt`: A popular subtitle format. You can use this in YouTube, for example.\n  - `vtt`: A modern subtitle format.\n  - `txt`: Just the text transcript\n- `--output_dir`: The directory to save the output files. `source` indicates the source directory, i.e. "}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_18", "text": "-output_dir`: The directory to save the output files. `source` indicates the source directory, i.e. where the input `$FILE` is\n- `--language`: The language of the input file. If you don't specify it, it analyzes the first 30 seconds to auto-detect. You can speed it up by specifying it.\n\nRun `faster-whisper-xxl --help` for more options.\n\n## Gemini transcription\n\nThe [Gemini](https://gemini.google.com/) models from Google are notable in two ways:\n\n1. They have a _huge_ input context window. Gemini"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_19", "text": "om/) models from Google are notable in two ways:\n\n1. They have a _huge_ input context window. Gemini 2.0 Flash can accept 1M tokens, for example.\n2. They can handle audio input.\n\nThis allows us to use Gemini to transcribe audio files.\n\nLLMs are not good at transcribing audio _faithfully_. They tend to correct errors and meander from what was said. But they are intelligent. That enables a few powerful workflows. Here are some examples:\n\n1. **Transcribe into other languages**. Gemini will handle t"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_20", "text": "ful workflows. Here are some examples:\n\n1. **Transcribe into other languages**. Gemini will handle the transcription and translation in a single step.\n2. **Summarize audio transcripts**. For example, convert a podcast into a tutorial, or a meeting recording into actions.\n3. **Legal Proceeding Analysis**. Extract case citations, dates, and other details from a legal debate.\n4. **Medical Consultation Summary**. Extract treatments, medications, details of next visit, etc. from a medical consultatio"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_21", "text": "n Summary**. Extract treatments, medications, details of next visit, etc. from a medical consultation.\n\nHere's how to use Gemini to transcribe audio files.\n\n1. Get a [Gemini API key](https://aistudio.google.com/app/apikey) from Google AI Studio.\n2. Set the `GEMINI_API_KEY` environment variable to the API key.\n3. Set the `MP3_FILE` environment variable to the path of the MP3 file you want to transcribe.\n4. Run this code:\n   ```bash\n   curl -X POST https://generativelanguage.googleapis.com/v1beta/"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_22", "text": "ribe.\n4. Run this code:\n   ```bash\n   curl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-002:streamGenerateContent?alt=sse \\\n     -H \"X-Goog-API-Key: $GEMINI_API_KEY\" \\\n     -H \"Content-Type: application/json\" \\\n     -d \"$(cat << EOF\n   {\n     \"contents\": [\n       {\n         \"role\": \"user\",\n         \"parts\": [\n           {\n             \"inline_data\": {\n               \"mime_type\": \"audio/mp3\",\n               \"data\": \"$(base64 --wrap=0 $MP3_FILE)\"\n             }\n"}
{"source": "Course_content_jan_2025/extracting-audio-and-transcripts.md", "chunk_id": "extracting-audio-and-transcripts.md_part_23", "text": "     \"mime_type\": \"audio/mp3\",\n               \"data\": \"$(base64 --wrap=0 $MP3_FILE)\"\n             }\n           },\n           {\"text\": \"Transcribe this\"}\n         ]\n       }\n     ]\n   }\n   EOF\n   )\"\n   ```"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_1", "text": "- [Tools in Data Science](README.md)\n- [1. Development Tools](development-tools.md)\n  - [Editor: VS Code](vscode.md)\n  - [AI Code Editors: GitHub Copilot](github-copilot.md)\n  - [Python tools: uv](uv.md)\n  - [JavaScript tools: npx](npx.md)\n  - [Unicode](unicode.md)\n  - [Browser: DevTools](devtools.md)\n  - [CSS Selectors](css-selectors.md)\n  - [JSON](json.md)\n  - [Terminal: Bash](bash.md)\n  - [AI Terminal Tools: llm](llm.md)\n  - [Spreadsheet: Excel, Google Sheets](spreadsheets.md)\n  - [Database: "}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_2", "text": "erminal Tools: llm](llm.md)\n  - [Spreadsheet: Excel, Google Sheets](spreadsheets.md)\n  - [Database: SQLite](sqlite.md)\n  - [Version Control: Git, GitHub](git.md)\n- [2. Deployment Tools](deployment-tools.md)\n  - [Markdown](markdown.md)\n  - [Images: Compression](image-compression.md)\n  - [Static hosting: GitHub Pages](github-pages.md)\n  - [Notebooks: Google Colab](colab.md)\n  - [Serverless hosting: Vercel](vercel.md)\n  - [CI/CD: GitHub Actions](github-actions.md)\n  - [Containers: Docker, Podman](d"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_3", "text": "Vercel](vercel.md)\n  - [CI/CD: GitHub Actions](github-actions.md)\n  - [Containers: Docker, Podman](docker.md)\n  - [DevContainers: GitHub Codespaces](github-codespaces.md)\n  - [Tunneling: ngrok](ngrok.md)\n  - [CORS](cors.md)\n  - [REST APIs](rest-apis.md)\n  - [Web Framework: FastAPI](fastapi.md)\n  - [Authentication: Google Auth](google-auth.md)\n  - [Local LLMs: Ollama](ollama.md)\n- [3. Large Language Models](large-language-models.md)\n  - [Prompt engineering](prompt-engineering.md)\n  - [TDS TA Inst"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_4", "text": "e Models](large-language-models.md)\n  - [Prompt engineering](prompt-engineering.md)\n  - [TDS TA Instructions](tds-ta-instructions.md)\n  - [TDS GPT Reviewer](tds-gpt-reviewer.md)\n  - [LLM Sentiment Analysis](llm-sentiment-analysis.md)\n  - [LLM Text Extraction](llm-text-extraction.md)\n  - [Base 64 Encoding](base64-encoding.md)\n  - [Vision Models](vision-models.md)\n  - [Embeddings](embeddings.md)\n  - [Multimodal Embeddings](multimodal-embeddings.md)\n  - [Topic modeling](topic-modeling.md)\n  - [Vect"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_5", "text": " [Multimodal Embeddings](multimodal-embeddings.md)\n  - [Topic modeling](topic-modeling.md)\n  - [Vector databases](vector-databases.md)\n  - [RAG with the CLI)](rag-cli.md)\n  - [Hybrid RAG with TypeSense](hybrid-rag-typesense.md)\n  - [Function Calling](function-calling.md)\n  - [LLM Agents](llm-agents.md)\n  - [LLM Image Generation](llm-image-generation.md)\n  - [LLM Speech](llm-speech.md)\n  - [LLM Evals](llm-evals.md)\n- [Project 1](project-tds-virtual-ta.md)\n- [4. Data Sourcing](data-sourcing.md)\n  "}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_6", "text": "ls](llm-evals.md)\n- [Project 1](project-tds-virtual-ta.md)\n- [4. Data Sourcing](data-sourcing.md)\n  - [Scraping with Excel](scraping-with-excel.md)\n  - [Scraping with Google Sheets](scraping-with-google-sheets.md)\n  - [Crawling with the CLI](crawling-cli.md)\n  - [BBC Weather API with Python](bbc-weather-api-with-python.md)\n  - [Scraping IMDb with JavaScript](scraping-imdb-with-javascript.md)\n  - [Nominatim API with Python](nominatim-api-with-python.md)\n  - [Wikipedia Data with Python](wikipedia-"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_7", "text": "Nominatim API with Python](nominatim-api-with-python.md)\n  - [Wikipedia Data with Python](wikipedia-data-with-python.md)\n  - [Scraping PDFs with Tabula](scraping-pdfs-with-tabula.md)\n  - [Convert PDFs to Markdown](convert-pdfs-to-markdown.md)\n  - [Convert HTML to Markdown](convert-html-to-markdown.md)\n  - [LLM Website Scraping](llm-website-scraping.md)\n  - [LLM Video Screen-Scraping](llm-video-screen-scraping.md)\n  - [Web Automation with Playwright](web-automation-with-playwright.md)\n  - [Schedu"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_8", "text": "een-scraping.md)\n  - [Web Automation with Playwright](web-automation-with-playwright.md)\n  - [Scheduled Scraping with GitHub Actions](scheduled-scraping-with-github-actions.md)\n  - [Scraping emarketer.com](scraping-emarketer.md)\n  - [Scraping: Live Sessions](scraping-live-sessions.md)\n- [5. Data Preparation](data-preparation.md)\n  - [Data Cleansing in Excel](data-cleansing-in-excel.md)\n  - [Data Transformation in Excel](data-transformation-in-excel.md)\n  - [Splitting Text in Excel](splitting-tex"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_9", "text": "ransformation in Excel](data-transformation-in-excel.md)\n  - [Splitting Text in Excel](splitting-text-in-excel.md)\n  - [Data Aggregation in Excel](data-aggregation-in-excel.md)\n  - [Data Preparation in the Shell](data-preparation-in-the-shell.md)\n  - [Data Preparation in the Editor](data-preparation-in-the-editor.md)\n  - [Data Preparation in DuckDB](data-preparation-in-duckdb.md)\n  - [Cleaning Data with OpenRefine](cleaning-data-with-openrefine.md)\n  - [Parsing JSON](parsing-json.md)\n  - [Data T"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_10", "text": "a with OpenRefine](cleaning-data-with-openrefine.md)\n  - [Parsing JSON](parsing-json.md)\n  - [Data Transformation with dbt](dbt.md)\n  - [Transforming Images](transforming-images.md)\n  - [Extracting Audio and Transcripts](extracting-audio-and-transcripts.md)\n    <!-- #TODO Stitching together podcasts from snippets using SoX? -->\n- [6. Data Analysis](data-analysis.md)\n  - [Correlation with Excel](correlation-with-excel.md)\n  - [Regression with Excel](regression-with-excel.md)\n  - [Forecasting with"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_11", "text": "rrelation-with-excel.md)\n  - [Regression with Excel](regression-with-excel.md)\n  - [Forecasting with Excel](forecasting-with-excel.md)\n  - [Outlier Detection with Excel](outlier-detection-with-excel.md)\n  - [Data Analysis with Python](data-analysis-with-python.md)\n  - [Data Analysis with SQL](data-analysis-with-sql.md)\n  - [Data Analysis with Datasette](data-analysis-with-datasette.md)\n  - [Data Analysis with DuckDB](data-analysis-with-duckdb.md)\n  - [Data Analysis with ChatGPT](data-analysis-wi"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_12", "text": "nalysis with DuckDB](data-analysis-with-duckdb.md)\n  - [Data Analysis with ChatGPT](data-analysis-with-chatgpt.md)\n  - [Geospatial Analysis with Excel](geospatial-analysis-with-excel.md)\n  - [Geospatial Analysis with Python](geospatial-analysis-with-python.md)\n  - [Geospatial Analysis with QGIS](geospatial-analysis-with-qgis.md)\n  - [Network Analysis in Python](network-analysis-in-python.md)\n- Project 2\n- [7. Data Visualization](data-visualization.md)\n  - [Visualizing Forecasts with Excel](visua"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_13", "text": "ject 2\n- [7. Data Visualization](data-visualization.md)\n  - [Visualizing Forecasts with Excel](visualizing-forecasts-with-excel.md)\n  - [Visualizing Animated Data with PowerPoint](visualizing-animated-data-with-powerpoint.md)\n  - [Visualizing Animated Data with Flourish](visualizing-animated-data-with-flourish.md)\n  - [Visualizing Network Data with Kumu](visualizing-network-data-with-kumu.md)\n  - [Visualizing Charts with Excel](visualizing-charts-with-excel.md)\n  - [Data Visualization with Seabo"}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_14", "text": "[Visualizing Charts with Excel](visualizing-charts-with-excel.md)\n  - [Data Visualization with Seaborn](data-visualization-with-seaborn.md)\n  - [Data Visualization with ChatGPT](data-visualization-with-chatgpt.md)\n  - [Actor Network Visualization](actor-network-visualization.md)\n  - [RAWgraphs](rawgraphs.md)\n  - [Data Storytelling](data-storytelling.md)\n  - [Narratives with LLMs](narratives-with-llms.md)\n  - [Interactive Notebooks: Marimo](marimo.md)\n  - [HTML Slides: RevealJS](revealjs.md)\n  - "}
{"source": "Course_content_jan_2025/_sidebar.md", "chunk_id": "_sidebar.md_part_15", "text": "lms.md)\n  - [Interactive Notebooks: Marimo](marimo.md)\n  - [HTML Slides: RevealJS](revealjs.md)\n  - [Markdown Presentations: Marp](marp.md)"}
{"source": "Course_content_jan_2025/nominatim-api-with-python.md", "chunk_id": "nominatim-api-with-python.md_part_1", "text": "## Nominatim API with Python\n\n[](https://youtu.be/f0PZ-pphAXE)\n\nYou'll learn how to get the latitude and longitude of any city from the Nominatim API.\n\n- **Introduction to Nominatim**: Understand how Nominatim, from OpenStreetMap, works similarly to Google Maps for geocoding.\n- **Installation and Import**: Learn to install and import [geopy](https://geopy.readthedocs.io/) and [nominatim](https://nominatim.org/).\n- **Using the Locator**: Create a locator object using Nominatim and set up a user a"}
{"source": "Course_content_jan_2025/nominatim-api-with-python.md", "chunk_id": "nominatim-api-with-python.md_part_2", "text": "ominatim.org/).\n- **Using the Locator**: Create a locator object using Nominatim and set up a user agent.\n- **Geocoding an Address**: Use `locator.geocode` to input an address (e.g., Eiffel Tower) and fetch geocoded data.\n- **Extracting Data**: Access detailed information like latitude, longitude, bounding box, and accurate address from the JSON response.\n- **Classifying Locations**: Identify the type of place (e.g., tourism, university) using the response data.\n- **Practical Example**: Geocode "}
{"source": "Course_content_jan_2025/nominatim-api-with-python.md", "chunk_id": "nominatim-api-with-python.md_part_3", "text": "type of place (e.g., tourism, university) using the response data.\n- **Practical Example**: Geocode \"IIT Madras\" and retrieve its full address, type (university), and other relevant information.\n\nHere are links and references:\n\n- [Geocoding using Nominatim - Notebook](https://colab.research.google.com/drive/1-vvP-UyMjHgBqc-hdsUhm3Bsbgi7oO6g)\n- Learn about the [`geocoders` module in the `geopy` package](https://geopy.readthedocs.io/)\n- Learn about the [`nominatim` package](https://nominatim.org/r"}
{"source": "Course_content_jan_2025/nominatim-api-with-python.md", "chunk_id": "nominatim-api-with-python.md_part_4", "text": "kage](https://geopy.readthedocs.io/)\n- Learn about the [`nominatim` package](https://nominatim.org/release-docs/develop/api/Overview/)\n- If you get a HTTP Error 403 from Nominatim, use your email ID or your name instead of \"myGeocoder\" in `Nominatim(user_agent=\"myGeocoder\")`"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_1", "text": "## Parsing JSON\n\nJSON is everywhere\u2014APIs, logs, configuration files\u2014and its nested or large structure can challenge memory and processing. In this tutorial, we'll explore tools to flatten, stream, and query JSON data efficiently.\n\nFor example, we'll often need to process a multi-gigabyte log file from a web service where each record is a JSON object.\n\n[](https://youtu.be/1lxrb_ezP-g)\n\nThis requires us to handle complex nested structures, large files that don't fit in memory, or extract specific "}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_2", "text": "s us to handle complex nested structures, large files that don't fit in memory, or extract specific fields. Here are the key tools and techniques for efficient JSON parsing:\n\n| Tool                                        | Extract from JSON...   | Why                                                               |\n| ------------------------------------------- | ---------------------- | ----------------------------------------------------------------- |\n| [jq](#command-line-json-processing-with-j"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_3", "text": "------------------------------------------------------ |\n| [jq](#command-line-json-processing-with-jq) | JSON in the shell      | Quick data exploration and pipeline processing                    |\n| [JMESPath](#jmespath-queries)               | JSON in Python         | Handle complex queries with a clean syntax                        |\n| [ijson](#streaming-with-ijson)              | JSON streams in Python | Parse streaming/large JSON files memory-efficiently               |\n| [Pandas](#pandas-j"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_4", "text": "in Python | Parse streaming/large JSON files memory-efficiently               |\n| [Pandas](#pandas-json-columns)              | JSON columns in Python | Fast analysis of structured data                                  |\n| [SQL JSON](#sql-json-functions)             | JSON in databases      | Combine structured and semi-structured data                       |\n| [DuckDB](#duckdb-json-processing)           | JSON anywhere          | Fast analysis of JSON files / databases without loading to memory"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_5", "text": "        | JSON anywhere          | Fast analysis of JSON files / databases without loading to memory |\n\n**Examples:**\n\n- Use Pandas when you need to transform API responses into a DataFrame for further analysis.\n- Leverage ijson when dealing with huge JSON logs where memory is at a premium.\n- Apply jq for quick, iterative exploration directly in your terminal.\n\nPractice with these resources:\n\n- [JSONPath Online Evaluator](https://jsonpath.com/): Test JSON queries\n- [jq play](https://jqplay.org/)"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_6", "text": "SONPath Online Evaluator](https://jsonpath.com/): Test JSON queries\n- [jq play](https://jqplay.org/): Interactive jq query testing\n- [DuckDB JSON Tutorial](https://duckdb.org/docs/data/json): Learn DuckDB JSON functions\n\n### Command-line JSON Processing with jq\n\n[jq](https://jqlang.org/) is a versatile command-line tool for slicing, filtering, and transforming JSON. It excels in quick data exploration and can be integrated into shell scripts for automated data pipelines.\n\n**Example:** Sifting th"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_7", "text": "tion and can be integrated into shell scripts for automated data pipelines.\n\n**Example:** Sifting through server logs in JSON Lines format to extract error messages or aggregate metrics without launching a full-scale ETL process.\n\n```bash\n# Extract specific fields from JSONL\ncat data.jsonl | jq -c 'select(.type == \"user\") | {id, name}'\n\n# Transform JSON structure\ncat data.json | jq '.items[] | {name: .name, count: .details.count}'\n\n# Filter and aggregate\ncat events.jsonl | jq -s 'group_by(.categ"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_8", "text": "me: .name, count: .details.count}'\n\n# Filter and aggregate\ncat events.jsonl | jq -s 'group_by(.category) | map({category: .[0].category, count: length})'\n```\n\n### JMESPath Queries\n\n[JMESPath](https://jmespath.org/) offers a declarative query language to extract and transform data from nested JSON structures without needing verbose code. It's a neat alternative when you want to quickly pull out specific values or filter collections based on conditions.\n\n**Example:** Extracting user emails or filt"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_9", "text": "cific values or filter collections based on conditions.\n\n**Example:** Extracting user emails or filtering out inactive records from a complex JSON payload received from a cloud service.\n\n```python\nimport jmespath\n\n# Example queries\ndata = {\n    \"locations\": [\n        {\"name\": \"Seattle\", \"state\": \"WA\", \"info\": {\"population\": 737015}},\n        {\"name\": \"Portland\", \"state\": \"OR\", \"info\": {\"population\": 652503}}\n    ]\n}\n\n# Find all cities with population > 700000\ncities = jmespath.search(\"locations["}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_10", "text": "\": 652503}}\n    ]\n}\n\n# Find all cities with population > 700000\ncities = jmespath.search(\"locations[?info.population > `700000`].name\", data)\n```\n\n### Streaming with ijson\n\nLoading huge JSON files all at once can quickly exhaust system memory. [ijson](https://ijson.readthedocs.io/en/latest/) lets you stream and process JSON incrementally. This method is ideal when your JSON file is too large or when you only need to work with part of the data.\n\n**Example:** Processing a continuous feed from an A"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_11", "text": "en you only need to work with part of the data.\n\n**Example:** Processing a continuous feed from an API that returns a large JSON array, such as sensor data or event logs, while filtering on the fly.\n\n```python\nimport ijson\n\nasync def process_large_json(filepath: str) -> list:\n    \"\"\"Process a large JSON file without loading it entirely into memory.\"\"\"\n    results = []\n\n    with open(filepath, 'rb') as file:\n        # Stream objects under the 'items' key\n        parser = ijson.items(file, 'items."}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_12", "text": ") as file:\n        # Stream objects under the 'items' key\n        parser = ijson.items(file, 'items.item')\n        async for item in parser:\n            if item['value'] > 100:  # Process conditionally\n                results.append(item)\n\n    return results\n```\n\n### Pandas JSON Columns\n\n[Pandas](https://pandas.pydata.org/) makes it easy to work with tabular data that includes JSON strings. When you receive API data where one column holds nested JSON, flattening these structures lets you analyze"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_13", "text": "ou receive API data where one column holds nested JSON, flattening these structures lets you analyze and visualize the data using familiar DataFrame operations.\n\n**Example:** Flattening customer records stored as nested JSON in a CSV file to extract demographic details and spending patterns.\n\n```python\nimport pandas as pd\n\n# Parse JSON strings in a column\ndf = pd.DataFrame({'json_col': ['{\"name\": \"Alice\", \"age\": 30}', '{\"name\": \"Bob\", \"age\": 25}']})\ndf['parsed'] = df['json_col'].apply(pd.json_no"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_14", "text": "\"Alice\", \"age\": 30}', '{\"name\": \"Bob\", \"age\": 25}']})\ndf['parsed'] = df['json_col'].apply(pd.json_normalize)\n\n# Normalize nested JSON columns\ndf = pd.read_csv('data.csv')\ndf_normalized = pd.json_normalize(\n    df['nested_json'].apply(json.loads),\n    record_path=['items'],        # List of nested objects to unpack\n    meta=['id', 'timestamp']      # Keep these columns from parent\n)\n```\n\n### SQL JSON Functions\n\n[SQL](https://en.wikipedia.org/wiki/SQL:2016) supports built-in JSON functions allow y"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_15", "text": "ON Functions\n\n[SQL](https://en.wikipedia.org/wiki/SQL:2016) supports built-in JSON functions allow you to query and manipulate JSON stored within relational databases.\nThese are implemented by most popular databases, including\n[SQLite](https://www.sqlite.org/json1.html),\n[PostgreSQL](https://www.postgresql.org/docs/current/functions-json.html), and\n[MySQL](https://dev.mysql.com/doc/refman/8.4/en/json-function-reference.html).\nThis is especially handy when you have a hybrid data model, combining "}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_16", "text": "son-function-reference.html).\nThis is especially handy when you have a hybrid data model, combining structured tables with semi-structured JSON columns.\n\n**Example:** An application that stores user settings or application logs as JSON in a SQLite database, enabling quick lookups and modifications without external JSON parsing libraries.\n\n```sql\nSELECT\n    json_extract(data, '$.name') as name,\n    json_extract(data, '$.details.age') as age\nFROM users\nWHERE json_extract(data, '$.active') = true\n`"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_17", "text": " json_extract(data, '$.details.age') as age\nFROM users\nWHERE json_extract(data, '$.active') = true\n```\n\n### DuckDB JSON Processing\n\n[DuckDB](https://duckdb.org/) shines when analyzing JSON/JSONL files directly, making it a powerful tool for data analytics without the overhead of loading entire datasets into memory. Its SQL-like syntax simplifies exploratory analysis on nested data.\n\n**Example:** Performing ad-hoc analytics on streaming JSON logs from a web service, such as calculating average re"}
{"source": "Course_content_jan_2025/parsing-json.md", "chunk_id": "parsing-json.md_part_18", "text": "erforming ad-hoc analytics on streaming JSON logs from a web service, such as calculating average response times or aggregating user behavior metrics.\n\n```sql\nSELECT\n    json_extract_string(data, '$.user.name') as name,\n    avg(json_extract_float(data, '$.metrics.value')) as avg_value\nFROM read_json_auto('data/*.jsonl')\nGROUP BY 1\nHAVING avg_value > 100\n```"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_1", "text": "## Prompt Engineering\n\nPrompt engineering is the process of crafting effective prompts for large language models (LLMs).\n\nOne of the best ways to approach prompt engineering is to think of LLMs as a smart colleague (with amnesia) who needs explicit instructions.\n\nThe most authoritative guides are from the LLM providers themselves:\n\n- [Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/)\n- [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_2", "text": "/prompt-engineering/)\n- [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/introduction-prompt-design)\n- [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering)\n\nHere are some best practices:\n\n### Use prompt optimizers\n\nThey rewrite your prompt to improve it. Explore:\n\n- [Anthropic Prompt Optimizer](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/prompt-improver)\n- [OpenAI Prompt Generation](https://platform.openai.com/docs/guides/pr"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_3", "text": "engineering/prompt-improver)\n- [OpenAI Prompt Generation](https://platform.openai.com/docs/guides/prompt-generation)\n- [Google AI-powered prompt writing tools](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/ai-powered-prompt-writing)\n\n### Be clear, direct, and detailed\n\nBe explicit and thorough. Include all necessary context, goals, and details so the model understands the full picture.\n\n- **BAD**: _Explain gravitation lensing._ (Reason: Vague and lacks context or detail.)\n-"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_4", "text": "l picture.\n\n- **BAD**: _Explain gravitation lensing._ (Reason: Vague and lacks context or detail.)\n- **GOOD**: _Explain the concept of gravitational lensing to a high school student who understands basic physics, including how it\u2019s observed and its significance in astronomy._ (Reason: Specifies the audience, scope, and focus.)\n\n> When you ask a question, don\u2019t be vague. Spell it out. Give every detail the listener needs.\n> The clearer you are, the better the answer you\u2019ll get.\n> For example, don"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_5", "text": "tail the listener needs.\n> The clearer you are, the better the answer you\u2019ll get.\n> For example, don't just say, Explain Gravitation Lensing.\n> Say, Explain the concept of gravitational lensing to a high school student who understands basic physics, including how it\u2019s observed and its significance in astronomy.\n\n[Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/be-clear-and-direct)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-incl"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_6", "text": "-clear-and-direct)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-include-details-in-your-query-to-get-more-relevant-answers)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/clear-instructions)\n\n### Give examples\n\nProvide 2-3 relevant examples to guide the model on the style, structure, or format you expect. This helps the model produce outputs consistent with your desired style.\n\n- **BAD**: _Explain how to tie a bow tie._ (Reason: No "}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_7", "text": "outputs consistent with your desired style.\n\n- **BAD**: _Explain how to tie a bow tie._ (Reason: No examples or reference points given.)\n- **GOOD**:\n  _Explain how to tie a bow tie. For example:_\n\n  1. _To tie a shoelace, you cross the laces and pull them tight..._\n  2. _To tie a necktie, you place it around the collar and loop it through..._\n\n  _Now, apply a similar step-by-step style to describe how to tie a bow tie._ (Reason: Provides clear examples and a pattern to follow.)\n\n> Give examples "}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_8", "text": " how to tie a bow tie._ (Reason: Provides clear examples and a pattern to follow.)\n\n> Give examples to the model. If you want someone to build a house, show them a sketch. Don\u2019t just say \u2018build something.\u2019\n> Giving examples is like showing a pattern. It makes everything easier to follow.\n\n[Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/multishot-prompting)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-provide-examples)\n| [Google]"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_9", "text": "enAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-provide-examples)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/few-shot-examples)\n\n### Think step by step\n\nInstruct the model to reason through the problem step by step. This leads to more logical, well-structured answers.\n\n- **BAD**: _Given this transcript, is the customer satisfied?_ (Reason: No prompt for structured reasoning.)\n- **GOOD**: _Given this transcript, is the customer satisfied"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_10", "text": ": No prompt for structured reasoning.)\n- **GOOD**: _Given this transcript, is the customer satisfied? Think step by step._ (Reason: Directly instructs the model to break down reasoning into steps.)\n\n> Ask the model to think step by step. Don\u2019t ask the model to just give the final answer right away.\n> That's like asking someone to answer with the first thing that pops into their head.\n> Instead, ask them to break down their thought process into simple moves \u2014 like showing each rung of a ladder as"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_11", "text": "k them to break down their thought process into simple moves \u2014 like showing each rung of a ladder as they climb.\n> For example, when thinking step by step, the model could, A, list each customer question, B, find out if it was addressed, and C, decide that the agent answered only 2 out of the 3 questions.\n\n[Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/chain-of-thought)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#strategy-give-models"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_12", "text": "-thought)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#strategy-give-models-time-to-think)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/break-down-prompts)\n\n### Assign a role\n\nSpecify a role or persona for the model. This provides context and helps tailor the response style.\n\n- **BAD**: _Explain how to fix a software bug._ (Reason: No role or perspective given.)\n- **GOOD**: _You are a seasoned software engineer. Explain how to fix a soft"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_13", "text": " or perspective given.)\n- **GOOD**: _You are a seasoned software engineer. Explain how to fix a software bug in legacy code, including the debugging and testing process._ (Reason: Assigns a clear, knowledgeable persona, guiding the style and depth.)\n\n> Tell the model who they are. Maybe they\u2019re a seasoned software engineer fixing a legacy bug, or an experienced copy editor revising a publication.\n> By clearly telling the model who they are, you help them speak with just the right expertise and s"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_14", "text": "> By clearly telling the model who they are, you help them speak with just the right expertise and style.\n> Suddenly, your explanation sounds like it\u2019s coming from a true specialist, not a random voice.\n\n[Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/system-prompts)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-ask-the-model-to-adopt-a-persona)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/assign"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_15", "text": "opt-a-persona)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/assign-role)\n\n### Use XML to structure your prompt\n\nUse XML tags to separate different parts of the prompt clearly. This helps the model understand structure and requirements.\n\n- **BAD**: _Here\u2019s what I want: Provide a summary and then an example._ (Reason: Unstructured, no clear separation of tasks.)\n- **GOOD**:\n  ```xml\n  <instructions>\n    Provide a summary of the concept of machine learning.\n  </ins"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_16", "text": "*GOOD**:\n  ```xml\n  <instructions>\n    Provide a summary of the concept of machine learning.\n  </instructions>\n  <example>\n    Then provide a simple, concrete example of a machine learning application (e.g., an email spam filter).\n  </example>\n  ```\n  (Reason: Uses XML tags to clearly distinguish instructions from examples.)\n\n> Think of your request like a box. XML tags are neat little labels on that box.\n> They help keep parts sorted, so nothing gets lost in the shuffle.\n\n[Anthropic](https://do"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_17", "text": "hat box.\n> They help keep parts sorted, so nothing gets lost in the shuffle.\n\n[Anthropic](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags)\n| [OpenAI](https://platform.openai.com/docs/guides/prompt-engineering#tactic-use-delimiters-to-clearly-indicate-distinct-parts-of-the-input)\n| [Google](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/structure-prompts)\n\n### Use Markdown to format your output\n\nEncourage the model to use Markdown for head"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_18", "text": "cture-prompts)\n\n### Use Markdown to format your output\n\nEncourage the model to use Markdown for headings, lists, code blocks, and other formatting features to produce structured, easily readable answers.\n\n- **BAD**: _Give me the steps in plain text._ (Reason: No specific formatting instructions, less readable.)\n- **GOOD**: _Provide the steps in a markdown-formatted list with ### headings for each section and numbered bullet points._ (Reason: Directly instructs to use Markdown formatting, making "}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_19", "text": "section and numbered bullet points._ (Reason: Directly instructs to use Markdown formatting, making output more structured and clear.)\n- **BAD**: _Correct the spelling and show the corrections._ (Reason: No specific formatting instructions)\n- **GOOD**: _Correct the spelling, showing &lt;ins&gt;additions&lt;/ins&gt; and &lt;del&gt;deletions&lt;/del&gt;._ (Reason: Directly instructs to use HTML formatting, making output more structured and clear.)\n\n> Markdown is a simple formatting language that a"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_20", "text": "atting, making output more structured and clear.)\n\n> Markdown is a simple formatting language that all models understand.\n> You can have them add neat headings, sections, bold highlights, and bullet points.\n> These make complex documents more scannable and easy on the eyes.\n\n### Use JSON for machine-readable output\n\nWhen you need structured data, ask for a JSON-formatted response. This ensures the output is machine-readable and organized.\n\n- **BAD**: _Just list the items._ (Reason: Unstructured "}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_21", "text": " output is machine-readable and organized.\n\n- **BAD**: _Just list the items._ (Reason: Unstructured plain text makes parsing harder.)\n- **GOOD**:\n\n  ````markdown\n  Organize as an array of objects in a JSON format, like this:\n\n  ```json\n  [\n    { \"name\": \"Item 1\", \"description\": \"Description of Item 1\" },\n    { \"name\": \"Item 2\", \"description\": \"Description of Item 2\" },\n    { \"name\": \"Item 3\", \"description\": \"Description of Item 3\" }\n  ]\n  ```\n  ````\n\n  (Reason: Instructing JSON format ensures st"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_22", "text": "cription\": \"Description of Item 3\" }\n  ]\n  ```\n  ````\n\n  (Reason: Instructing JSON format ensures structured, machine-readable output.)\n\nNote: Always use [JSON schema](playground#attachments) if possible. [JSON schema](https://json-schema.org/) is a way to describe the structure of JSON data. An easy way to get the JSON schema is to give ChatGPT sample output and ask it to generate the schema.\n\n> Imagine you\u2019re organizing data for a big project. Plain text is like dumping everything into one mes"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_23", "text": "Imagine you\u2019re organizing data for a big project. Plain text is like dumping everything into one messy pile \u2014 it\u2019s hard to find what you need later.\n> JSON, on the other hand, is like packing your data into neat, labeled boxes within boxes.\n> Everything has its place: fields like \u2018name,\u2019 \u2018description,\u2019 and \u2018value\u2019 make the data easy to read, especially for machines.\n> For example, instead of just listing items, you can structure them as a JSON array, with each item as an object.\n> That way, when"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_24", "text": "listing items, you can structure them as a JSON array, with each item as an object.\n> That way, when you hand it to a program, it\u2019s all clear and ready to use.\n\n### Prefer Yes/No answers\n\nConvert rating or percentage questions into Yes/No queries. LLMs handle binary choices better than numeric scales.\n\n- **BAD**: _On a scale of 1-10, how confident are you that this method works?_ (Reason: Asks for a numeric rating, which can be imprecise.)\n- **GOOD**: _Is this method likely to work as intended? "}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_25", "text": " a numeric rating, which can be imprecise.)\n- **GOOD**: _Is this method likely to work as intended? Please give a reasoning and then answer Yes or No._ (Reason: A binary question simplifies the response and clarifies what\u2019s being asked.)\n\n> Don\u2019t ask \u2018On a scale of one to five...\u2019. Models are not good with numbers.\n> They don't know how to grade something 7 versus 8 on a 10 point scale. \u2018Yes or no?\u2019 is simple. It\u2019s clear. It\u2019s quick.\n> So, break your question into simple parts that they can answ"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_26", "text": "?\u2019 is simple. It\u2019s clear. It\u2019s quick.\n> So, break your question into simple parts that they can answer with just a yes or a no.\n\n### Ask for reason first, then the answer\n\nInstruct the model to provide its reasoning steps _before_ stating the final answer. This makes it less likely to justify itself and more likely to think deeper, leading to more accurate results.\n\n- **BAD**: _What is the best route to take?_ (Reason: Direct question without prompting reasoning steps first.)\n- **GOOD**: _First,"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_27", "text": "ute to take?_ (Reason: Direct question without prompting reasoning steps first.)\n- **GOOD**: _First, explain your reasoning step by step for how you determine the best route. Then, after you\u2019ve reasoned it out, state your final recommendation for the best route._ (Reason: Forces the model to show its reasoning process before giving the final answer.)\n\n> BEFORE making its final choice, have the model talk through their thinking. Reasoning first, answer second.\n> That way, the model won't be tempt"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_28", "text": "el talk through their thinking. Reasoning first, answer second.\n> That way, the model won't be tempted to justify an answer that they gave impulsively. It is also more likely to think deeper.\n\n### Use proper spelling and grammar\n\nA well-written, grammatically correct prompt clarifies expectations. Poorly structured prompts can confuse the model.\n\n- **BAD**: _xplin wht the weirless netork do? make shur to giv me a anser??_ (Reason: Poor spelling and unclear instructions.)\n- **GOOD**: _Explain wha"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_29", "text": "shur to giv me a anser??_ (Reason: Poor spelling and unclear instructions.)\n- **GOOD**: _Explain what a wireless network does. Please provide a detailed, step-by-step explanation._ (Reason: Proper spelling and clarity lead to a more coherent response.)\n\n> If your question sounds like gibberish, expect a messy answer. Speak cleanly.\n> When you do, the response will be much clearer.\n\n## Video Tutorials\n\nWatch [Prompt Engineering Tutorial \u2013 Master ChatGPT and LLM Responses (41 min)](https://youtu.b"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_30", "text": "als\n\nWatch [Prompt Engineering Tutorial \u2013 Master ChatGPT and LLM Responses (41 min)](https://youtu.be/_ZvnD73m40o). It covers:\n\n1. Basics of **AI and large language models**.\n2. How to write clear and detailed prompts to improve answers.\n3. Tips for creating interactive and personalized AI responses.\n4. Advanced topics like **AI mistakes** (hallucinations) and **text embeddings** (how AI understands words).\n5. Fun examples, like making AI write poems or correct grammar.\n\n[](https://youtu.be/_Zvn"}
{"source": "Course_content_jan_2025/prompt-engineering.md", "chunk_id": "prompt-engineering.md_part_31", "text": "ds words).\n5. Fun examples, like making AI write poems or correct grammar.\n\n[](https://youtu.be/_ZvnD73m40o)"}
{"source": "Course_content_jan_2025/github-copilot.md", "chunk_id": "github-copilot.md_part_1", "text": "## AI Editor: GitHub Copilot\n\nAI Code Editors like [GitHub Copilot](https://github.com/features/copilot), [Cursor](https://www.cursor.com/), [Windsurf](http://windsurf.com/), [Roo Code](https://roocode.com/), [Cline](https://cline.bot/), [Continue.dev](https://www.continue.dev/), etc. use LLMs to help you write code faster.\n\nMost are built on top of [VS Code](vscode.md). These are now a standard tool in every developer's toolkit.\n\n[GitHub Copilot](https://github.com/features/copilot) is [free](h"}
{"source": "Course_content_jan_2025/github-copilot.md", "chunk_id": "github-copilot.md_part_2", "text": "ool in every developer's toolkit.\n\n[GitHub Copilot](https://github.com/features/copilot) is [free](https://github.com/features/copilot/plans) (as of May 2025) for 2,000 completions and 50 chats.\n\n[](https://youtu.be/n0NlxUyA7FI)\n\nYou should learn about:\n\n- [Code Suggestions](https://docs.github.com/en/enterprise-cloud@latest/copilot/using-github-copilot/using-github-copilot-code-suggestions-in-your-editor), which is a basic feature.\n- [Using Chat](https://docs.github.com/en/copilot/github-copilo"}
{"source": "Course_content_jan_2025/github-copilot.md", "chunk_id": "github-copilot.md_part_3", "text": "r-editor), which is a basic feature.\n- [Using Chat](https://docs.github.com/en/copilot/github-copilot-chat/using-github-copilot-chat-in-your-ide), which lets you code in natural language.\n- [Changing the chat model](https://docs.github.com/en/copilot/using-github-copilot/ai-models/changing-the-ai-model-for-copilot-chat). The free version includes Claude 3.5 Sonnet, a good coding model.\n- [Prompts](https://docs.github.com/en/copilot/copilot-chat-cookbook) to understand how people use AI code edit"}
{"source": "Course_content_jan_2025/github-copilot.md", "chunk_id": "github-copilot.md_part_4", "text": "(https://docs.github.com/en/copilot/copilot-chat-cookbook) to understand how people use AI code editors."}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_1", "text": "## Containers: Docker, Podman\n\n[Docker](https://www.docker.com/) and [Podman](https://podman.io/) are containerization tools that package your application and its dependencies into a standardized unit for software development and deployment.\n\nDocker is the industry standard. Podman is compatible with Docker and has better security (and a slightly more open license). In this course, we recommend Podman but Docker works in the same way.\n\nInitialize the container engine:\n\n```bash\npodman machine ini"}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_2", "text": "dman but Docker works in the same way.\n\nInitialize the container engine:\n\n```bash\npodman machine init\npodman machine start\n```\n\nCommon Operations. (You can use `docker` instead of `podman` in the same way.)\n\n```bash\n# Pull an image\npodman pull python:3.11-slim\n\n# Run a container\npodman run -it python:3.11-slim\n\n# List containers\npodman ps -a\n\n# Stop container\npodman stop container_id\n\n# Scan image for vulnerabilities\npodman scan myapp:latest\n\n# Remove container\npodman rm container_id\n\n# Remove a"}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_3", "text": " for vulnerabilities\npodman scan myapp:latest\n\n# Remove container\npodman rm container_id\n\n# Remove all stopped containers\npodman container prune\n```\n\nYou can create a `Dockerfile` to build a container image. Here's a sample `Dockerfile` that converts a Python script into a container image.\n\n```dockerfile\nFROM python:3.11-slim\n# Set working directory\nWORKDIR /app\n# Typically, you would use `COPY . .` to copy files from the host machine,\n# but here we're just using a simple script.\nRUN echo 'print"}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_4", "text": ".` to copy files from the host machine,\n# but here we're just using a simple script.\nRUN echo 'print(\"Hello, world!\")' > app.py\n# Run the script\nCMD [\"python\", \"app.py\"]\n```\n\nTo build, run, and deploy the container, run these commands:\n\n```bash\n# Create an account on https://hub.docker.com/ and then login\npodman login docker.io\n\n# Build and run the container\npodman build -t py-hello .\npodman run -it py-hello\n\n# Push the container to Docker Hub. Replace $DOCKER_HUB_USERNAME with your Docker Hub u"}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_5", "text": "it py-hello\n\n# Push the container to Docker Hub. Replace $DOCKER_HUB_USERNAME with your Docker Hub username.\npodman push py-hello:latest docker.io/$DOCKER_HUB_USERNAME/py-hello\n\n# Push adding a specific tag, e.g. dev\nTAG=dev podman push py-hello docker.io/$DOCKER_HUB_USERNAME/py-hello:$TAG\n```\n\nTools:\n\n- [Dive](https://github.com/wagoodman/dive): Explore image layers\n- [Skopeo](https://github.com/containers/skopeo): Work with container images\n- [Trivy](https://github.com/aquasecurity/trivy): Sec"}
{"source": "Course_content_jan_2025/docker.md", "chunk_id": "docker.md_part_6", "text": "containers/skopeo): Work with container images\n- [Trivy](https://github.com/aquasecurity/trivy): Security scanner\n\n[](https://youtu.be/YXfA5O5Mr18)\n\n[](https://youtu.be/gAkwW2tuIqE)\n\n- Optional: For Windows, see [WSL 2 with Docker getting started](https://youtu.be/5RQbdMn04Oc)"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_1", "text": "## JSON\n\nJSON (JavaScript Object Notation) is the de facto standard format for data exchange on the web and APIs. Its human-readable format and widespread support make it essential for data scientists working with web services, APIs, and configuration files.\n\nFor data scientists, JSON is essential when:\n\n- Working with REST APIs and web services\n- Storing configuration files and metadata\n- Parsing semi-structured data from databases like MongoDB\n- Creating data visualization specifications (e.g."}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_2", "text": " semi-structured data from databases like MongoDB\n- Creating data visualization specifications (e.g., Vega-Lite)\n\nWatch this comprehensive introduction to JSON (15 min):\n\n[](https://youtu.be/GpOO5iKzOmY)\n\nKey concepts to understand in JSON:\n\n- JSON only supports 6 data types: strings, numbers, booleans, null, arrays, and objects\n- You can nest data. Arrays and objects can contain other data types, including other arrays and objects\n- Always validate. Ensure JSON is well-formed. Comm errors: Trai"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_3", "text": " including other arrays and objects\n- Always validate. Ensure JSON is well-formed. Comm errors: Trailing commas, missing quotes, and escape characters\n\n[JSON Lines](https://jsonlines.org/) is a format that allows you to store multiple JSON objects in a single line.\nIt's useful for logging and streaming data.\n\nTools you could use with JSON:\n\n- [JSONLint](https://jsonlint.com/): Validate and format JSON\n- [JSON Editor Online](https://jsoneditoronline.org/): Visual JSON editor and formatter\n- [JSON"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_4", "text": "JSON\n- [JSON Editor Online](https://jsoneditoronline.org/): Visual JSON editor and formatter\n- [JSON Schema](https://json-schema.org/): Define the structure of your JSON data\n- [jq](https://stedolan.github.io/jq/): Command-line JSON processor\n\nCommon Python operations with JSON:\n\n```python\nimport json\n\n# Parse JSON string\njson_str = '{\"name\": \"Alice\", \"age\": 30}'\ndata = json.loads(json_str)\n\n# Convert to JSON string\njson_str = json.dumps(data, indent=2)\n\n# Read JSON from file\nwith open('data.jso"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_5", "text": "vert to JSON string\njson_str = json.dumps(data, indent=2)\n\n# Read JSON from file\nwith open('data.json') as f:\n    data = json.load(f)\n\n# Write JSON to file\nwith open('output.json', 'w') as f:\n    json.dump(data, f, indent=2)\n\n# Read JSON data a Pandas DataFrame. JSON data is typically stored as an array of objects.\nimport pandas as pd\ndf = pd.read_json('data.json')\n\n# Read JSON lines from file into a DataFrame. JSON lines are typically one line per object.\ndf = pd.read_json('data.jsonl', lines=T"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_6", "text": "o a DataFrame. JSON lines are typically one line per object.\ndf = pd.read_json('data.jsonl', lines=True)\n```\n\nPractice JSON skills with these resources:\n\n- [JSON Generator](https://json-generator.com/): Create sample JSON data\n- [JSON Path Finder](https://jsonpathfinder.com/): Learn to navigate complex JSON structures\n- [JSON Schema Validator](https://www.jsonschemavalidator.net/): Validate JSON against schemas"}
{"source": "Course_content_jan_2025/json.md", "chunk_id": "json.md_part_7", "text": "gainst schemas"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_1", "text": "# Live Session: 07 Feb 2025\n\n[](https://youtu.be/SiW-rcMk0Nk)\n\n**Q1: How difficult are the TDS assignments?**\n\n**A1:** The first assignment was easy, the second was hard, the third was average, and the fourth seems easy. However, the instructor notes that the first assignment was only easy for those with a technical background; for most students, it was very difficult. The difficulty level of subsequent assignments will decrease.\n\n**Q2: Where can I find the recording of yesterday's session?**\n\n*"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_2", "text": "equent assignments will decrease.\n\n**Q2: Where can I find the recording of yesterday's session?**\n\n**A2:** It's already uploaded to your calendar associated with your IIT-DS ID. It takes Google about an hour or two to process the video.\n\n**Q3: How do I use the BBC Weather API to get weather data for a specific location?**\n\n**A3:** First, use the BBC location service API to get the location ID for your city (e.g., Delhi). You can use the Thunder Client extension or Postman to send the API request"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_3", "text": "your city (e.g., Delhi). You can use the Thunder Client extension or Postman to send the API request. The instructor demonstrates using Postman. Once you have the location ID, use it in the BBC Weather API endpoint.\n\n**Q4: How do I access data from a JSON object in Python?**\n\n**A4:** JSON objects are like Python dictionaries. You can access the data using standard Python dictionary access methods. The instructor shows how to access the \"reports\" key.\n\n**Q5: How do I prepare for the upcoming R.O."}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_4", "text": " The instructor shows how to access the \"reports\" key.\n\n**Q5: How do I prepare for the upcoming R.O.E.?**\n\n**A5:** The instructor recommends creating your own code and keeping it ready. Separate sessions will be held to cover this.\n\n**Q6: How do I use Nominatim to get geolocation data?**\n\n**A6:** Nominatim is an API used for extracting geolocation data. The instructor demonstrates how to use it with Postman, showing how to pass parameters for the location (e.g., \"Delhi\") and specify the desired "}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_5", "text": "th Postman, showing how to pass parameters for the location (e.g., \"Delhi\") and specify the desired format (JSON). The instructor notes that Nominatim may return multiple results if there are multiple locations with the same name (e.g., Delhi in India and Delhi in the United States).\n\n**Q7: How do I use Beautiful Soup to parse XML data?**\n\n**A7:** The instructor demonstrates using Beautiful Soup to parse XML data from the Hacker News API. The instructor explains how to use the `find_all` functio"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_6", "text": "o parse XML data from the Hacker News API. The instructor explains how to use the `find_all` function to locate specific tags (e.g., \"item\") and extract the desired information. The instructor also explains the difference between `find` and `findall` functions. The instructor notes that if you encounter issues, you can use an XML viewer to examine the structure of the XML file. The instructor also explains that you should use an XML parser (lxml) instead of an HTML parser.\n\n**Q8: How do I handle"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_7", "text": " explains that you should use an XML parser (lxml) instead of an HTML parser.\n\n**Q8: How do I handle situations where the number of values in different lists doesn't match?**\n\n**A8:** If the lengths of lists (e.g., product names, prices, links) don't match, it usually means there's an extra value. The instructor shows how to handle this by checking the lengths of the lists and potentially removing extra values.\n\n**Q9: How do I save the extracted data to a CSV file?**\n\n**A9:** The instructor demo"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_8", "text": " extra values.\n\n**Q9: How do I save the extracted data to a CSV file?**\n\n**A9:** The instructor demonstrates using the pandas library to create a DataFrame from the extracted data and then saving it to a CSV file using the `to_csv` method.\n\n**Q10: How do I scrape data from multiple pages of a website?**\n\n**A10:** Many websites allow scraping, but you should always check their terms and conditions. If a website allows scraping, you can often use a page parameter in the URL to access subsequent pa"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_9", "text": " If a website allows scraping, you can often use a page parameter in the URL to access subsequent pages (e.g., `page=2` for the second page). You can use a for loop to iterate through multiple pages.\n\n**Q11: What are the legal and technical considerations when scraping websites?**\n\n**A11:** Always check the website's terms and conditions before scraping. Some websites can detect when requests are not coming from a browser and may block you. To avoid this, use a sleep timer between requests to gi"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_10", "text": "not coming from a browser and may block you. To avoid this, use a sleep timer between requests to give the server time to respond. Selenium is an alternative approach that simulates a browser, but it's more involved than Beautiful Soup. The instructor mentions being banned from Nominatim for sending too many requests in a short time frame.\n\n**Q12: How can I use Beautiful Soup to extract data from an e-commerce website?**\n\n**A12:** The instructor demonstrates using Beautiful Soup to extract produ"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_11", "text": "an e-commerce website?**\n\n**A12:** The instructor demonstrates using Beautiful Soup to extract product names, prices, and links from an Amazon search result page. The instructor explains how to use the `find_all` function to locate specific tags and attributes (e.g., `span` elements with a specific class) and extract the text content. The instructor also shows how to convert string prices to numerical values. The instructor notes that the order of elements is preserved when using Beautiful Soup,"}
{"source": "Course_content_jan_2025/live-session-2025-02-07.md", "chunk_id": "live-session-2025-02-07.md_part_12", "text": "ical values. The instructor notes that the order of elements is preserved when using Beautiful Soup, ensuring that data is correctly associated."}
{"source": "Course_content_jan_2025/data-analysis-with-sql.md", "chunk_id": "data-analysis-with-sql.md_part_1", "text": "## Data Analysis with SQL\n\n[](https://youtu.be/Xn3QkYrThbI)\n\nYou'll learn how to perform data analysis using SQL (via Python), covering:\n\n- **Database Connection**: How to connect to a MySQL database using SQLAlchemy and Pandas.\n- **SQL Queries**: Execute SQL queries directly from a Python environment to retrieve and analyze data.\n- **Counting Rows**: Use SQL to count the number of rows in a table.\n- **User Activity Analysis**: Query and identify top users by post count.\n- **Post Concentration**"}
{"source": "Course_content_jan_2025/data-analysis-with-sql.md", "chunk_id": "data-analysis-with-sql.md_part_2", "text": ".\n- **User Activity Analysis**: Query and identify top users by post count.\n- **Post Concentration**: Determine if a small percentage of users contribute the majority of posts using SQL aggregation.\n- **Correlation Calculation**: Calculate the Pearson correlation coefficient between user attributes such as age and reputation.\n- **Regression Analysis**: Compute the regression slope to understand the relationship between views and reputation.\n- **Handling Large Data**: Perform calculations on larg"}
{"source": "Course_content_jan_2025/data-analysis-with-sql.md", "chunk_id": "data-analysis-with-sql.md_part_3", "text": "e relationship between views and reputation.\n- **Handling Large Data**: Perform calculations on large datasets by fetching aggregated values from the database rather than entire datasets.\n- **Statistical Analysis in SQL**: Use SQL as a tool for statistical analysis, demonstrating its power beyond simple data retrieval.\n- **Leveraging AI**: Use ChatGPT to generate SQL queries and Python code, enhancing productivity and accuracy.\n\nHere are the links used in the video:\n\n- [Data analysis with databa"}
{"source": "Course_content_jan_2025/data-analysis-with-sql.md", "chunk_id": "data-analysis-with-sql.md_part_4", "text": "cing productivity and accuracy.\n\nHere are the links used in the video:\n\n- [Data analysis with databases - Notebook](https://colab.research.google.com/drive/1j_5AsWdf0SwVHVgfbEAcg7vYguKUN41o)\n- [SQLZoo](https://www.sqlzoo.net/wiki/SQL_Tutorial) has simple interactive tutorials to learn SQL\n- [Stats database](https://relational-data.org/dataset/Stats) that has an anonymized dump of [stats.stackexchange.com](https://stats.stackexchange.com/)\n- [Pandas `read_sql`](https://pandas.pydata.org/docs/refe"}
{"source": "Course_content_jan_2025/data-analysis-with-sql.md", "chunk_id": "data-analysis-with-sql.md_part_5", "text": "nge.com](https://stats.stackexchange.com/)\n- [Pandas `read_sql`](https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html)\n- [SQLAlchemy docs](https://docs.sqlalchemy.org/)"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_1", "text": "## IDE: GitHub Codespaces\n\n[GitHub Codespaces](https://github.com/features/codespaces) is a cloud-hosted development environment built right into GitHub that gets you coding faster with pre-configured containers, adjustable compute power, and seamless integration with workflows like Actions and Copilot.\n\n**Why Codespaces helps**\n\n- **Reproducible onboarding**: Say goodbye to \u201cworks on my machine\u201d woes\u2014everyone uses the same setup for assignments or demos.\n- **Anywhere access**: Jump back into yo"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_2", "text": "woes\u2014everyone uses the same setup for assignments or demos.\n- **Anywhere access**: Jump back into your project from a laptop, tablet, or phone without having to reinstall anything.\n- **Rapid experimentation & debugging**: Spin up short-lived environments on any branch, commit, or PR to isolate bugs or test features, or keep longer-lived codespaces for big projects.\n\n[](https://www.youtube.com/watch?v=-tQ2nxjqP6o)\n\n### Quick Setup\n\n1. [**From the GitHub UI**](https://github.com/codespaces)\n\n   - "}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_3", "text": "h?v=-tQ2nxjqP6o)\n\n### Quick Setup\n\n1. [**From the GitHub UI**](https://github.com/codespaces)\n\n   - Go to your repo and click **Code \u2192 Codespaces \u2192 New codespace**.\n   - Pick the branch and machine specs (2\u201332 cores, 8\u201364 GB RAM), then click **Create codespace**.\n\n2. [**In Visual Studio Code**](https://code.visualstudio.com/docs/remote/codespaces)\n\n   - Press `Ctrl+Shift+P` (or `Cmd+Shift+P` on Mac), choose **Codespaces: Create New Codespace**, and follow the prompts.\n\n3. [**Via GitHub CLI**](ht"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_4", "text": "c), choose **Codespaces: Create New Codespace**, and follow the prompts.\n\n3. [**Via GitHub CLI**](https://docs.github.com/en/codespaces/developing-in-a-codespace/using-github-codespaces-with-github-cli)\n\n   ```bash\n   gh auth login\n   gh codespace create --repo OWNER/REPO\n   gh codespace list    # List all codespaces\n   gh codespace code    # opens in your local VS Code\n   gh codespace ssh     # SSH into the codepsace\n   ```\n\n### Features To Explore\n\n- **Dev Containers**: Set up your environment"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_5", "text": "SH into the codepsace\n   ```\n\n### Features To Explore\n\n- **Dev Containers**: Set up your environment the same way every time using a `devcontainer.json` or your own Dockerfile. [Introduction to dev containers](https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers)\n- **Prebuilds**: Build bigger or more complex repos in advance so codespaces start up in a flash. [About prebuilds](https://docs.github.com/en/c"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_6", "text": "x repos in advance so codespaces start up in a flash. [About prebuilds](https://docs.github.com/en/codespaces/prebuilding-your-codespaces/about-github-codespaces-prebuilds)\n- **Port Forwarding**: Let Codespaces spot and forward the ports your web apps use automatically. [Forward ports in Codespaces](https://docs.github.com/en/codespaces/developing-in-a-codespace/forwarding-ports-in-your-codespace)\n- **Secrets & Variables**: Keep your environment variables safe in the Codespaces settings for your"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_7", "text": "\n- **Secrets & Variables**: Keep your environment variables safe in the Codespaces settings for your repo. [Manage Codespaces secrets](https://docs.github.com/en/enterprise-cloud@latest/codespaces/managing-codespaces-for-your-organization/managing-development-environment-secrets-for-your-repository-or-organization)\n- **Dotfiles Integration**: Bring in your dotfiles repo to customize shell settings, aliases, and tools in every codespace. [Personalizing your codespaces](https://docs.github.com/en/"}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_8", "text": ", aliases, and tools in every codespace. [Personalizing your codespaces](https://docs.github.com/en/codespaces/setting-your-user-preferences/personalizing-github-codespaces-for-your-account)\n- **Machine Types & Cost Control**: Pick from VMs with 2 to 32 cores and track your usage in the billing dashboard. [Managing Codespaces costs](https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces)\n- **VS Code & CLI Integration**: Flip between browser "}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_9", "text": "despaces/about-billing-for-github-codespaces)\n- **VS Code & CLI Integration**: Flip between browser VS Code and your desktop editor, and script everything with the CLI. [VS Code Remote: Codespaces](https://code.visualstudio.com/docs/remote/codespaces)\n- **GitHub Actions**: Power up prebuilds and your CI/CD right inside codespaces using Actions workflows. [Prebuilding your codespaces](https://docs.github.com/en/codespaces/prebuilding-your-codespaces)\n- **Copilot in Codespaces**: Let Copilot help "}
{"source": "Course_content_jan_2025/github-codespaces.md", "chunk_id": "github-codespaces.md_part_10", "text": "github.com/en/codespaces/prebuilding-your-codespaces)\n- **Copilot in Codespaces**: Let Copilot help you write code with in-editor AI suggestions. [Copilot in Codespaces](https://docs.github.com/en/codespaces/reference/using-github-copilot-in-github-codespaces)"}
{"source": "Course_content_jan_2025/ngrok.md", "chunk_id": "ngrok.md_part_1", "text": "## Tunneling: ngrok\n\n[Ngrok](https://ngrok.com/) is a tool that creates secure tunnels to your localhost, making your local development server accessible to the internet. It's essential for testing webhooks, sharing work in progress, or debugging applications in production-like environments.\n\n[](https://youtu.be/dfMdLGZLXSg)\n\nRun the command `uvx ngrok http 8000` to create a tunnel to your local server on port 8000. This generates a public URL that you can share with others.\n\nTo get started, log"}
{"source": "Course_content_jan_2025/ngrok.md", "chunk_id": "ngrok.md_part_2", "text": "erver on port 8000. This generates a public URL that you can share with others.\n\nTo get started, log into `ngrok.com` and [get an authtoken from the dashboard](https://dashboard.ngrok.com/get-started/your-authtoken). Copy it. Then run:\n\n```bash\nngrok config add-authtoken $YOUR_AUTHTOKEN\n```\n\nNow you can forward any local port to the internet. For example:\n\n```bash\n# Start a local server on port 8000\nuv run -m http.server 8000\n\n# Start HTTP tunnel\nuvx ngrok http 8000\n```\n\nHere are useful things y"}
{"source": "Course_content_jan_2025/ngrok.md", "chunk_id": "ngrok.md_part_3", "text": "00\nuv run -m http.server 8000\n\n# Start HTTP tunnel\nuvx ngrok http 8000\n```\n\nHere are useful things you can do with `ngrok http`:\n\n- `ngrok http file://.` to serve local files\n- `--response-header-add \"Access-Control-Allow-Origin: *\"` to enable CORS\n- `--oauth google --oauth-client-id $CLIENT_ID --oauth-client-secret $SECRET --oauth-allow-domain example.com --oauth-allow-email user@example.org` to restrict users to @example.com and user@example.org using Google Auth\n- `--ua-filter-deny \".*bot$\"` "}
{"source": "Course_content_jan_2025/ngrok.md", "chunk_id": "ngrok.md_part_4", "text": "restrict users to @example.com and user@example.org using Google Auth\n- `--ua-filter-deny \".*bot$\"` to reject user agents ending with `bot`"}
{"source": "Course_content_jan_2025/network-analysis-in-python.md", "chunk_id": "network-analysis-in-python.md_part_1", "text": "## Network Analysis in Python\n\n[](https://youtu.be/uPL3VuRqOy4)\n\nYou'll learn how to use network analysis to identify clusters and connections between nodes in a dataset, covering:\n\n- **Network Construction**: Build a network from the IMDB database, where nodes represent actors and edges represent shared movie appearances.\n- **Clustering**: Apply clustering techniques to detect communities within the network, using scikit-learn's network library.\n- **Matrix Operations**: Utilize matrix operation"}
{"source": "Course_content_jan_2025/network-analysis-in-python.md", "chunk_id": "network-analysis-in-python.md_part_2", "text": "the network, using scikit-learn's network library.\n- **Matrix Operations**: Utilize matrix operations to efficiently analyze actor relationships and interactions.\n- **Community Detection**: Implement algorithms to identify and interpret clusters, examining how different actor clusters are connected.\n- **Application of Findings**: Explore practical applications of network analysis, such as social network analysis and its potential uses in various domains.\n\nHere are links used in the video:\n\n- [Ju"}
{"source": "Course_content_jan_2025/network-analysis-in-python.md", "chunk_id": "network-analysis-in-python.md_part_3", "text": "etwork analysis and its potential uses in various domains.\n\nHere are links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1VRlAOfREGwflv7v2VmN-6O_wqRno4Xcq?usp=sharing)\n- [Exploring the Movie Actor Network in Python](https://youtu.be/6hzLw80qxto)\n- [Jupyter Notebook - Shortest Path](https://colab.research.google.com/drive/1-b0pA1O6rCS-ZwU_MWdCzx0CEI_WnyZ2)\n- [Jupyter Notebook - Actor network](https://colab.research.google.com/drive/1Lps2fkRlyPAnR63hDOihzCaMvo_RU"}
{"source": "Course_content_jan_2025/network-analysis-in-python.md", "chunk_id": "network-analysis-in-python.md_part_4", "text": "ter Notebook - Actor network](https://colab.research.google.com/drive/1Lps2fkRlyPAnR63hDOihzCaMvo_RU6Ds)\n- [IMDb Datasets](https://developer.imdb.com/non-commercial-datasets/)\n- Learn about the [`sknetwork` package](https://scikit-network.readthedocs.io/en/latest/use_cases/votes.html)\n- Learn about the [scipy.sparse matrices](https://cmdlinetips.com/2018/03/sparse-matrices-in-python-with-scipy/) and [video](https://youtu.be/v_S7cOL5ZWU)\n- [Introduction to Kumu](https://youtu.be/fwiz7PnipgQ)\n- [N"}
{"source": "Course_content_jan_2025/network-analysis-in-python.md", "chunk_id": "network-analysis-in-python.md_part_5", "text": "nd [video](https://youtu.be/v_S7cOL5ZWU)\n- [Introduction to Kumu](https://youtu.be/fwiz7PnipgQ)\n- [Network analysis with Kumu](https://docs.kumu.io/guides/disciplines/sna-network-mapping)\n- [Introduction to Systems and Network Mapping with Kumu](https://www.coursera.org/projects/systems-network-kumu)"}
{"source": "Course_content_jan_2025/outlier-detection-with-excel.md", "chunk_id": "outlier-detection-with-excel.md_part_1", "text": "## Outlier Detection with Excel\n\n[](https://youtu.be/sUTJb0F9eBw)\n\nYou'll learn how to identify and handle outliers in data using Excel, covering:\n\n- **Understanding Outliers**: Definition of outliers and their impact on statistical analysis.\n- **Calculating Quartiles**: Using Excel formulas to calculate Q1 (first quartile) and Q3 (third quartile).\n- **Interquartile Range (IQR)**: Finding the IQR by subtracting Q1 from Q3.\n- **Determining Bounds**: Calculating lower and upper bounds using 1.5 ti"}
{"source": "Course_content_jan_2025/outlier-detection-with-excel.md", "chunk_id": "outlier-detection-with-excel.md_part_2", "text": "by subtracting Q1 from Q3.\n- **Determining Bounds**: Calculating lower and upper bounds using 1.5 times the IQR.\n- **Identifying Outliers**: Using Excel functions to determine if data points fall outside the calculated bounds.\n- **Visualizing Data**: Creating box plots to visualize outliers and data distribution.\n- **Handling Outliers**: Deciding whether to exclude or keep outliers based on their impact on analysis.\n\nHere are the links used in the video:\n\n- [Understand distributions and outliers"}
{"source": "Course_content_jan_2025/outlier-detection-with-excel.md", "chunk_id": "outlier-detection-with-excel.md_part_3", "text": "impact on analysis.\n\nHere are the links used in the video:\n\n- [Understand distributions and outliers](https://www.khanacademy.org/math/ap-statistics/quantitative-data-ap/xfb5d8e68:describing-distribution-quant/v/classifying-distributions)\n- [COVID-19 vaccinations data - Excel](https://docs.google.com/spreadsheets/d/1_vQF2i5ubKmHQMBqoTwsu6AlevWsQtTD/view#gid=790744269)"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_1", "text": "## Converting PDFs to Markdown\n\nPDF documents are ubiquitous in academic, business, and technical contexts, but extracting and repurposing their content can be challenging. This tutorial explores various command-line tools for converting PDFs to Markdown format, with a focus on preserving structure and formatting suitable for different use cases, including preparation for Large Language Models (LLMs).\n\nUse Cases:\n\n- **LLM training and fine-tuning**: Create clean text data from PDFs for AI model "}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_2", "text": "Ms).\n\nUse Cases:\n\n- **LLM training and fine-tuning**: Create clean text data from PDFs for AI model training\n- **Knowledge base creation**: Transform PDFs into searchable, editable markdown documents\n- **Content repurposing**: Convert academic papers and reports for web publication\n- **Data extraction**: Pull structured content from PDF documents for analysis\n- **Accessibility**: Convert PDFs to more accessible formats for screen readers\n- **Citation and reference management**: Extract bibliogra"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_3", "text": "ore accessible formats for screen readers\n- **Citation and reference management**: Extract bibliographic information from academic papers\n- **Documentation conversion**: Transform technical PDFs into maintainable documentation\n\n### PyMuPDF4LLM\n\n[PyMuPDF4LLM](https://pymupdf.readthedocs.io/en/latest/pymupdf4llm/) is a specialized component of the PyMuPDF library that generates Markdown specifically formatted for Large Language Models. It produces high-quality markdown with good preservation of do"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_4", "text": " formatted for Large Language Models. It produces high-quality markdown with good preservation of document structure. It's specifically optimized for producing text that works well with LLMs, removing irrelevant formatting while preserving semantic structure. Requires PyTorch, which adds dependencies but enables more advanced processing capabilities.\n\nPyMuPDF4LLM uses [MuPDF](https://mupdf.com/) as its PDF parsing engine. [PyMuPDF](https://pymupdf.readthedocs.io/) is emerging as a strong default"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_5", "text": "s its PDF parsing engine. [PyMuPDF](https://pymupdf.readthedocs.io/) is emerging as a strong default for PDF text extraction due to its accuracy and performance in handling complex PDF structures.\n\n```bash\nPYTHONUTF8=1 uv run --with pymupdf4llm python -c 'import pymupdf4llm; h = open(\"pymupdf4llm.md\", \"w\"); h.write(pymupdf4llm.to_markdown(\"$FILE.pdf\"))'\n```\n\n- `PYTHONUTF8=1`: Forces Python to use UTF-8 encoding regardless of system locale\n- `uv run --with pymupdf4llm`: Uses uv package manager to"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_6", "text": "UTF-8 encoding regardless of system locale\n- `uv run --with pymupdf4llm`: Uses uv package manager to run Python with the pymupdf4llm package\n- `python -c '...'`: Executes Python code directly from the command line\n- `import pymupdf4llm`: Imports the PDF-to-Markdown module\n- `h = open(\"pymupdf4llm.md\", \"w\")`: Creates a file to write the markdown output\n- `h.write(pymupdf4llm.to_markdown(\"$FILE.pdf\"))`: Converts the PDF to markdown and writes to file\n\n## Markitdown\n\n[](https://youtu.be/v65Oyddfxeg"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_7", "text": "))`: Converts the PDF to markdown and writes to file\n\n## Markitdown\n\n[](https://youtu.be/v65Oyddfxeg)\n\n[Markitdown](https://github.com/microsoft/markitdown) is Microsoft's tool for converting various document formats to Markdown, including PDFs, DOCX, XLSX, PPTX, and ZIP files. It's a versatile multi-format converter that handles PDFs via PDFMiner, DOCX via Mammoth, XLSX via Pandas, and PPTX via Python-PPTX. Good for batch processing of mixed document types. The quality of PDF conversion is gene"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_8", "text": "ython-PPTX. Good for batch processing of mixed document types. The quality of PDF conversion is generally good but may struggle with complex layouts or heavily formatted documents.\n\n```bash\nPYTHONUTF8=1 uvx markitdown $FILE.pdf > markitdown.md\n```\n\n- `PYTHONUTF8=1`: Forces Python to use UTF-8 encoding\n- `uvx markitdown`: Runs the markitdown tool via the uv package manager\n- `$FILE.pdf`: The input PDF file\n- `> markitdown.md`: Redirects output to a markdown file\n\n### Unstructured\n\n[Unstructured]("}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_9", "text": "PDF file\n- `> markitdown.md`: Redirects output to a markdown file\n\n### Unstructured\n\n[Unstructured](https://unstructured.io/) is rapidly becoming the de facto library for parsing over 40 different file types. It is excellent for extracting text and tables from diverse document formats. Particularly useful for generating clean content to pass to LLMs. Strong community support and actively maintained.\n\n## GROBID\n\nIf you specifically need to parse references from text-native PDFs or reliably OCR'ed"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_10", "text": "d.\n\n## GROBID\n\nIf you specifically need to parse references from text-native PDFs or reliably OCR'ed ones, [GROBID](https://github.com/kermitt2/grobid) remains the de facto choice. It excels at extracting structured bibliographic information with high accuracy.\n\n```bash\n# Start GROBID service\ndocker run -t --rm -p 8070:8070 lfoppiano/grobid:0.7.2\n\n# Process PDF with curl\ncurl -X POST -F \"input=@paper.pdf\" localhost:8070/api/processFulltextDocument > references.tei.xml\n```\n\n### Mistral OCR API\n\n["}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_11", "text": "per.pdf\" localhost:8070/api/processFulltextDocument > references.tei.xml\n```\n\n### Mistral OCR API\n\n[Mistral OCR](https://mistral.ai/products/ocr/) offers an end-to-end cloud API that preserves both text and layout, making it easier to isolate specific sections like References. It shows the most promise currently, though it requires post-processing.\n\n## Azure Document Intelligence API\n\nFor enterprise users already in the Microsoft ecosystem, [Azure Document Intelligence](https://azure.microsoft.c"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_12", "text": "se users already in the Microsoft ecosystem, [Azure Document Intelligence](https://azure.microsoft.com/en-us/products/ai-services/document-intelligence) provides excellent raw OCR with enterprise SLAs. May require custom model training or post-processing to match GROBID's reference extraction capabilities.\n\n### Other libraries\n\n[Docling](https://github.com/DS4SD/docling) is IBM's document understanding library that supports PDF conversion. It can be challenging to install, particularly on Window"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_13", "text": "nding library that supports PDF conversion. It can be challenging to install, particularly on Windows and some Linux distributions. Offers advanced document understanding capabilities beyond simple text extraction.\n\n[MegaParse](https://github.com/QuivrHQ/MegaParse) takes a comprehensive approach using LibreOffice, Pandoc, Tesseract OCR, and other tools. It has Robust handling of different document types but requires an OpenAI API key for some features. Good for complex documents but has signific"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_14", "text": " types but requires an OpenAI API key for some features. Good for complex documents but has significant dependencies.\n\n## Comparison of PDF-to-Markdown Tools\n\n| Tool         | Strengths                                | Weaknesses                   | Best For                             |\n| ------------ | ---------------------------------------- | ---------------------------- | ------------------------------------ |\n| PyMuPDF4LLM  | Structure preservation, LLM optimization | Requires PyTorch     "}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_15", "text": "---------------- |\n| PyMuPDF4LLM  | Structure preservation, LLM optimization | Requires PyTorch             | AI training data, semantic structure |\n| Markitdown   | Multi-format support, simple usage       | Less precise layout handling | Batch processing, mixed documents    |\n| Unstructured | Wide format support, active development  | Can be resource-intensive    | Production pipelines, integration    |\n| GROBID       | Reference extraction excellence          | Narrower use case            | "}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_16", "text": "ion    |\n| GROBID       | Reference extraction excellence          | Narrower use case            | Academic papers, citations           |\n| Docling      | Advanced document understanding          | Installation difficulties    | Research applications                |\n| MegaParse    | Comprehensive approach                   | Requires OpenAI API          | Complex documents, OCR needs         |\n\nHow to pick:\n\n- **Need LLM-ready content?** PyMuPDF4LLM is specifically designed for this\n- **Workin"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_17", "text": "How to pick:\n\n- **Need LLM-ready content?** PyMuPDF4LLM is specifically designed for this\n- **Working with multiple document formats?** Markitdown handles diverse inputs\n- **Extracting academic references?** GROBID remains the standard\n- **Building a production pipeline?** Unstructured offers the best integration options\n- **Handling complex layouts?** Consider commercial OCR like Mistral or Azure Document Intelligence\n\nThe optimal approach depends on your specific requirements regarding accurac"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_18", "text": " Document Intelligence\n\nThe optimal approach depends on your specific requirements regarding accuracy, structure preservation, and the intended use of the extracted content.\n\n## Tips for Optimal PDF Conversion\n\n1. **Pre-process PDFs** when possible:\n\n   ```bash\n   # Optimize a PDF for text extraction first\n   ocrmypdf --optimize 3 --skip-text input.pdf optimized.pdf\n   ```\n\n2. **Try multiple tools** on the same document to compare results:\n\n3. **Handle scanned PDFs** appropriately:\n\n   ```bash\n "}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_19", "text": "** on the same document to compare results:\n\n3. **Handle scanned PDFs** appropriately:\n\n   ```bash\n   # For scanned documents, run OCR first\n   ocrmypdf --force-ocr input.pdf ocr_ready.pdf\n   PYTHONUTF8=1 uvx markitdown ocr_ready.pdf > markitdown.md\n   ```\n\n4. **Consider post-processing** for better results:\n\n   ```bash\n   # Simple post-processing example\n   sed -i 's/\\([A-Z]\\)\\./\\1\\.\\n/g' output.md  # Add line breaks after sentences\n   ```"}
{"source": "Course_content_jan_2025/convert-pdfs-to-markdown.md", "chunk_id": "convert-pdfs-to-markdown.md_part_20", "text": "md  # Add line breaks after sentences\n   ```"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_1", "text": "## LLM Evaluations with PromptFoo\n\nTest-drive your prompts and models with automated, reliable evaluations.\n\n[](https://youtu.be/KhINc5XwhKs)\n\nPromptFoo is a test-driven development framework for LLMs:\n\n- **Developer-first**: Fast CLI with live reload & caching ([promptfoo.dev](https://promptfoo.dev))\n- **Multi-provider**: Works with OpenAI, Anthropic, HuggingFace, Ollama & more ([GitHub](https://github.com/promptfoo/promptfoo))\n- **Assertions**: Built\u2011in (`contains`, `equals`) & model\u2011graded (`"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_2", "text": "github.com/promptfoo/promptfoo))\n- **Assertions**: Built\u2011in (`contains`, `equals`) & model\u2011graded (`llm-rubric`) ([docs](https://www.promptfoo.dev/docs/configuration/expected-outputs/))\n- **CI/CD**: Integrate evals into pipelines for regression safety ([CI/CD guide](https://www.promptfoo.dev/docs/integrations/ci-cd/))\n\nTo run PromptFoo:\n\n1. Install Node.js & npm ([nodejs.org](https://nodejs.org/))\n2. Set up your [`OPENAI_API_KEY`](https://platform.openai.com/api-keys) environment variable\n3. Con"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_3", "text": "\n2. Set up your [`OPENAI_API_KEY`](https://platform.openai.com/api-keys) environment variable\n3. Configure `promptfooconfig.yaml`. Below is an example:\n\n```yaml\nprompts:\n  - |\n    Summarize this text: \"{{text}}\"\n  - |\n    Please write a concise summary of: \"{{text}}\"\n\nproviders:\n  - openai:gpt-3.5-turbo\n  - openai:gpt-4\n\ntests:\n  - name: summary_test\n    vars:\n      text: \"PromptFoo is an open-source CLI and library for evaluating and testing LLMs with assertions, caching, and matrices.\"\n    ass"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_4", "text": "rce CLI and library for evaluating and testing LLMs with assertions, caching, and matrices.\"\n    assertions:\n      - contains-all:\n          values:\n            - \"open-source\"\n            - \"LLMs\"\n      - llm-rubric:\n          instruction: |\n            Score the summary from 1 to 5 for:\n            - relevance: captures the main info?\n            - clarity: wording is clear and concise?\n          schema:\n            type: object\n            properties:\n              relevance:\n                "}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_5", "text": "  schema:\n            type: object\n            properties:\n              relevance:\n                type: number\n                minimum: 1\n                maximum: 5\n              clarity:\n                type: number\n                minimum: 1\n                maximum: 5\n            required: [relevance, clarity]\n            additionalProperties: false\n\ncommandLineOptions:\n  cache: true\n```\n\nNow, you can run the evaluations and see the results.\n\n```bash\n# Execute all tests\nnpx -y promptfoo eval"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_6", "text": " you can run the evaluations and see the results.\n\n```bash\n# Execute all tests\nnpx -y promptfoo eval -c promptfooconfig.yaml\n\n# List past evaluations\nnpx -y promptfoo list evals\n\n# Launch interactive results viewer on port 8080\nnpx -y promptfoo view -p 8080\n```\n\nPromptFoo caches API responses by default (TTL 14 days). You can disable it with `--no-cache` or clear it.\n\n```bash\n# Disable cache for this run\necho y | promptfoo eval --no-cache -c promptfooconfig.yaml\n\n# Clear all cache\necho y | promp"}
{"source": "Course_content_jan_2025/llm-evals.md", "chunk_id": "llm-evals.md_part_7", "text": "his run\necho y | promptfoo eval --no-cache -c promptfooconfig.yaml\n\n# Clear all cache\necho y | promptfoo cache clear\n```"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_1", "text": "## Scheduled Scraping with GitHub Actions\n\nGitHub Actions provides an excellent platform for running web scrapers on a schedule. This tutorial shows how to automate data collection from websites using GitHub Actions workflows.\n\n### Key Concepts\n\n- **Scheduling**: Use [cron syntax](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule) to run scrapers at specific times\n- **Dependencies**: Install required packages like `httpx`, `lxml`\n- **Data Storage**: Save s"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_2", "text": " times\n- **Dependencies**: Install required packages like `httpx`, `lxml`\n- **Data Storage**: Save scraped data to files and commit back to the repository\n- **Error Handling**: Implement robust error handling for network issues and HTML parsing\n- **Rate Limiting**: Respect website terms of service and implement delays between requests\n\nHere's a sample `scrape.py` that scrapes the IMDb Top 250 movies using httpx and lxml:\n\n```python\nimport json\nimport httpx\nfrom datetime import datetime, UTC\nfrom"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_3", "text": "es using httpx and lxml:\n\n```python\nimport json\nimport httpx\nfrom datetime import datetime, UTC\nfrom lxml import html\nfrom typing import List, Dict\n\n\ndef scrape_imdb() -> List[Dict[str, str]]:\n    \"\"\"Scrape IMDb Top 250 movies using httpx and lxml.\n\n    Returns:\n        List of dictionaries containing movie title, year, and rating.\n    \"\"\"\n    headers = {\"User-Agent\": \"Mozilla/5.0 (compatible; IMDbBot/1.0)\"}\n    response = httpx.get(\"https://www.imdb.com/chart/top/\", headers=headers)\n    respons"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_4", "text": "bBot/1.0)\"}\n    response = httpx.get(\"https://www.imdb.com/chart/top/\", headers=headers)\n    response.raise_for_status()\n\n    tree = html.fromstring(response.text)\n    movies = []\n\n    for item in tree.cssselect(\".ipc-metadata-list-summary-item\"):\n        title = (\n            item.cssselect(\".ipc-title__text\")[0].text_content()\n            if item.cssselect(\".ipc-title__text\")\n            else None\n        )\n        year = (\n            item.cssselect(\".cli-title-metadata span\")[0].text_content"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_5", "text": "ne\n        )\n        year = (\n            item.cssselect(\".cli-title-metadata span\")[0].text_content()\n            if item.cssselect(\".cli-title-metadata span\")\n            else None\n        )\n        rating = (\n            item.cssselect(\".ipc-rating-star\")[0].text_content()\n            if item.cssselect(\".ipc-rating-star\")\n            else None\n        )\n\n        if title and year and rating:\n            movies.append({\"title\": title, \"year\": year, \"rating\": rating})\n\n    return movies\n\n\n# Scr"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_6", "text": "          movies.append({\"title\": title, \"year\": year, \"rating\": rating})\n\n    return movies\n\n\n# Scrape data and save with timestamp\nnow = datetime.now(UTC)\nwith open(f'imdb-top250-{now.strftime(\"%Y-%m-%d\")}.json', \"a\") as f:\n    f.write(json.dumps({\"timestamp\": now.isoformat(), \"movies\": scrape_imdb()}) + \"\\n\")\n```\n\nHere's a sample `.github/workflows/imdb-top250.yml` that runs the scraper daily and saves the data:\n\n```yaml\nname: Scrape IMDb Top 250\n\non:\n  schedule:\n    # Runs at 00:00 UTC every"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_7", "text": "nd saves the data:\n\n```yaml\nname: Scrape IMDb Top 250\n\non:\n  schedule:\n    # Runs at 00:00 UTC every day\n    - cron: \"0 0 * * *\"\n  workflow_dispatch: # Allow manual triggers\n\njobs:\n  scrape-imdb:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n\n      - name: Install uv\n        uses: astral-sh/setup-uv@v5\n\n      - name: Run scraper\n        run: | # python\n          uv run --with httpx,lxml,cssselect "}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_8", "text": "@v5\n\n      - name: Run scraper\n        run: | # python\n          uv run --with httpx,lxml,cssselect python scrape.py\n\n      - name: Commit and push changes\n        run: |\n          git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\n          git config --local user.name \"github-actions[bot]\"\n          git add *.json\n          git commit -m \"Update IMDb Top 250 data [skip ci]\" || exit 0\n          git push\n```\n\n### Best Practices\n\n1. **Cache Dependencies**: Use GitHub's c"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_9", "text": "ci]\" || exit 0\n          git push\n```\n\n### Best Practices\n\n1. **Cache Dependencies**: Use GitHub's caching to speed up package installation\n2. **Handle Errors**: Implement retries and error logging\n3. **Rate Limiting**: Add delays between requests to avoid overwhelming servers\n4. **Data Validation**: Verify scraped data structure before saving\n5. **Monitoring**: Set up notifications for workflow failures\n\n### Tools and Resources\n\n- [httpx](https://www.python-httpx.org/): Async HTTP client\n- [Git"}
{"source": "Course_content_jan_2025/scheduled-scraping-with-github-actions.md", "chunk_id": "scheduled-scraping-with-github-actions.md_part_10", "text": "ailures\n\n### Tools and Resources\n\n- [httpx](https://www.python-httpx.org/): Async HTTP client\n- [GitHub Actions Marketplace](https://github.com/marketplace?type=actions)\n- [GitHub Actions Documentation](https://docs.github.com/en/actions)\n\n### Video Tutorials\n\n[](https://youtu.be/eJG86J200nM)"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_1", "text": "## Crawling with the CLI\n\nSince websites are a common source of data, we often download entire websites (crawling) and then process them offline.\n\nWeb crawling is essential in many data-driven scenarios:\n\n- **Data mining and analysis**: Gathering structured data from multiple pages for market research, competitive analysis, or academic research\n- **Content archiving**: Creating offline copies of websites for preservation or backup purposes\n- **SEO analysis**: Analyzing site structure, metadata, "}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_2", "text": "ebsites for preservation or backup purposes\n- **SEO analysis**: Analyzing site structure, metadata, and content to improve search rankings\n- **Legal compliance**: Capturing website content for regulatory or compliance documentation\n- **Website migration**: Creating a complete copy before moving to a new platform or design\n- **Offline access**: Downloading educational resources, documentation, or reference materials for use without internet connection\n\nThe most commonly used tool for fetching web"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_3", "text": "eference materials for use without internet connection\n\nThe most commonly used tool for fetching websites is [`wget`](https://www.gnu.org/software/wget/). It is pre-installed in many UNIX distributions and easy to install.\n\n[](https://youtu.be/pLfH5TZBGXo)\n\nTo crawl the [IIT Madras Data Science Program website](https://study.iitm.ac.in/ds/) for example, you could run:\n\n```bash\nwget \\\n  --recursive \\\n  --level=3 \\\n  --no-parent \\\n  --convert-links \\\n  --adjust-extension \\\n  --compression=auto \\\n "}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_4", "text": " \\\n  --level=3 \\\n  --no-parent \\\n  --convert-links \\\n  --adjust-extension \\\n  --compression=auto \\\n  --accept html,htm \\\n  --directory-prefix=./ds \\\n  https://study.iitm.ac.in/ds/\n```\n\nHere's what each option does:\n\n- `--recursive`: Enables recursive downloading (following links)\n- `--level=3`: Limits recursion depth to 3 levels from the initial URL\n- `--no-parent`: Restricts crawling to only URLs below the initial directory\n- `--convert-links`: Converts all links in downloaded documents to work"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_5", "text": " below the initial directory\n- `--convert-links`: Converts all links in downloaded documents to work locally\n- `--adjust-extension`: Adds proper extensions to files (.html, .jpg, etc.) based on MIME types\n- `--compression=auto`: Automatically handles compressed content (gzip, deflate)\n- `--accept html,htm`: Only downloads files with these extensions\n- `--directory-prefix=./ds`: Saves all downloaded files to the specified directory\n\n[wget2](https://gitlab.com/gnuwget/wget2) is a better version of"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_6", "text": "d files to the specified directory\n\n[wget2](https://gitlab.com/gnuwget/wget2) is a better version of `wget` and supports HTTP2, parallel connections, and only updates modified sites. The syntax is (mostly) the same.\n\n```bash\nwget2 \\\n  --recursive \\\n  --level=3 \\\n  --no-parent \\\n  --convert-links \\\n  --adjust-extension \\\n  --compression=auto \\\n  --accept html,htm \\\n  --directory-prefix=./ds \\\n  https://study.iitm.ac.in/ds/\n```\n\nThere are popular free and open-source alternatives to Wget:\n\n### Wpu"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_7", "text": "ps://study.iitm.ac.in/ds/\n```\n\nThere are popular free and open-source alternatives to Wget:\n\n### Wpull\n\n[Wpull](https://github.com/ArchiveTeam/wpull) is a wget\u2010compatible Python crawler that supports on-disk resumption, WARC output, and PhantomJS integration.\n\n```bash\nuvx wpull \\\n  --recursive \\\n  --level=3 \\\n  --no-parent \\\n  --convert-links \\\n  --adjust-extension \\\n  --compression=auto \\\n  --accept html,htm \\\n  --directory-prefix=./ds \\\n  https://study.iitm.ac.in/ds/\n```\n\n### HTTrack\n\n[HTTrack"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_8", "text": "ept html,htm \\\n  --directory-prefix=./ds \\\n  https://study.iitm.ac.in/ds/\n```\n\n### HTTrack\n\n[HTTrack](https://www.httrack.com/html/fcguide.html) is dedicated website\u2010mirroring tool with rich filtering and link\u2010conversion options.\n\n```bash\nhttrack \"https://study.iitm.ac.in/ds/\" \\\n  -O \"./ds\" \\\n  \"+*.study.iitm.ac.in/ds/*\" \\\n  -r3\n```\n\n### Robots.txt\n\n`robots.txt` is a standard file found in a website's root directory that specifies which parts of the site should not be accessed by web crawlers. I"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_9", "text": "te's root directory that specifies which parts of the site should not be accessed by web crawlers. It's part of the Robots Exclusion Protocol, an ethical standard for web crawling.\n\n**Why it's important**:\n\n- **Server load protection**: Prevents excessive traffic that could overload servers\n- **Privacy protection**: Keeps sensitive or private content from being indexed\n- **Legal compliance**: Respects website owners' rights to control access to their content\n- **Ethical web citizenship**: Shows "}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_10", "text": "ects website owners' rights to control access to their content\n- **Ethical web citizenship**: Shows respect for website administrators' wishes\n\n**How to override robots.txt restrictions**:\n\n- **wget, wget2**: Use `-e robots=off`\n- **httrack**: Use `-s0`\n- **wpull**: Use `--no-robots`\n\n**When to override robots.txt (use with discretion)**:\n\nOnly bypass `robots.txt` when:\n\n- You have explicit permission from the website owner\n- You're crawling your own website\n- The content is publicly accessible "}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_11", "text": "sion from the website owner\n- You're crawling your own website\n- The content is publicly accessible and your crawling won't cause server issues\n- You're conducting authorized security testing\n\nRemember that bypassing `robots.txt` without legitimate reason may:\n\n- Violate terms of service\n- Lead to IP banning\n- Result in legal consequences in some jurisdictions\n- Cause reputation damage to your organization\n\nAlways use the minimum necessary crawling speed and scope, and consider contacting websit"}
{"source": "Course_content_jan_2025/crawling-cli.md", "chunk_id": "crawling-cli.md_part_12", "text": "anization\n\nAlways use the minimum necessary crawling speed and scope, and consider contacting website administrators for permission when in doubt."}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_1", "text": "## Converting HTML to Markdown\n\nWhen working with web content, converting HTML files to plain text or Markdown is a common requirement for content extraction, analysis, and preservation. For example:\n\n- **Content analysis**: Extract clean text from HTML for natural language processing\n- **Data mining**: Strip formatting to focus on the actual content\n- **Offline reading**: Convert web pages to readable formats for e-readers or offline consumption\n- **Content migration**: Move content between dif"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_2", "text": "dable formats for e-readers or offline consumption\n- **Content migration**: Move content between different CMS platforms\n- **SEO analysis**: Extract headings, content structure, and text for optimization\n- **Archive creation**: Store web content in more compact, preservation-friendly formats\n- **Accessibility**: Convert content to formats that work better with screen readers\n\nThis tutorial covers both converting existing HTML files and combining web crawling with HTML-to-text conversion in a sin"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_3", "text": "both converting existing HTML files and combining web crawling with HTML-to-text conversion in a single workflow -- all using the command line.\n\n### defuddle-cli\n\n[defuddle-cli](https://github.com/defuddle/defuddle) specializes in HTML - Markdown conversion. It's a bit slow and not very customizable but produces clean Markdown that preserves structure, links, and basic formatting. Best for content where preserving the document structure is important.\n\n```bash\nfind . -name '*.html' -exec npx --pa"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_4", "text": " where preserving the document structure is important.\n\n```bash\nfind . -name '*.html' -exec npx --package defuddle-cli -y defuddle parse {} --md -o {}.md \\;\n```\n\n- `find . -name '*.html'`: Finds all HTML files in the current directory and subdirectories\n- `-exec ... \\;`: Executes the following command for each file found\n- `npx --package defuddle-cli -y`: Installs and runs defuddle-cli without prompting\n- `defuddle parse {} --md`: Parses the HTML file (represented by `{}`) and converts to markdo"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_5", "text": "mpting\n- `defuddle parse {} --md`: Parses the HTML file (represented by `{}`) and converts to markdown\n- `-o {}.md`: Outputs to a file with the original name plus .md extension\n\n### Pandoc\n\n[Pandoc](https://pandoc.org/) is a bit slow and highly customizable, preserving almost all formatting elements, leading to verbose markdown. Best for academic or documentation conversion where precision matters.\n\nPandoc can convert from many other formats (such as Word, PDF, LaTeX, etc.) to Markdown and vice "}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_6", "text": ".\n\nPandoc can convert from many other formats (such as Word, PDF, LaTeX, etc.) to Markdown and vice versa, making it one of most popular and versatele document convertors.\n\n[](https://youtu.be/HPSK7q13-40)\n\n```bash\nfind . -name '*.html' -exec pandoc -f html -t markdown_strict -o {}.md {} \\;\n```\n\n- `find . -name '*.html'`: Finds all HTML files in the current directory and subdirectories\n- `-exec ... \\;`: Executes the following command for each file found\n- `pandoc`: The Swiss Army knife of docume"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_7", "text": ". \\;`: Executes the following command for each file found\n- `pandoc`: The Swiss Army knife of document conversion\n- `-f html -t markdown_strict`: Convert from HTML format to strict markdown\n- `-o {}.md {}`: Output to a markdown file, with the input file as the last argument\n\n### Lynx\n\n[Lynx](https://lynx.invisible-island.net/) is fast and generates text (not Markdown) with minimal formatting. Lynx renders the HTML as it would appear in a text browser, preserving basic structure but losing comple"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_8", "text": " renders the HTML as it would appear in a text browser, preserving basic structure but losing complex formatting. Best for quick content extraction or when processing large numbers of files.\n\n```bash\nfind . -type f -name '*.html' -exec sh -c 'for f; do lynx -dump -nolist \"$f\" > \"${f%.html}.txt\"; done' _ {} +\n```\n\n- `find . -type f -name '*.html'`: Finds all HTML files in the current directory and subdirectories\n- `-exec sh -c '...' _ {} +`: Executes a shell command with batched files for efficie"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_9", "text": "subdirectories\n- `-exec sh -c '...' _ {} +`: Executes a shell command with batched files for efficiency\n- `for f; do ... done`: Loops through each file in the batch\n- `lynx -dump -nolist \"$f\"`: Uses the lynx text browser to render HTML as plain text\n  - `-dump`: Output the rendered page to stdout\n  - `-nolist`: Don't include the list of links at the end\n- `> \"${f%.html}.txt\"`: Save output to a .txt file with the same base name\n\n### w3m\n\n[w3m](https://w3m.sourceforge.net/) is very slow processing"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_10", "text": "t file with the same base name\n\n### w3m\n\n[w3m](https://w3m.sourceforge.net/) is very slow processing with minimal formatting. w3m tends to be more thorough in its rendering than lynx but takes considerably longer. It supports basic JavaScript processing, making it better at handling modern websites with dynamic content. Best for cases where you need slightly better rendering than lynx, particularly for complex layouts and tables, and when some JavaScript processing is beneficial.\n\n```bash\nfind ."}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_11", "text": "y for complex layouts and tables, and when some JavaScript processing is beneficial.\n\n```bash\nfind . -type f -name '*.html' \\\n  -exec sh -c 'for f; do \\\n      w3m -dump -T text/html -cols 80 -no-graph \"$f\" > \"${f%.html}.md\"; \\\n    done' _ {} +\n```\n\n- `find . -type f -name '*.html'`: Finds all HTML files in the current directory and subdirectories\n- `-exec sh -c '...' _ {} +`: Executes a shell command with batched files for efficiency\n- `for f; do ... done`: Loops through each file in the batch\n-"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_12", "text": "and with batched files for efficiency\n- `for f; do ... done`: Loops through each file in the batch\n- `w3m -dump -T text/html -cols 80 -no-graph \"$f\"`: Uses the w3m text browser to render HTML\n  - `-dump`: Output the rendered page to stdout\n  - `-T text/html`: Specify input format as HTML\n  - `-cols 80`: Set output width to 80 columns\n  - `-no-graph`: Don't show graphic characters for tables and frames\n- `> \"${f%.html}.md\"`: Save output to a .md file with the same base name\n\n### Comparison\n\n| App"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_13", "text": "ames\n- `> \"${f%.html}.md\"`: Save output to a .md file with the same base name\n\n### Comparison\n\n| Approach     | Speed     | Format Quality | Preservation                       | Best For                        |\n| ------------ | --------- | -------------- | ---------------------------------- | ------------------------------- |\n| defuddle-cli | Slow      | High           | Good structure and links           | Content migration, publishing   |\n| pandoc       | Slow      | Very High      | Almost e"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_14", "text": "          | Content migration, publishing   |\n| pandoc       | Slow      | Very High      | Almost everything                  | Academic papers, documentation  |\n| lynx         | Fast      | Low            | Basic structure only               | Quick extraction, large batches |\n| w3m          | Very Slow | Medium-Low     | Basic structure with better tables | Improved readability over lynx  |\n\n### Optimize Batch Processing\n\n1. **Process in parallel**: Use GNU Parallel for multi-core processing:"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_15", "text": "# Optimize Batch Processing\n\n1. **Process in parallel**: Use GNU Parallel for multi-core processing:\n\n   ```bash\n   find . -name \"*.html\" | parallel \"pandoc -f html -t markdown_strict -o {}.md {}\"\n   ```\n\n2. **Filter files before processing**:\n\n   ```bash\n   find . -name \"*.html\" -type f -size -1M -exec pandoc -f html -t markdown {} -o {}.md \\;\n   ```\n\n3. **Customize output format** with additional parameters:\n\n   ```bash\n   # For pandoc, preserve line breaks but simplify other formatting\n   fin"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_16", "text": "l parameters:\n\n   ```bash\n   # For pandoc, preserve line breaks but simplify other formatting\n   find . -name \"*.html\" -exec pandoc -f html -t markdown --wrap=preserve --atx-headers {} -o {}.md \\;\n   ```\n\n4. **Handle errors gracefully**:\n\n   ```bash\n   find . -name \"*.html\" -exec sh -c 'for f; do pandoc -f html -t markdown \"$f\" -o \"${f%.html}.md\" 2>/dev/null || echo \"Failed: $f\" >> conversion_errors.log; done' _ {} +\n   ```\n\n### Choosing the Right Tool\n\n- **Need speed with minimal formatting?** "}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_17", "text": "rs.log; done' _ {} +\n   ```\n\n### Choosing the Right Tool\n\n- **Need speed with minimal formatting?** Use the lynx approach\n- **Need precise, complete conversion?** Use pandoc\n- **Need a balance of structure and cleanliness?** Try defuddle-cli\n- **Working with complex tables?** w3m might render them better\n\nRemember that the best approach depends on your specific use case, volume of files, and how you intend to use the converted text.\n\n### Combined Crawling and Conversion\n\nSometimes you need to bo"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_18", "text": "ou intend to use the converted text.\n\n### Combined Crawling and Conversion\n\nSometimes you need to both crawl a website and convert its content to markdown or text in a single workflow, like [Crawl4AI](#crawl4ai) or [markdown-crawler](#markdown-crawler).\n\n1. **For research/data collection**: Use a specialized crawler (like Crawl4AI) with post-processing conversion\n2. **For simple website archiving**: Markdown-crawler provides a convenient all-in-one solution\n3. **For high-quality conversion**: Us"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_19", "text": "*: Markdown-crawler provides a convenient all-in-one solution\n3. **For high-quality conversion**: Use wget/wget2 for crawling followed by pandoc for conversion\n4. **For maximum speed**: Combine wget with lynx in a pipeline\n\n### Crawl4AI\n\n[Crawl4AI](https://github.com/crawl4ai/crawl4ai) is designed for single-page extraction with high-quality content processing. Crawl4AI is optimized for AI training data extraction, focusing on clean, structured content rather than complete site preservation. It "}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_20", "text": "g data extraction, focusing on clean, structured content rather than complete site preservation. It excels at removing boilerplate content and preserving the main article text.\n\n```bash\nuv venv\nsource .venv/bin/activate.fish\nuv pip install crawl4ai\ncrawl4ai-setup\n```\n\n- `uv venv`: Creates a Python virtual environment using uv (a faster alternative to virtualenv)\n- `source .venv/bin/activate.fish`: Activates the virtual environment (fish shell syntax)\n- `uv pip install crawl4ai`: Installs the cra"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_21", "text": " Activates the virtual environment (fish shell syntax)\n- `uv pip install crawl4ai`: Installs the crawl4ai package\n- `crawl4ai-setup`: Initializes crawl4ai's required dependencies\n\n### markdown-crawler\n\n[markdown-crawler](https://pypi.org/project/markdown-crawler/) combines web crawling with markdown conversion in one tool. It's efficient for bulk processing but tends to produce lower-quality markdown conversion compared to specialized converters like pandoc or defuddle. Best for projects where q"}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_22", "text": "own conversion compared to specialized converters like pandoc or defuddle. Best for projects where quantity and integration are more important than perfect formatting.\n\n```bash\nuv venv\nsource .venv/bin/activate.fish\nuv pip install markdown-crawler\nmarkdown-crawler -t 5 -d 3 -b ./markdown https://study.iitm.ac.in/ds/\n```\n\n- `uv venv` and activation: Same as above\n- `uv pip install markdown-crawler`: Installs the markdown-crawler package\n- `markdown-crawler`: Runs the crawler with these options:\n "}
{"source": "Course_content_jan_2025/convert-html-to-markdown.md", "chunk_id": "convert-html-to-markdown.md_part_23", "text": ": Installs the markdown-crawler package\n- `markdown-crawler`: Runs the crawler with these options:\n  - `-t 5`: Sets 5 threads for parallel crawling\n  - `-d 3`: Limits crawl depth to 3 levels\n  - `-b ./markdown`: Sets the base output directory\n  - Final argument is the starting URL"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_1", "text": "# Live Session: 16 Jan 2025\n\n[](https://youtu.be/1H5Aq7HjqwQ)\n\n**Q1: What will be covered in this session?**\n\n**A1:** This session will cover concepts from Week 1 of the graded assignment in Tools in Data Science (TDS). The focus is on guiding students toward solutions, not providing exact answers. Week 2 will be covered in the next session.\n\n**Q2: Is it possible to reschedule the TDS session?**\n\n**A2:** The instructor will check if rescheduling is possible. If not, recordings will be available "}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_2", "text": "**A2:** The instructor will check if rescheduling is possible. If not, recordings will be available on YouTube.\n\n**Q3: The first question in the graded assignment is about VS Code. What's involved?**\n\n**A3:** The question focuses on installing VS Code and running a specific command in the terminal, then pasting the output into an input box. There's no significant technical component to this question.\n\n**Q4: What are the benefits of using the UV command-line tool?**\n\n**A4:** UV eliminates the nee"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_3", "text": "on.\n\n**Q4: What are the benefits of using the UV command-line tool?**\n\n**A4:** UV eliminates the need to create virtual environments. You include small portions of code and run the application with minimal setup.\n\n**Q5: How does UV integrate with VS Code?**\n\n**A5:** There's no integration; UV is used in the command prompt, similar to pip (Python), npm (JavaScript), or Node.js.\n\n**Q6: Are there examples demonstrating UV usage and integration with VS Code?**\n\n**A6:** No specific VS Code integratio"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_4", "text": "mples demonstrating UV usage and integration with VS Code?**\n\n**A6:** No specific VS Code integration is needed. UV is used in the command line, like pip or npm. A previous project (Project 2) used UV to automate running 687 student Python submissions, each with unique requirements. Students added metadata to their Python files specifying the Python version and required libraries. UV dynamically handled these requirements for each submission.\n\n**Q7: In the RWE exam, what will the format be like?"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_5", "text": "andled these requirements for each submission.\n\n**Q7: In the RWE exam, what will the format be like?**\n\n**A7:** The format will be similar to the graded assignments: questions and answer boxes. You can use any tools you want. It's a non-proctored exam. It will cover concepts taught in the course, including new material.\n\n**Q8: In Week 1, do we need to build advanced-level concepts, or will we learn them week by week?**\n\n**A8:** Each week will have different content, including graded assignments."}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_6", "text": "n them week by week?**\n\n**A8:** Each week will have different content, including graded assignments. Content links are provided.\n\n**Q9: The UV part of the project was only a 7-minute video. Do we need to learn UV fully in Week 1, or will we learn it in upcoming weeks?**\n\n**A9:** UV is introduced in Week 1. The most useful aspect is embedding everything in inline metadata within the script, eliminating the need for virtual environments.\n\n**Q10: How do we start the project?**\n\n**A10:** There will "}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_7", "text": "ting the need for virtual environments.\n\n**Q10: How do we start the project?**\n\n**A10:** There will be separate guidance sessions for the project.\n\n**Q11: Will we get a screen recording of this session?**\n\n**A11:** Yes, the session will be uploaded to YouTube.\n\n**Q12: While putting in the directory for a specific file (e.g., question 2), do you need to provide the full address (drive, etc.)?**\n\n**A12:** It works because the script is executed from the same directory. You need to provide the corr"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_8", "text": "A12:** It works because the script is executed from the same directory. You need to provide the correct path (relative or absolute).\n\n**Q13: Can you explain the use of DevTools?**\n\n**A13:** Right-click on the browser and select \"Inspect.\" This opens a world of code and information about the website. You can see HTML, JavaScript, CSS, etc. You can use the arrow tool to select an element, then modify the code. These changes are only local to your browser.\n\n**Q14: Can you explain the use of the Con"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_9", "text": "y the code. These changes are only local to your browser.\n\n**Q14: Can you explain the use of the Console tab in DevTools?**\n\n**A14:** The Console tab lets you run JavaScript. This will be covered later in the session, in the context of CSS selectors.\n\n**Q15: Can you explain the Network tab in DevTools?**\n\n**A15:** The Network tab shows all external information the browser is fetching. For TDS, the \"Fetch\" tab is most useful, showing APIs, JSON code, and CSS files. It shows what the website is pu"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_10", "text": " \"Fetch\" tab is most useful, showing APIs, JSON code, and CSS files. It shows what the website is pulling from the server.\n\n**Q16: Can we modify the content in the Network tab?**\n\n**A16:** No, you can only modify the website's structure in the Elements tab.\n\n**Q17: Can you explain the Network tab again, briefly?**\n\n**A17:** The Network tab shows external information the browser is fetching from where the website is deployed. The \"Fetch\" tab is particularly useful for TDS, showing APIs, JSON, and"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_11", "text": "ere the website is deployed. The \"Fetch\" tab is particularly useful for TDS, showing APIs, JSON, and CSS files.\n\n**Q18: In a later Week 1 question, we need to find values within a specific div class. Will the JavaScript code work on the entire site, or just the specified area?**\n\n**A18:** The JavaScript will work on the entire site because the DOM structure is a tree. However, you can use selectors to target specific elements within that structure.\n\n**Q19: How are HTML and CSS connected? Do we n"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_12", "text": "s to target specific elements within that structure.\n\n**Q19: How are HTML and CSS connected? Do we need JavaScript to extract information?**\n\n**A19:** HTML is the skeleton, JavaScript the muscles, and CSS the skin. JavaScript is used to extract information from the HTML code using CSS selectors (classes or IDs).\n\n**Q20: Can you explain the later part of the code used to extract data?**\n\n**A20:** The code uses a map function to iterate through a list of elements. `innerText` gives the text conten"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_13", "text": "he code uses a map function to iterate through a list of elements. `innerText` gives the text content of an element, while `innerHTML` gives the entire HTML code. `innerText` is generally preferred for data extraction.\n\n**Q21: Are there other commands or attributes besides `innerText`?**\n\n**A21:** Yes, there are other attributes. `text` is similar to `innerText`, but `innerText` is more reliable. Always use `innerText` if `text` doesn't work.\n\n**Q22: How do classes and IDs work in CSS selectors?"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_14", "text": "Always use `innerText` if `text` doesn't work.\n\n**Q22: How do classes and IDs work in CSS selectors?**\n\n**A22:** Classes are generic and can be applied to multiple elements. IDs are unique to a single element. In CSS selectors, classes are prefixed with a dot (.), and IDs with a hash (#).\n\n**Q23: While showing `innerText`, you used a command that neatly organized the movie list. Why?**\n\n**A23:** The console organizes the output for readability, packing items into groups of 100. Otherwise, it wou"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_15", "text": "he console organizes the output for readability, packing items into groups of 100. Otherwise, it would be a single, long array.\n\n**Q24: How can I copy the entire list from the console?**\n\n**A24:** Enclose the code in a `copy()` function. This copies the output to your clipboard.\n\n**Q25: Does the developer tool only work on Chrome?**\n\n**A25:** It works on Edge and other browsers. In Safari or Mozilla, right-click anywhere on the webpage and look for the \"Inspect\" option.\n\n**Q26: Can we modify the"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_16", "text": "la, right-click anywhere on the webpage and look for the \"Inspect\" option.\n\n**Q26: Can we modify the content in the Network tab?**\n\n**A26:** No, you can only modify the website's structure in the Elements tab. The Network tab shows what the browser is fetching, not what you can change.\n\n**Q27: Can you explain the use of classes in more detail?**\n\n**A27:** Classes allow you to apply CSS to your code. If you remove a class, the associated CSS styling is removed. Classes can be applied to multiple "}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_17", "text": "e. If you remove a class, the associated CSS styling is removed. Classes can be applied to multiple elements, while IDs are unique to a single element.\n\n**Q28: Can we limit JavaScript selection to a specific chunk of HTML data?**\n\n**A28:** No, JavaScript will work on the entire site unless you use selectors to target specific elements.\n\n**Q29: What is the origin of the exercise to extract names from the meeting participants?**\n\n**A29:** The instructor created this exercise to encourage participa"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_18", "text": "om the meeting participants?**\n\n**A29:** The instructor created this exercise to encourage participation. A random participant is selected to answer a question.\n\n**Q30: Can we go back to the syntax we typed?**\n\n**A30:** The syntax was `$$(\".className\").map(...)`. The `$$` selects elements with the specified class, and `map` iterates through them. The instructor demonstrates how to extract the movie names using this. The instructor also explains the difference between `innerText` and `innerHTML`."}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_19", "text": "e names using this. The instructor also explains the difference between `innerText` and `innerHTML`. `innerText` returns only the text, while `innerHTML` returns the entire HTML code. `innerText` is generally preferred for data extraction. If `text` doesn't work, use `innerText`.\n\n**Q31: Should the `innerText` be written exactly as it appears, or can we modify the case (e.g., make \"T\" lowercase)?**\n\n**A31:** Use the text exactly as it appears.\n\n**Q32: What is the role of npx in this context?**\n\n"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_20", "text": "*\n\n**A31:** Use the text exactly as it appears.\n\n**Q32: What is the role of npx in this context?**\n\n**A32:** npx creates a separate environment for a project, installing dependencies locally without affecting other projects. It's an alternative to npm, which installs globally.\n\n**Q33: Does npx run primarily on Linux?**\n\n**A33:** npx works on both PowerShell and Bash, but sha256sum might not work on Windows. You can run the npx command separately and use sha256sum on the resulting file.\n\n**Q34: W"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_21", "text": "n Windows. You can run the npx command separately and use sha256sum on the resulting file.\n\n**Q34: While showing `innerText`, you made the movie list extremely neat. Why?**\n\n**A34:** That's how the console presents the data, organizing it into groups of 100 for readability.\n\n**Q35: How can I copy the entire list from the console?**\n\n**A35:** Use the `copy()` function in the console to copy the output to your clipboard.\n\n**Q36: What should we focus on when using the Elements, Console, and Network"}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_22", "text": "put to your clipboard.\n\n**Q36: What should we focus on when using the Elements, Console, and Network tabs?**\n\n**A36:** For the Elements tab, focus on extracting data using CSS selectors (classes and IDs). The Console tab is used for running JavaScript, particularly for data scraping with CSS selectors. The Network tab shows what the browser is fetching. The instructor recommends exploring these tabs and having fun with them."}
{"source": "Course_content_jan_2025/live-session-2025-01-16.md", "chunk_id": "live-session-2025-01-16.md_part_23", "text": "bs and having fun with them."}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_1", "text": "# Base 64 Encoding\n\nBase64 is a method to convert binary data into ASCII text. It's essential when you need to transmit binary data through text-only channels or embed binary content in text formats.\n\nWatch this quick explanation of how Base64 works (3 min):\n\n[](https://youtu.be/8qkxeZmKmOY)\n\nHere's how it works:\n\n- It takes 3 bytes (24 bits) and converts them into 4 ASCII characters\n- ... using 64 characters: A-Z, a-z, 0-9, + and / (padding with `=` to make the length a multiple of 4)\n- There's"}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_2", "text": "4 characters: A-Z, a-z, 0-9, + and / (padding with `=` to make the length a multiple of 4)\n- There's a URL-safe variant of Base64 that replaces + and / with - and \\_ to avoid issues in URLs\n- Base64 adds ~33% overhead (since every 3 bytes becomes 4 characters)\n\nCommon Python operations with Base64:\n\n```python\nimport base64\n\n# Basic encoding/decoding\ntext = \"Hello, World!\"\n# Convert text to base64\nencoded = base64.b64encode(text.encode()).decode()  # SGVsbG8sIFdvcmxkIQ==\n# Convert base64 back to "}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_3", "text": "encoded = base64.b64encode(text.encode()).decode()  # SGVsbG8sIFdvcmxkIQ==\n# Convert base64 back to text\ndecoded = base64.b64decode(encoded).decode()        # Hello, World!\n# Convert to URL-safe base64\nurl_safe = base64.urlsafe_b64encode(text.encode()).decode()  # SGVsbG8sIFdvcmxkIQ==\n\n# Working with binary files (e.g., images)\nwith open('image.png', 'rb') as f:\n    binary_data = f.read()\n    image_b64 = base64.b64encode(binary_data).decode()\n\n# Data URI example (embed images in HTML/CSS)\ndata_u"}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_4", "text": "e_b64 = base64.b64encode(binary_data).decode()\n\n# Data URI example (embed images in HTML/CSS)\ndata_uri = f\"data:image/png;base64,{image_b64}\"\n```\n\nData URIs allow embedding binary data directly in HTML/CSS. This reduces the number of HTTP requests and also works offline. But it increases the file size.\n\nFor example, here's an SVG image embedded as a data URI:\n\n```html\n\n```\n\nBase64 is used in many places:\n\n- JSON: Encoding binary data in JSON payloads\n- Email: MIME attachments encoding\n- Auth: HT"}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_5", "text": "places:\n\n- JSON: Encoding binary data in JSON payloads\n- Email: MIME attachments encoding\n- Auth: HTTP Basic Authentication headers\n- JWT: Encoding tokens in web authentication\n- SSL/TLS: PEM certificate format\n- SAML: Encoding assertions in SSO\n- Git: Encoding binary files in patches\n\nTools for working with Base64:\n\n- [Base64 Decoder/Encoder](https://www.base64decode.org/) for online encoding/decoding\n- [data: URI Generator](https://dopiaza.org/tools/datauri/index.php) converts files to Data UR"}
{"source": "Course_content_jan_2025/base64-encoding.md", "chunk_id": "base64-encoding.md_part_6", "text": "oding\n- [data: URI Generator](https://dopiaza.org/tools/datauri/index.php) converts files to Data URIs"}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_1", "text": "# Live Session: 06 Feb 2025\n\n[](https://youtu.be/u5RFmePd7NQ)\n\n**Q1: In this GA4 session, what's new compared to previous GAs?**\n\n**A1:** The trajectory has moved from hard to easy. This GA is much easier and lighter than previous ones.\n\n**Q2: How do I extract a table from HTML using Google Sheets?**\n\n**A2:** This functionality is available in Google Sheets but not in Excel (unless you use plugins). The `IMPORTHTML` function will give you a #NAME? error in Excel.\n\n**Q3: How can I extract data fr"}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_2", "text": "). The `IMPORTHTML` function will give you a #NAME? error in Excel.\n\n**Q3: How can I extract data from the ODI Batsman Stats webpage?**\n\n**A3:** I'll show you how to extract data from a different webpage, but you can find a similar example in my previous live session on YouTube.\n\n**Q4: What do the parameters in the `IMPORTHTML` function mean?**\n\n**A4:** The four parameters are: URL, query (either \"list\" or \"table\"), index (table number), and locale. The index is zero-based (like Python).\n\n**Q5: "}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_3", "text": "\"list\" or \"table\"), index (table number), and locale. The index is zero-based (like Python).\n\n**Q5: How does the `IMPORTHTML` function automatically find the table?**\n\n**A5:** It finds the table based on the index you provide. If there are multiple tables, you'll need to adjust the index accordingly.\n\n**Q6: How can I extract data from a webpage that doesn't use a JSON object?**\n\n**A6:** There are three ways:\n\n- **Method 1:** If the webpage uses a JSON object, you can extract it directly.\n- **Met"}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_4", "text": "three ways:\n\n- **Method 1:** If the webpage uses a JSON object, you can extract it directly.\n- **Method 2:** Use query selectors in the browser's console to extract the data. This involves finding a common element (class) in the HTML and using JavaScript to extract the data. The `$$` operator establishes a connection between the console and the elements tab. The `.` prefix selects elements by class, and `#` selects by ID.\n- **Method 3:** Sometimes, the data is embedded in JavaScript code within "}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_5", "text": "s, and `#` selects by ID.\n- **Method 3:** Sometimes, the data is embedded in JavaScript code within the webpage itself. You can find this in the browser's \"Sources\" tab. You can then use this JavaScript object to extract the data.\n\n**Q7: What's the difference between `innerText` and `innerHTML`?**\n\n**A7:** `innerText` returns only the text content of an element, while `innerHTML` returns the entire HTML code within that element.\n\n**Q8: I'm having trouble using the FastAPI in Chrome. I've posted "}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_6", "text": "e HTML code within that element.\n\n**Q8: I'm having trouble using the FastAPI in Chrome. I've posted on Discourse multiple times, but it's still not working. The error is \"Method Not Allowed\".**\n\n**A8:** When using POST requests with FastAPI, you need to specify the method in the request. I'll look into your Discourse post and get back to you. We can also schedule a separate meeting to discuss this further. The issue might be related to how your system interacts with the host (it might be localho"}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_7", "text": " further. The issue might be related to how your system interacts with the host (it might be localhost).\n\n**Q9: Regarding the project, the scope seems too broad. Can we narrow it down? Also, what tools are required? Is there a sandbox environment for testing?**\n\n**A9:** The scope is indeed broad. The project's requirements are defined by Anand, who is also the CEO of a company. He's busy, but you can contact him through Discourse. We can discuss the scope and tools further in a meeting. There is"}
{"source": "Course_content_jan_2025/live-session-2025-02-06.md", "chunk_id": "live-session-2025-02-06.md_part_8", "text": "can contact him through Discourse. We can discuss the scope and tools further in a meeting. There is no sandbox environment for testing. The goal is to extract data, but the method is not specified. You can enhance the goal by using other tools (Autodesk, Blender, etc.), but the scope should be restricted by the QA team. We can discuss this further in a meeting."}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_1", "text": "## LLM CLI: llm\n\n[`llm`](https://pypi.org/project/llm) is a command-line utility for interacting with large language models\u2014simplifying prompts, managing models and plugins, logging every conversation, and extracting structured data for pipelines.\n\n[](https://youtu.be/QUXQNi6jQ30?t=100)\n\n### Basic Usage\n\n[Install llm](https://github.com/simonw/llm#installation). Then set up your [`OPENAI_API_KEY`](https://platform.openai.com/api-keys) environment variable. See [Getting started](https://github.co"}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_2", "text": "(https://platform.openai.com/api-keys) environment variable. See [Getting started](https://github.com/simonw/llm?tab=readme-ov-file#getting-started).\n\n**TDS Students**: See [Large Language Models](large-language-models.md) for instructions on how to get and use `OPENAI_API_KEY`.\n\n```bash\n# Run a simple prompt\nllm 'five great names for a pet pelican'\n\n# Continue a conversation\nllm -c 'now do walruses'\n\n# Start a memory-aware chat session\nllm chat\n\n# Specify a model\nllm -m gpt-4.1-nano 'Summarize "}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_3", "text": "es'\n\n# Start a memory-aware chat session\nllm chat\n\n# Specify a model\nllm -m gpt-4.1-nano 'Summarize tomorrow\u2019s meeting agenda'\n\n# Extract JSON output\nllm 'List the top 5 Python viz libraries with descriptions' \\\n  --schema-multi 'name,description'\n```\n\nOr use llm without installation using [`uvx`](uv.md):\n\n```bash\n# Run llm via uvx without any prior installation\nuvx llm 'Translate \"Hello, world\" into Japanese'\n\n# Specify a model\nuvx llm -m gpt-4.1-nano 'Draft a 200-word blog post on data ethics'"}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_4", "text": "nto Japanese'\n\n# Specify a model\nuvx llm -m gpt-4.1-nano 'Draft a 200-word blog post on data ethics'\n\n# Use structured JSON output\nuvx llm 'List the top 5 programming languages in 2025 with their release years' \\\n  --schema-multi 'rank,language,release_year'\n```\n\n### Key Features\n\n- **Interactive prompts**: `llm '\u2026'` \u2014 Fast shell access to any LLM.\n- **Conversational flow**: `-c '\u2026'` \u2014 Continue context across prompts.\n- **Model switching**: `-m MODEL` \u2014 Use OpenAI, Anthropic, local models, and m"}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_5", "text": "ntext across prompts.\n- **Model switching**: `-m MODEL` \u2014 Use OpenAI, Anthropic, local models, and more.\n- **Structured output**: `llm json` \u2014 Produce JSON for automation.\n- **Logging & history**: `llm logs path` \u2014 Persist every prompt/response in SQLite.\n- **Web UI**: `datasette \"$(llm logs path)\"` \u2014 Browse your entire history with Datasette.\n- **Persistent chat**: `llm chat` \u2014 Keep the model in memory across multiple interactions.\n- **Plugin ecosystem**: `llm install PLUGIN` \u2014 Add support for "}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_6", "text": "memory across multiple interactions.\n- **Plugin ecosystem**: `llm install PLUGIN` \u2014 Add support for new models, data sources, or workflows. ([Language models on the command-line - Simon Willison's Weblog](https://simonwillison.net/2024/Jun/17/cli-language-models/?utm_source=chatgpt.com))\n\n### Practical Uses\n\n- **Automated coding**. Generate code scaffolding, review helpers, or utilities on demand. For example, after running`llm install llm-cmd`, run `llm cmd 'Undo the last git commit'`. Inspired"}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_7", "text": " For example, after running`llm install llm-cmd`, run `llm cmd 'Undo the last git commit'`. Inspired by [Simon\u2019s post on using LLMs for rapid tool building](https://simonwillison.net/2025/Mar/11/using-llms-for-code/).\n- **Transcript processing**. Summarize YouTube or podcast transcripts using Gemini. See [Putting Gemini 2.5 Pro through its paces](https://www.macstories.net/mac/llm-youtube-transcripts-with-claude-and-gemini-in-shortcuts/).\n- **Commit messages**. Turn diffs into descriptive commit"}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_8", "text": "pts-with-claude-and-gemini-in-shortcuts/).\n- **Commit messages**. Turn diffs into descriptive commit messages, e.g. `git diff | llm 'Write a concise git commit message explaining these changes'`. \\\n- **Data extraction**. Convert free-text into structured JSON for automation. [Structured data extraction from unstructured content using LLM schemas](https://simonwillison.net/2025/Feb/28/llm-schemas/)."}
{"source": "Course_content_jan_2025/llm.md", "chunk_id": "llm.md_part_9", "text": "."}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_1", "text": "# Live Session: 17 Jan 2025\n\n[](https://youtu.be/hG5WqtbpfkI)\n\n**Q1: How to solve question number 7 (counting Wednesdays between two dates)?**\n\n**A1:** Use Excel. Input the two dates into two cells. Use a command to find the difference in days, then divide by 7 to get the number of weeks. Since there's one Wednesday per week, that's the number of Wednesdays. If the start date isn't a Wednesday, a different approach is needed.\n\n**Q2: How to handle dates that don't start on a Wednesday?**\n\n**A2:**"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_2", "text": "different approach is needed.\n\n**Q2: How to handle dates that don't start on a Wednesday?**\n\n**A2:** Instead of starting from the given date, start from the next day (e.g., if it starts on Tuesday, start on Wednesday). Calculate the difference in days and divide by 7. The method of simply dividing by 7 might not always give the correct answer, so the logic needs to be adjusted based on the starting day. Another approach is to start from the nearest Wednesday and iterate using a while loop, but t"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_3", "text": "g day. Another approach is to start from the nearest Wednesday and iterate using a while loop, but this is less efficient.\n\n**Q3: How to extract a CSV file from a zip file?**\n\n**A3:** This is considered a basic task. Use a file explorer or command-line tools. The instructor skips this question.\n\n**Q4: What is JSON and how is it used?**\n\n**A4:** JSON (JavaScript Object Notation) is a way to store data, like names and ages of students or employees. It uses key-value pairs. The instructor demonstra"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_4", "text": "ata, like names and ages of students or employees. It uses key-value pairs. The instructor demonstrates creating a JSON object in Python, showing how to access elements using indexing and nested structures. JSON can also be used in JavaScript and browser consoles.\n\n**Q5: How can I access data from a JSON object?**\n\n**A5:** The instructor shows how to access elements within a JSON object using indexing in Python. For example, to access the name of the third student in a list, you would use `stude"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_5", "text": "xing in Python. For example, to access the name of the third student in a list, you would use `students[2][name]`. JSON allows hierarchical data storage, making it easy to retrieve specific values.\n\n**Q6: How does JSON get loaded on a website (e.g., Discourse)?**\n\n**A6:** Websites often fetch JSON data from backend servers. The instructor shows an example on the Discourse website, where different data (weekly, yearly) is loaded based on the request parameters in the URL. Multiple filters can be "}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_6", "text": "data (weekly, yearly) is loaded based on the request parameters in the URL. Multiple filters can be added to the URL to refine the data fetched.\n\n**Q7: How can I use Python to access JSON data from a URL?**\n\n**A7:** The instructor demonstrates using the `requests` library in Python to fetch JSON data from a URL. The response status code (e.g., 200 for success) indicates whether the request was successful. The JSON data is then accessible as a Python dictionary. The instructor uses Postman to sho"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_7", "text": "cessful. The JSON data is then accessible as a Python dictionary. The instructor uses Postman to show how to send API requests and view the JSON response.\n\n**Q8: What is Postman and how does it work?**\n\n**A8:** Postman is a tool that acts as an intermediary between you and an API. It sends API calls and retrieves the data. Alternatively, the Thunder Client extension in VS Code can be used for the same purpose.\n\n**Q9: What are CSS selectors and combinators?**\n\n**A9:** The instructor explains CSS "}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_8", "text": "same purpose.\n\n**Q9: What are CSS selectors and combinators?**\n\n**A9:** The instructor explains CSS selectors and combinators, focusing on basic selectors and the direct child combinator (`>`) which selects only direct children of an element. More advanced combinators are mentioned but not covered in detail.\n\n**Q10: How to handle large JSON objects or datasets?**\n\n**A10:** For large datasets, copying and pasting is impractical. Instead, use Python and API calls to fetch and process the data prog"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_9", "text": "ing and pasting is impractical. Instead, use Python and API calls to fetch and process the data programmatically. This avoids overwhelming the browser and allows for automation.\n\n**Q11: How to handle encoding issues when opening CSV files?**\n\n**A11:** When opening CSV files, especially those with unusual characters, specify the correct encoding (e.g., using the `encoding` parameter in pandas). The instructor shows how to detect the encoding of a file using Python and then uses pandas to open the"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_10", "text": " instructor shows how to detect the encoding of a file using Python and then uses pandas to open the file with the detected encoding.\n\n**Q12: How to use Git and GitHub?**\n\n**A12:** The instructor suggests covering Git and GitHub in a separate session due to the complexity and time required for a thorough explanation.\n\n**Q13: How to use WSL (Windows Subsystem for Linux) in VS Code?**\n\n**A13:** The instructor explains how to use the WSL extension in VS Code to access a Linux terminal within VS Cod"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_11", "text": "instructor explains how to use the WSL extension in VS Code to access a Linux terminal within VS Code. This is useful for running bash commands. The instructor notes that the default terminal in a Mac might not support all commands, so WSL is an alternative.\n\n**Q14: Why does the course feel overwhelming?**\n\n**A14:** The instructor acknowledges that the course challenges students' logical thinking by introducing concepts and tools not previously taught. The instructor encourages students to use C"}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_12", "text": "by introducing concepts and tools not previously taught. The instructor encourages students to use ChatGPT to help bridge knowledge gaps and emphasizes that the course aims to build a strong foundation and encourage exploration beyond the curriculum. The instructor also points out that the course materials are available in the course portal, including content for weeks beyond the current one. A feedback form is provided for students to report challenges and suggest improvements."}
{"source": "Course_content_jan_2025/live-session-2025-01-17.md", "chunk_id": "live-session-2025-01-17.md_part_13", "text": "edback form is provided for students to report challenges and suggest improvements."}
{"source": "Course_content_jan_2025/data-transformation-in-excel.md", "chunk_id": "data-transformation-in-excel.md_part_1", "text": "## Data Transformation in Excel\n\n[](https://youtu.be/gR2IY5Naja0)\n\nYou'll learn data transformation techniques in Excel, covering:\n\n- **Calculating Ratios**: Compute metro area to city area and metro population to city population ratios.\n- **Using Pivot Tables**: Create pivot tables to aggregate data and identify outliers.\n- **Filtering Data**: Apply filters in pivot tables to analyze specific subsets of data.\n- **Counting Data Occurrences**: Use pivot tables to count the frequency of specific e"}
{"source": "Course_content_jan_2025/data-transformation-in-excel.md", "chunk_id": "data-transformation-in-excel.md_part_2", "text": "sets of data.\n- **Counting Data Occurrences**: Use pivot tables to count the frequency of specific entries.\n- **Creating Charts**: Generate charts from pivot table data to visualize distributions and outliers.\n\nHere are links used in the video:\n\n- [List of Largest Cities Excel file](https://docs.google.com/spreadsheets/d/1jl8tHGoxmIba4J78aJVfT9jtZv7lfCbV/view)"}
{"source": "Course_content_jan_2025/narratives-with-comics.md", "chunk_id": "narratives-with-comics.md_part_1", "text": "## Narratives with Comics\n\n[](https://youtu.be/HZDqCQBpHGI)\n\n- [Sample sheet](https://docs.google.com/spreadsheets/d/1b0DOfJnnx6MFcN955YqRqYafLb8XrH-zqtLaK2h5kkc/edit#gid=1534638946)"}
{"source": "Course_content_jan_2025/markdown.md", "chunk_id": "markdown.md_part_1", "text": "## Documentation: Markdown\n\nMarkdown is a lightweight markup language for creating formatted text using a plain-text editor. It's the standard for documentation in software projects and data science notebooks.\n\nWatch this introduction to Markdown (19 min):\n\n[](https://youtu.be/HUBNt18RFbo)\n\nCommon Markdown syntax:\n\n````\n# Heading 1\n## Heading 2\n\n**bold** and *italic*\n\n- Bullet point\n- Another point\n  - Nested point\n\n1. Numbered list\n2. Second item\n\n[Link text](https://url.com)\n\n\n```python\n# Code"}
{"source": "Course_content_jan_2025/markdown.md", "chunk_id": "markdown.md_part_2", "text": "t\n  - Nested point\n\n1. Numbered list\n2. Second item\n\n[Link text](https://url.com)\n\n\n```python\n# Code block\ndef hello():\n    print(\"Hello\")\n```\n\n> Blockquote\n````\n\nThere is also a [GitHub Flavored Markdown](https://github.github.com/gfm/) standard which is popular. This includes extensions like:\n\n```\n- [ ] Incomplete task\n- [x] Completed task\n\n~~Strikethrough~~\n\nTables:\n\n| Column 1 | Column 2 |\n|----------|----------|\n| Cell 1   | Cell 2   |\n\n```\n\nTools for working with Markdown:\n\n- [markdown2](h"}
{"source": "Course_content_jan_2025/markdown.md", "chunk_id": "markdown.md_part_3", "text": "--------|----------|\n| Cell 1   | Cell 2   |\n\n```\n\nTools for working with Markdown:\n\n- [markdown2](https://pypi.org/project/markdown2/): Python library to convert Markdown to HTML\n- [markdownlint](https://github.com/DavidAnson/markdownlint): Linting\n- [Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one): VS Code extension\n- [pandoc](https://pandoc.org/): Convert between formats"}
{"source": "Course_content_jan_2025/markdown.md", "chunk_id": "markdown.md_part_4", "text": "rg/): Convert between formats"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_1", "text": "# Project 2 - TDS Solver\n\nThis project is due on 31 Mar 2025 EoD IST. Results will be announced by 15 Apr 2025.\n\nFor questions, [use this Discourse thread](https://discourse.onlinedegree.iitm.ac.in/t/project-2-tds-solver-discussion-thread/169029).\n\n## Background\n\nYou are a clever student who has joined IIT Madras' Online Degree in Data Science. You have just enrolled in the [Tools in Data Science](https://tds.s-anand.net/) course.\n\nTo make your life easier, you have decided to build an LLM-based"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_2", "text": "(https://tds.s-anand.net/) course.\n\nTo make your life easier, you have decided to build an LLM-based application that can automatically answer any of the graded assignment questions.\n\nSpecifically, you are building and deploying an API that accepts any question from one of these 5 graded assignments:\n\n- [Graded Assignment 1](https://exam.sanand.workers.dev/tds-2025-01-ga1)\n- [Graded Assignment 2](https://exam.sanand.workers.dev/tds-2025-01-ga2)\n- [Graded Assignment 3](https://exam.sanand.workers"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_3", "text": "https://exam.sanand.workers.dev/tds-2025-01-ga2)\n- [Graded Assignment 3](https://exam.sanand.workers.dev/tds-2025-01-ga3)\n- [Graded Assignment 4](https://exam.sanand.workers.dev/tds-2025-01-ga4)\n- [Graded Assignment 5](https://exam.sanand.workers.dev/tds-2025-01-ga5)\n\n... and responds with the answer to enter in the assignment.\n\n## Create an API\n\nYour application exposes an API endpoint. Let's assume that it is at `https://your-app.vercel.app/api/`.\n\nThe endpoint must accept a POST request, e.g."}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_4", "text": "ume that it is at `https://your-app.vercel.app/api/`.\n\nThe endpoint must accept a POST request, e.g. `POST https://your-app.vercel.app/api/` with the question as well as optional file attachments as multipart/form-data.\n\nFor example, here's how anyone can make a request:\n\n```bash\ncurl -X POST \"https://your-app.vercel.app/api/\" \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"question=Download and unzip file abcd.zip which has a single extract.csv file inside. What is the value in the \"answer\" "}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_5", "text": "d unzip file abcd.zip which has a single extract.csv file inside. What is the value in the \"answer\" column of the CSV file?\" \\\n  -F \"file=@abcd.zip\"\n```\n\nThe response must be a JSON object with a single text (string) field: `answer` that can be directly entered in the assignment. For example:\n\n```json\n{\n  \"answer\": \"1234567890\"\n}\n```\n\n## Deploy your application\n\nDeploy your application to a public URL that can be accessed by anyone. You may use any platform, including Vercel.\n\n(If you use ngrok,"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_6", "text": " URL that can be accessed by anyone. You may use any platform, including Vercel.\n\n(If you use ngrok, ensure that it is running continuously until you get your results.)\n\n## Share your code\n\n- [Create a new _public_ GitHub repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository)\n- [Add an MIT `LICENSE` file](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository)\n- Commit an"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_7", "text": "ties/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository)\n- Commit and push your code\n\n## Submit your URL\n\nSubmit your GitHub repository URL and your API endpoint URL in this Google Form: <https://forms.gle/6ZLCGEEHUHVK71Yu5>.\n\n## Evaluation\n\n- **Pre-requisites**: Your repository **MUST** meet the following criteria to be eligible for evaluation\n  - Your GitHub repository exists and is publicly accessible\n  - Your GitHub repository has a `LICENSE` file with the MIT"}
{"source": "Course_content_jan_2025/project-2.md", "chunk_id": "project-2.md_part_8", "text": "itory exists and is publicly accessible\n  - Your GitHub repository has a `LICENSE` file with the MIT license\n- We will send 5 questions _randomly_ chosen from the graded assignments above. Correct answers will be awarded 4 marks each.\n- Your score will be the sum of the marks above. No normalization. What you get is what you get."}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_1", "text": "## Transforming Images\n\n### Image Processing with PIL (Pillow)\n\n[](https://youtu.be/6Qs3wObeWwc)\n\n[Pillow](https://python-pillow.org/) is Python's leading library for image processing, offering powerful tools for editing, analyzing, and generating images. It handles various formats (PNG, JPEG, GIF, etc.) and provides operations from basic resizing to complex filters.\n\nHere's a minimal example showing common operations:\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\"Pillo"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_2", "text": "ing common operations:\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\"Pillow\"]\n# ///\n\nfrom PIL import Image, ImageEnhance, ImageFilter\n\nasync def process_image(path: str) -> Image.Image:\n    \"\"\"Process an image with basic enhancements.\"\"\"\n    with Image.open(path) as img:\n        # Convert to RGB to ensure compatibility\n        img = img.convert('RGB')\n\n        # Resize maintaining aspect ratio\n        img.thumbnail((800, 800))\n\n        # Apply enhancements\n        img ="}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_3", "text": "intaining aspect ratio\n        img.thumbnail((800, 800))\n\n        # Apply enhancements\n        img = (ImageEnhance.Contrast(img)\n               .enhance(1.2))\n\n        return img.filter(ImageFilter.SHARPEN)\n\nif __name__ == \"__main__\":\n    import asyncio\n    img = asyncio.run(process_image(\"input.jpg\"))\n    img.save(\"output.jpg\", quality=85)\n```\n\nKey features and techniques you'll learn:\n\n- **Image Loading and Saving**: Handle various formats with automatic conversion\n- **Basic Operations**: Resi"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_4", "text": " Loading and Saving**: Handle various formats with automatic conversion\n- **Basic Operations**: Resize, rotate, crop, and flip images\n- **Color Manipulation**: Adjust brightness, contrast, and color balance\n- **Filters and Effects**: Apply blur, sharpen, and other visual effects\n- **Drawing**: Add text, shapes, and overlays to images\n- **Batch Processing**: Handle multiple images efficiently\n- **Memory Management**: Process large images without memory issues\n\n### Basic Image Operations\n\nCommon o"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_5", "text": "emory Management**: Process large images without memory issues\n\n### Basic Image Operations\n\nCommon operations for resizing, cropping, and rotating images:\n\n```python\nfrom PIL import Image\n\nasync def transform_image(\n    path: str,\n    size: tuple[int, int],\n    rotation: float = 0\n) -> Image.Image:\n    \"\"\"Transform image with basic operations.\"\"\"\n    with Image.open(path) as img:\n        # Resize with anti-aliasing\n        img = img.resize(size, Image.LANCZOS)\n\n        # Rotate around center\n   "}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_6", "text": "with anti-aliasing\n        img = img.resize(size, Image.LANCZOS)\n\n        # Rotate around center\n        if rotation:\n            img = img.rotate(rotation, expand=True)\n\n        # Auto-crop empty edges\n        img = img.crop(img.getbbox())\n\n        return img\n```\n\n### Color and Enhancement\n\nAdjust image appearance with built-in enhancement tools:\n\n```python\nfrom PIL import ImageEnhance, ImageOps\n\nasync def enhance_image(\n    img: Image.Image,\n    brightness: float = 1.0,\n    contrast: float = 1"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_7", "text": "\nasync def enhance_image(\n    img: Image.Image,\n    brightness: float = 1.0,\n    contrast: float = 1.0,\n    saturation: float = 1.0\n) -> Image.Image:\n    \"\"\"Apply color enhancements to image.\"\"\"\n    enhancers = [\n        (ImageEnhance.Brightness, brightness),\n        (ImageEnhance.Contrast, contrast),\n        (ImageEnhance.Color, saturation)\n    ]\n\n    for Enhancer, factor in enhancers:\n        if factor != 1.0:\n            img = Enhancer(img).enhance(factor)\n\n    return img\n```\n\n### Filters and"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_8", "text": " factor != 1.0:\n            img = Enhancer(img).enhance(factor)\n\n    return img\n```\n\n### Filters and Effects\n\nApply visual effects and filters to images:\n\n```python\nfrom PIL import ImageFilter\n\ndef apply_effects(img: Image.Image) -> Image.Image:\n    \"\"\"Apply various filters and effects.\"\"\"\n    effects = {\n        'blur': ImageFilter.GaussianBlur(radius=2),\n        'sharpen': ImageFilter.SHARPEN,\n        'edge': ImageFilter.FIND_EDGES,\n        'emboss': ImageFilter.EMBOSS\n    }\n\n    return {name:"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_9", "text": "       'edge': ImageFilter.FIND_EDGES,\n        'emboss': ImageFilter.EMBOSS\n    }\n\n    return {name: img.filter(effect)\n            for name, effect in effects.items()}\n```\n\n### Drawing and Text\n\nAdd text, shapes, and overlays to images:\n\n```python\nfrom PIL import Image, ImageDraw, ImageFont\n\nasync def add_watermark(\n    img: Image.Image,\n    text: str,\n    font_size: int = 30\n) -> Image.Image:\n    \"\"\"Add text watermark to image.\"\"\"\n    draw = ImageDraw.Draw(img)\n    font = ImageFont.truetype(\"a"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_10", "text": "  \"\"\"Add text watermark to image.\"\"\"\n    draw = ImageDraw.Draw(img)\n    font = ImageFont.truetype(\"arial.ttf\", font_size)\n\n    # Calculate text size and position\n    text_bbox = draw.textbbox((0, 0), text, font=font)\n    text_width = text_bbox[2] - text_bbox[0]\n    text_height = text_bbox[3] - text_bbox[1]\n\n    # Position text at bottom-right\n    x = img.width - text_width - 10\n    y = img.height - text_height - 10\n\n    # Add text with shadow\n    draw.text((x+2, y+2), text, font=font, fill='blac"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_11", "text": "- text_height - 10\n\n    # Add text with shadow\n    draw.text((x+2, y+2), text, font=font, fill='black')\n    draw.text((x, y), text, font=font, fill='white')\n\n    return img\n```\n\n### Memory-Efficient Processing\n\nHandle large images without loading them entirely into memory:\n\n```python\nfrom PIL import Image\nimport os\n\nasync def process_large_images(\n    input_dir: str,\n    output_dir: str,\n    max_size: tuple[int, int]\n) -> None:\n    \"\"\"Process multiple large images efficiently.\"\"\"\n    os.makedirs"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_12", "text": "ize: tuple[int, int]\n) -> None:\n    \"\"\"Process multiple large images efficiently.\"\"\"\n    os.makedirs(output_dir, exist_ok=True)\n\n    for filename in os.listdir(input_dir):\n        if not filename.lower().endswith(('.png', '.jpg', '.jpeg')):\n            continue\n\n        input_path = os.path.join(input_dir, filename)\n        output_path = os.path.join(output_dir, filename)\n\n        with Image.open(input_path) as img:\n            # Process in chunks using thumbnail\n            img.thumbnail(max_si"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_13", "text": "input_path) as img:\n            # Process in chunks using thumbnail\n            img.thumbnail(max_size)\n            img.save(output_path, optimize=True)\n```\n\nPractice with these resources:\n\n- [Pillow Documentation](https://pillow.readthedocs.io/): Complete API reference\n- [Python Image Processing Tutorial](https://realpython.com/image-processing-with-the-python-pillow-library/): In-depth guide\n- [Sample Images Dataset](https://www.kaggle.com/datasets/lamsimon/celebs): Test images for practice\n\nW"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_14", "text": "Sample Images Dataset](https://www.kaggle.com/datasets/lamsimon/celebs): Test images for practice\n\nWatch these tutorials for hands-on demonstrations:\n\n[](https://youtu.be/dkp4wUhCwR4)\n\n### Image Processing with ImageMagick\n\n[ImageMagick](https://imagemagick.org/) is a powerful command-line tool for image manipulation, offering features beyond what's possible with Python libraries. It's particularly useful for:\n\n- Batch processing large image collections\n- Complex image transformations\n- High-qua"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_15", "text": "y useful for:\n\n- Batch processing large image collections\n- Complex image transformations\n- High-quality format conversion\n- Creating image thumbnails\n- Adding text and watermarks\n\nBasic Operations:\n\n```bash\n# Format conversion\nconvert input.png output.jpg\n\n# Resize image (maintains aspect ratio)\nconvert input.jpg -resize 800x600 output.jpg\n\n# Compress image quality\nconvert input.jpg -quality 85 output.jpg\n\n# Rotate image\nconvert input.jpg -rotate 90 output.jpg\n```\n\nCommon Data Science Tasks:\n\n`"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_16", "text": "utput.jpg\n\n# Rotate image\nconvert input.jpg -rotate 90 output.jpg\n```\n\nCommon Data Science Tasks:\n\n```bash\n# Create thumbnails for dataset preview\nconvert input.jpg -thumbnail 200x200^ -gravity center -extent 200x200 thumb.jpg\n\n# Normalize image for ML training\nconvert input.jpg -normalize -strip output.jpg\n\n# Extract dominant colors\nconvert input.jpg -colors 5 -unique-colors txt:\n\n# Generate image statistics\nidentify -verbose input.jpg | grep -E \"Mean|Standard|Kurtosis\"\n```\n\nBatch Processing:\n\n"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_17", "text": "e statistics\nidentify -verbose input.jpg | grep -E \"Mean|Standard|Kurtosis\"\n```\n\nBatch Processing:\n\n```bash\n# Convert all images in a directory\nmogrify -format jpg *.png\n\n# Resize multiple images\nmogrify -resize 800x600 -path output/ *.jpg\n\n# Add watermark to images\nfor f in *.jpg; do\n    convert \"$f\" -gravity southeast -draw \"text 10,10 'Copyright'\" \"watermarked/$f\"\ndone\n```\n\nAdvanced Features:\n\n```bash\n# Apply image effects\nconvert input.jpg -blur 0x3 blurred.jpg\nconvert input.jpg -sharpen 0x3"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_18", "text": "```bash\n# Apply image effects\nconvert input.jpg -blur 0x3 blurred.jpg\nconvert input.jpg -sharpen 0x3 sharp.jpg\nconvert input.jpg -edge 1 edges.jpg\n\n# Create image montage\nmontage *.jpg -geometry 200x200+2+2 montage.jpg\n\n# Extract image channels\nconvert input.jpg -separate channels_%d.jpg\n\n# Composite images\ncomposite overlay.png -gravity center base.jpg output.jpg\n```\n\nWatch this ImageMagick tutorial (16 min):\n\n[](https://youtu.be/wjcBOoReYc0)\n\nTools:\n\n- [Fred's ImageMagick Scripts](http://www.f"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_19", "text": "ial (16 min):\n\n[](https://youtu.be/wjcBOoReYc0)\n\nTools:\n\n- [Fred's ImageMagick Scripts](http://www.fmwconcepts.com/imagemagick/): Useful script collection\n- [ImageMagick Online Studio](https://magickstudio.imagemagick.org/): Visual command builder\n\nTips:\n\n1. Use `-strip` to remove metadata and reduce file size\n2. Monitor memory usage with `-limit memory 1GB`\n3. Use `-define` for format-specific options\n4. Process in parallel with `-parallel`\n5. Use `-monitor` to track progress\n\nError Handling:\n\n"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_20", "text": "tions\n4. Process in parallel with `-parallel`\n5. Use `-monitor` to track progress\n\nError Handling:\n\n```bash\n# Check image validity\nidentify -regard-warnings input.jpg\n\n# Get detailed error information\nconvert input.jpg output.jpg 2>&1 | grep -i \"error\"\n\n# Set resource limits\nconvert -limit memory 1GB -limit map 2GB input.jpg output.jpg\n```\n\nFor Python integration:\n\n```python\n# /// script\n# requires-python = \">=3.9\"\n# dependencies = [\"Wand\"]\n# ///\n\nfrom wand.image import Image\n\nasync def process_"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_21", "text": "s-python = \">=3.9\"\n# dependencies = [\"Wand\"]\n# ///\n\nfrom wand.image import Image\n\nasync def process_image(path: str) -> None:\n    \"\"\"Process image with ImageMagick via Wand.\"\"\"\n    with Image(filename=path) as img:\n        # Basic operations\n        img.resize(800, 600)\n        img.normalize()\n\n        # Apply effects\n        img.sharpen(radius=0, sigma=3)\n\n        # Save with compression\n        img.save(filename='output.jpg')\n```\n\nNote: Always install ImageMagick before using the Wand Python b"}
{"source": "Course_content_jan_2025/transforming-images.md", "chunk_id": "transforming-images.md_part_22", "text": "img.save(filename='output.jpg')\n```\n\nNote: Always install ImageMagick before using the Wand Python binding."}
{"source": "Course_content_jan_2025/marimo.md", "chunk_id": "marimo.md_part_1", "text": "## Interactive Notebooks: Marimo\n\n[Marimo](https://marimo.app/) is a new take on notebooks that solves some headaches of Jupyter. It runs cells reactively - when you change one cell, all dependent cells update automatically, just like a spreadsheet.\n\nMarimo's cells can't be run out of order. This makes Marimo more reproducible and easier to debug, but requires a mental shift from the Jupyter/Colab way of working.\n\nIt also runs Python directly in the browser and is quite interactive. [Browse the "}
{"source": "Course_content_jan_2025/marimo.md", "chunk_id": "marimo.md_part_2", "text": " way of working.\n\nIt also runs Python directly in the browser and is quite interactive. [Browse the gallery of examples](https://marimo.io/gallery). With a wide variety of interactive widgets, It's growing popular as an alternative to Streamlit for building data science web apps.\n\nCommon Operations:\n\n```python\n# Create new notebook\nuvx marimo new\n\n# Run notebook server\nuvx marimo edit notebook.py\n\n# Export to HTML\nuvx marimo export notebook.py\n```\n\nBest Practices:\n\n1. **Cell Dependencies**\n   - "}
{"source": "Course_content_jan_2025/marimo.md", "chunk_id": "marimo.md_part_3", "text": "\n# Export to HTML\nuvx marimo export notebook.py\n```\n\nBest Practices:\n\n1. **Cell Dependencies**\n   - Keep cells focused and atomic\n   - Use clear variable names\n   - Document data flow between cells\n2. **Interactive Elements**\n\n   ```python\n   # Add interactive widgets\n   slider = mo.ui.slider(1, 100)\n   # Create dynamic Markdown\n   mo.md(f\"{slider} {\"\ud83d\udfe2\" * slider.value}\")\n   ```\n\n3. **Version Control**\n   - Keep notebooks are Python files\n   - Use Git to track changes\n   - Publish on [marimo.app]"}
{"source": "Course_content_jan_2025/marimo.md", "chunk_id": "marimo.md_part_4", "text": "ol**\n   - Keep notebooks are Python files\n   - Use Git to track changes\n   - Publish on [marimo.app](https://marimo.app/) for collaboration\n\n[](https://youtu.be/9R2cQygaoxQ)"}
{"source": "Course_content_jan_2025/profiling-data-with-python.md", "chunk_id": "profiling-data-with-python.md_part_1", "text": "## Profile Data with Python\n\n[](https://youtu.be/kFVxdBhLa_A)\n\nThis session covers the use of the `pandas_profiling` library for generating comprehensive data reports in Python:\n\n- **Library Installation and Import**: Learn how to install and import the pandas_profiling library.\n- **Profile Report Generation**: Generate an HTML report with a single line of code using ProfileReport.\n- **Descriptive Statistics**: View detailed descriptive statistics such as variance, standard deviation, and kurtos"}
{"source": "Course_content_jan_2025/profiling-data-with-python.md", "chunk_id": "profiling-data-with-python.md_part_2", "text": " Statistics**: View detailed descriptive statistics such as variance, standard deviation, and kurtosis.\n- **Outlier Detection**: Identify and analyze outliers within the dataset.\n- **Correlation Analysis**: Understand how variables are correlated with each other using visual representations.\n- **Handling Missing Values**: Get insights on missing data and decide on imputation or removal strategies.\n- **Initial Data Insights**: Use the report to gather early warnings and insights before starting t"}
{"source": "Course_content_jan_2025/profiling-data-with-python.md", "chunk_id": "profiling-data-with-python.md_part_3", "text": "\n- **Initial Data Insights**: Use the report to gather early warnings and insights before starting the data cleaning and modeling process.\n\nHere are links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1hFo_zvBuKw_ugxRjX4XUSh65-hAvl7X0)\n- [Pandas Profiling output](https://drive.google.com/file/d/1cqu52zgddCJqzbLd7xqDC2RXPNkufFlN/view)\n- Learn about the [`pandas_profiling` package](https://github.com/ydataai/ydata-profiling). [Video](https://youtu.be/Ef169VELt5o)"}
{"source": "Course_content_jan_2025/profiling-data-with-python.md", "chunk_id": "profiling-data-with-python.md_part_4", "text": "ofiling` package](https://github.com/ydataai/ydata-profiling). [Video](https://youtu.be/Ef169VELt5o)\n- Learn about the [`google.colab` package](https://colab.research.google.com/notebooks/io.ipynb)"}
{"source": "Course_content_jan_2025/google-data-studio.md", "chunk_id": "google-data-studio.md_part_1", "text": "## Google Data Studio\n\n- [Google Data Studio](https://youtu.be/1qGsjmmHiu8): Google Data Studio Tutorial for Beginners\ud83d\udd25"}
{"source": "Course_content_jan_2025/visualizing-network-data-with-kumu.md", "chunk_id": "visualizing-network-data-with-kumu.md_part_1", "text": "## Visualizing Network Data with Kumu\n\n[](https://youtu.be/OndB17bigkc)\n\n- [Kumu](https://kumu.io)\n- [IMDB data](https://developer.imdb.com/non-commercial-datasets/)\n- [Jupyter Notebook](https://colab.research.google.com/drive/1CHR68fw7lZC9H2JtVW4LXpUvNwfM_VE-?usp=sharing)\n\n[](https://youtu.be/oi4fDzqsCes)"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_1", "text": "# Live Session: 01 Feb 2025\n\n[](https://youtu.be/tsn7B7mDzw8)\n\n**Q1: Can I use Python notebooks instead of VS Code for this project?**\n\n**A1:** You can use Python notebooks for interactive development and debugging, but for a production environment, a script file (.py) is better because it allows for a defined order of execution, unlike notebooks where code cells may not necessarily branch from one section to another. Notebooks are great for sharing with others who may not understand the code, a"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_2", "text": "e section to another. Notebooks are great for sharing with others who may not understand the code, as you can add Markdown to explain each step.\n\n**Q2: In the delete order function, could a wrong order ID get deleted if the prompt contains multiple things that could match multiple orders?**\n\n**A2:** That's a good question. This application isn't built to be very robust. The goal is to demonstrate GPT's ability to convert natural language into functions that the application understands. A real-wo"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_3", "text": "GPT's ability to convert natural language into functions that the application understands. A real-world application would have a more robust interface (website or local app) with precisely crafted inputs to map to functions, preventing such errors.\n\n**Q3: How can I avoid manually managing virtual environments and dependencies when deploying my application?**\n\n**A3:** Use `uv`. `uv` is similar to Docker in that it handles dependencies without requiring manual management of virtual environments. Y"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_4", "text": "ocker in that it handles dependencies without requiring manual management of virtual environments. You just specify your dependencies at the top of your code, and `uv` handles everything else, including creating and disposing of the virtual environment. This is especially useful when dealing with many submissions with different package requirements, as seen in a previous project with nearly 700 submissions.\n\n**Q4: How does the application know which function to run based on the user's request?**"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_5", "text": "bmissions.\n\n**Q4: How does the application know which function to run based on the user's request?**\n\n**A4:** You send the user's natural language request (prompt) and a list of your application's capabilities to GPT. GPT determines which function to run and the required parameters, returning this information as structured JSON. Your application then uses this JSON to execute the appropriate function.\n\n**Q5: What is the purpose of `if __name__ == \"__main__\":`?**\n\n**A5:** This is the entry point "}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_6", "text": "ion.\n\n**Q5: What is the purpose of `if __name__ == \"__main__\":`?**\n\n**A5:** This is the entry point for your application. The Python interpreter runs from top to bottom, but it won't run the code within this block unless the file is the starting file of the application. This is crucial for multi-file applications where the interpreter needs to know where to begin.\n\n**Q6: Should I create a tunnel for this application?**\n\n**A6:** No, there's no need to create a tunnel if you want others to try it."}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_7", "text": "or this application?**\n\n**A6:** No, there's no need to create a tunnel if you want others to try it. Using a tool like ngrok allows others to access your server directly and send queries. However, be aware that this might crash your system if the queries aren't clean, as there's no robust error handling.\n\n**Q7: How do I pass URL-encoded parameters to a FastAPI application?**\n\n**A7:** You pass them in the URL itself. For example, `localhost:8000/order?q=Laptop,2,123 Main St,2024-02-29`. The appli"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_8", "text": " in the URL itself. For example, `localhost:8000/order?q=Laptop,2,123 Main St,2024-02-29`. The application then reads the parameter from the URL.\n\n**Q8: Why is my application returning a null response or a 422 error?**\n\n**A8:** Several things could cause this. Ensure that:\n\n- The `prices` dictionary is defined globally, not within a function.\n- The prompt is correctly formatted and includes all necessary information (items, address, time).\n- The application can communicate with the outside world"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_9", "text": "cessary information (items, address, time).\n- The application can communicate with the outside world (check network connectivity).\n- You are using the correct key in the JSON response (`.keys()`).\n\n**Q9: How do I use Docker?**\n\n**A9:** Docker creates lightweight, self-contained images that run inside a Docker engine. This isolates your application from the underlying system, making it portable and easy to deploy anywhere. You build the image using `podman build -t tds-hello .` (the `.` refers to"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_10", "text": " easy to deploy anywhere. You build the image using `podman build -t tds-hello .` (the `.` refers to the current working directory). Then, you run it using `podman run -it tds-hello bash`. The `bash` command opens an interactive shell within the Docker container.\n\n**Q10: What are the use cases for Docker?**\n\n**A10:** Docker is useful for deploying applications to various environments without worrying about dependencies or system specifics. You create a Docker image containing your application an"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_11", "text": "ing about dependencies or system specifics. You create a Docker image containing your application and its dependencies. Anyone can then download and run the image regardless of their operating system. This is especially helpful for teams with different setups or when deploying to multiple clients.\n\n**Q11: What should I focus on for the GA3 project?**\n\n**A11:** The GA3 project will involve using the concepts covered today, but on a larger scale. You'll need to create more robust error handling an"}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_12", "text": "e concepts covered today, but on a larger scale. You'll need to create more robust error handling and focus on prompt engineering to ensure the LLM generates the correct code. A previous session covered the basics of LLM calls, tokenization, embeddings, and image URI encoding. Review that session and the material on prompt engineering to prepare. The goal is to create a self-writing program that uses the LLM to generate and correct code dynamically."}
{"source": "Course_content_jan_2025/live-session-2025-02-01.md", "chunk_id": "live-session-2025-02-01.md_part_13", "text": "ses the LLM to generate and correct code dynamically."}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_1", "text": "## Vision Models\n\n[](https://youtu.be/FgT_Mk_bakQ)\n\nYou'll learn how to use LLMs to interpret images and extract useful information, covering:\n\n- **Setting Up Vision Models**: Integrate vision capabilities with LLMs using APIs like OpenAI's Chat Completion.\n- **Sending Image URLs for Analysis**: Pass URLs or base64-encoded images to LLMs for processing.\n- **Reading Image Responses**: Get detailed textual descriptions of images, from scenic landscapes to specific objects like cricketers or bank s"}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_2", "text": "textual descriptions of images, from scenic landscapes to specific objects like cricketers or bank statements.\n- **Extracting Data from Images**: Convert extracted image data to various formats like Markdown tables or JSON arrays.\n- **Handling Model Hallucinations**: Address inaccuracies in extraction results, understanding how different prompts can affect output quality.\n- **Cost Management for Vision Models**: Adjust detail settings (e.g., \"detail: low\") to balance cost and output precision.\n\n"}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_3", "text": "ision Models**: Adjust detail settings (e.g., \"detail: low\") to balance cost and output precision.\n\nHere are the links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1bK0b1XMrZWImtw01T1w9NGraDkiVi8mS)\n- [OpenAI Chat API Reference](https://platform.openai.com/docs/api-reference/chat/create)\n- [OpenAI Vision Guide](https://platform.openai.com/docs/guides/vision)\n- [Sample images used](https://drive.google.com/drive/folders/14MFc7XmGIUDU4-vbmF9305c1SSQrM-gR)\n\nHere "}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_4", "text": "Sample images used](https://drive.google.com/drive/folders/14MFc7XmGIUDU4-vbmF9305c1SSQrM-gR)\n\nHere is an example of how to analyze an image using the OpenAI API.\n\n```bash\ncurl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": [\n          {\"type\": \"text\", \"text\": \"What is in this image?\"},\n          {\n          "}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_5", "text": "   \"content\": [\n          {\"type\": \"text\", \"text\": \"What is in this image?\"},\n          {\n            \"type\": \"image_url\",\n            \"detail\": \"low\",\n            \"image_url\": {\"url\": \"https://upload.wikimedia.org/wikipedia/commons/3/34/Correlation_coefficient.png\"}\n          }\n        ]\n      }\n    ]\n  }'\n```\n\nLet's break down the request:\n\n- `curl https://api.openai.com/v1/chat/completions`: The API endpoint for text generation.\n- `-H \"Content-Type: application/json\"`: The content type of the"}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_6", "text": "e API endpoint for text generation.\n- `-H \"Content-Type: application/json\"`: The content type of the request.\n- `-H \"Authorization: Bearer $OPENAI_API_KEY\"`: The API key for authentication.\n- `-d`: The request body.\n  - `\"model\": \"gpt-4o-mini\"`: The model to use for text generation.\n  - `\"messages\":`: The messages to send to the model.\n    - `\"role\": \"user\"`: The role of the message.\n    - `\"content\":`: The content of the message.\n      - `{\"type\": \"text\", \"text\": \"What is in this image?\"}`: The"}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_7", "text": "nt\":`: The content of the message.\n      - `{\"type\": \"text\", \"text\": \"What is in this image?\"}`: The text message.\n      - `{\"type\": \"image_url\"}`: The image message.\n        - `\"detail\": \"low\"`: The detail level of the image. `low` uses fewer tokens at lower detail. `high` uses more tokens for higher detail.\n        - `\"image_url\": {\"url\": \"https://upload.wikimedia.org/wikipedia/commons/3/34/Correlation_coefficient.png\"}`: The URL of the image.\n\nYou can send images in a [base64 encoded format]("}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_8", "text": "elation_coefficient.png\"}`: The URL of the image.\n\nYou can send images in a [base64 encoded format](base64-image.md), too. For example:\n\n```bash\n# Download image and convert to base64 in one step\nIMAGE_BASE64=$(curl -s \"https://upload.wikimedia.org/wikipedia/commons/3/34/Correlation_coefficient.png\" | base64 -w 0)\n\n# Send to OpenAI API\ncurl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d @- << EOF\n{\n  \"model"}
{"source": "Course_content_jan_2025/vision-models.md", "chunk_id": "vision-models.md_part_9", "text": "t-Type: application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d @- << EOF\n{\n  \"model\": \"gpt-4o-mini\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\"type\": \"text\", \"text\": \"What is in this image?\"},\n        {\n          \"type\": \"image_url\",\n          \"image_url\": { \"url\": \"data:image/png;base64,$IMAGE_BASE64\" }\n        }\n      ]\n    }\n  ]\n}\nEOF\n```"}
{"source": "Course_content_jan_2025/visualizing-forecasts-with-excel.md", "chunk_id": "visualizing-forecasts-with-excel.md_part_1", "text": "## Visualizing Forecasts with Excel\n\n[](https://youtu.be/judFpVgfsV4)\n\n- [Excel File](https://docs.google.com/spreadsheets/d/1a6cSbmZKjX_ZzBsWWrPQwU_4KgRNMwc0/view#gid=1138079165)"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_1", "text": "## CI/CD: GitHub Actions\n\n[GitHub Actions](https://github.com/features/actions) is a powerful automation platform built into GitHub. It helps automate your development workflow - running tests, deploying applications, updating datasets, retraining models, etc.\n\n- Understand the basics of [YAML configuration files](https://docs.github.com/en/actions/writing-workflows/quickstart)\n- Explore the [pre-built actions from the marketplace](https://github.com/marketplace?type=actions)\n- How to [handle se"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_2", "text": "built actions from the marketplace](https://github.com/marketplace?type=actions)\n- How to [handle secrets securely](https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions)\n- [Triggering a workflow](https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow)\n- Staying within the [free tier limits](https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_3", "text": "s](https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github-actions/about-billing-for-github-actions)\n- [Caching dependencies to speed up workflows](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows)\n\nHere is a sample `.github/workflows/iss-location.yml` that runs daily, appends the International Space Station location data into `iss-location.json`, and commits it to the reposi"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_4", "text": "the International Space Station location data into `iss-location.json`, and commits it to the repository.\n\n```yaml\nname: Log ISS Location Data Daily\n\non:\n  schedule:\n    # Runs at 12:00 UTC (noon) every day\n    - cron: \"0 12 * * *\"\n  workflow_dispatch: # Allows manual triggering\n\njobs:\n  collect-iss-data:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n\n      - name: Install uv\n        uses: astral-"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_5", "text": "heckout repository\n        uses: actions/checkout@v4\n\n      - name: Install uv\n        uses: astral-sh/setup-uv@v5\n\n      - name: Fetch ISS location data\n        run: | # python\n          uv run --with requests python << 'EOF'\n          import requests\n\n          data = requests.get('http://api.open-notify.org/iss-now.json').text\n          with open('iss-location.jsonl', 'a') as f:\n              f.write(data + '\\n')\n          'EOF'\n\n      - name: Commit and push changes\n        run: | # shell\n  "}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_6", "text": ".write(data + '\\n')\n          'EOF'\n\n      - name: Commit and push changes\n        run: | # shell\n          git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\n          git config --local user.name \"github-actions[bot]\"\n          git add iss-location.jsonl\n          git commit -m \"Update ISS position data [skip ci]\" || exit 0\n          git push\n```\n\nTools:\n\n- [GitHub CLI](https://cli.github.com/): Manage workflows from terminal\n- [Super-Linter](https://github.com/github"}
{"source": "Course_content_jan_2025/github-actions.md", "chunk_id": "github-actions.md_part_7", "text": "(https://cli.github.com/): Manage workflows from terminal\n- [Super-Linter](https://github.com/github/super-linter): Validate code style\n- [Release Drafter](https://github.com/release-drafter/release-drafter): Automate releases\n- [act](https://github.com/nektos/act): Run actions locally\n\n[](https://youtu.be/mFFXuXjVgkU)\n\n- [How to handle secrets in GitHub Actions](https://youtu.be/1tD7km5jK70)"}
{"source": "Course_content_jan_2025/splitting-text-in-excel.md", "chunk_id": "splitting-text-in-excel.md_part_1", "text": "## Splitting Text in Excel\n\n[](https://youtu.be/fQeADnqiOAg)\n\nYou'll learn how to transform a single-column data set into multiple, organized columns based on specific delimiters using the \"Text to Columns\" feature.\n\nHere are links used in the video:\n\n- [US Senate Legislation - Votes](https://www.senate.gov/legislative/votes_new.htm)"}
{"source": "Course_content_jan_2025/google-charts.md", "chunk_id": "google-charts.md_part_1", "text": "## Google Charts\n\n- [Google Chart 1](https://youtu.be/-DQP4fpmJpc): How To Create Chart Or Graph On HTML CSS Website | Google Charts Tutorial\n- [Google Chart 2](https://youtu.be/6tx58ZZGxrI): Using Google Charts with googleVis"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-excel.md", "chunk_id": "geospatial-analysis-with-excel.md_part_1", "text": "## Geospatial Analysis with Excel\n\n[](https://youtu.be/49LjxNvxyVs)\n\nYou'll learn how to create a data-driven story about coffee shop coverage in Manhattan, covering:\n\n- **Data Collection**: Collect and scrape data for coffee shop locations and census population from various sources.\n- **Data Processing**: Use Python libraries like geopandas for merging population data with geographic maps.\n- **Map Creation**: Generate coverage maps using tools like QGIS and Excel to visualize coffee shop distri"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-excel.md", "chunk_id": "geospatial-analysis-with-excel.md_part_2", "text": "p Creation**: Generate coverage maps using tools like QGIS and Excel to visualize coffee shop distribution and population impact.\n- **Visualization**: Create physical, Power BI, and video visualizations to present the data effectively.\n- **Storytelling**: Craft a narrative around coffee shop competition, including strategic insights and potential market changes.\n\nHere are links that explain how the video was made:\n\n- [The Making of the Manhattan Coffee Kings](https://blog.gramener.com/the-making"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-excel.md", "chunk_id": "geospatial-analysis-with-excel.md_part_3", "text": "e video was made:\n\n- [The Making of the Manhattan Coffee Kings](https://blog.gramener.com/the-making-of-manhattans-coffee-kings/)\n- [Shaping and merging maps](https://blog.gramener.com/shaping-and-merging-maps/)\n- [Visualizing data on 3D maps](https://blog.gramener.com/visualizing-data-on-3d-maps/)\n- [Physical and digital 3D maps](https://blog.gramener.com/physical-and-digital-3d-maps/)"}
{"source": "Course_content_jan_2025/fine-tuning-gemini.md", "chunk_id": "fine-tuning-gemini.md_part_1", "text": "## Fine tuning LLMs: Gemini\n\nThis material will likely be added in the May 2025 term. It is not part of the Jan 2025 term."}
{"source": "Course_content_jan_2025/rawgraphs.md", "chunk_id": "rawgraphs.md_part_1", "text": "## RAWgraphs\n\n[](https://youtu.be/2TtYlty-M5g)\n\n- [RAWgraphs](https://www.rawgraphs.io/)\n- [How to make Alluvial Diagram](https://youtu.be/6BYac2Pmnno)\n- [How to make Sankey Diagram](https://youtu.be/DYTiKjH6oFM)\n- [How to make Beeswarm Plot](https://youtu.be/RPHiEzbCatA)\n- [How to make Bump Chart](https://youtu.be/K-weHCSQb58)\n- [How to make Circle Packing](https://youtu.be/inm_fR-oykw)\n- [How to make Treemap](https://youtu.be/W_MuNYWjhfc)\n- [How to make Streamgraph](https://youtu.be/Iu8Me9QO8m"}
{"source": "Course_content_jan_2025/rawgraphs.md", "chunk_id": "rawgraphs.md_part_2", "text": " make Treemap](https://youtu.be/W_MuNYWjhfc)\n- [How to make Streamgraph](https://youtu.be/Iu8Me9QO8mg)\n- [How to make Sunburst Diagram](https://youtu.be/knqimV7RVbI)\n- [How to make Voronoi Diagram](https://youtu.be/I7nn29giVug)\n- [How to make Hexagonal Binning](https://youtu.be/Q03sVDj32l4)"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_1", "text": "# Archived content\n\n## Videos\n\n### IITM BS Degree - Diploma Level Orientation\n\n[](https://youtu.be/Dj7X0bQRJSs)\n\n### Tools in Data Science Orientation\n\n[](https://youtu.be/_c_aFQ0ObLo?t=4186)\n\n### Tools in Data Science Live Sessions\n\n[](https://www.youtube.com/@se-lr5ff)\n\n### Tools in Data Science Playlist\n\n[](https://www.youtube.com/playlist?list=PLZ2ps__7DhBZEOxUBCkv61WHOu8m7ObpE)\n\n[Tools in Data Science Course Playlist, 66 videos](https://youtube.com/playlist?list=PLZ2ps__7DhBZJ2q_hd8ZbDRgOJl"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_2", "text": "a Science Course Playlist, 66 videos](https://youtube.com/playlist?list=PLZ2ps__7DhBZJ2q_hd8ZbDRgOJlB0CZLw&feature=shared)\n\n## Optional: Parse & clean PDF files with Tabula\n\n[](https://youtu.be/IEusn9HB1sc)\n\n- [Tabula documentation](https://tabula-py.readthedocs.io/en/latest/)\n\n- Learn about the [`io` package](https://pymotw.com/3/io/), [reference](https://docs.python.org/3/library/io.html) and [video](https://youtu.be/cIaOisyd7lE)\n- Learn about the [`os` package](https://pymotw.com/3/os/index.h"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_3", "text": "ideo](https://youtu.be/cIaOisyd7lE)\n- Learn about the [`os` package](https://pymotw.com/3/os/index.html), [reference](https://docs.python.org/3/library/os.html) and [video](https://youtu.be/tJxcKyFMTGo)\n\n[](https://youtu.be/b6puvm-QEY0)\n\n- Wikipedia Library - [Notebook](https://colab.research.google.com/drive/1UZky5JdOn2oMYIkls23WefTaT8VinYyg)\n- Learn about the [`wikipedia` package](https://wikipedia.readthedocs.io/en/latest/)\n\n## Image labelling with chess pieces\n\n[](https://youtu.be/OTRamjRb7P"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_4", "text": "dia.readthedocs.io/en/latest/)\n\n## Image labelling with chess pieces\n\n[](https://youtu.be/OTRamjRb7P4)\n\n- [Image dataset](https://www.kaggle.com/datasets/niteshfre/chessman-image-dataset)\n- [Chess Pawns Excel file](https://docs.google.com/spreadsheets/d/156zEzw4al4Onx5IGPvhF8GbEj1TQ6Bqz/edit#gid=1998348575)\n- [Jupyter Notebook](https://colab.research.google.com/drive/1xWILF9ifT2ifTYv4EXPUiB58Ts0-O9Bo?usp=sharing)\n- Learn about the [PIL module](https://pypi.org/project/pillow/), [reference](https"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_5", "text": "9Bo?usp=sharing)\n- Learn about the [PIL module](https://pypi.org/project/pillow/), [reference](https://pillow.readthedocs.io/en/stable/) and [video](https://youtu.be/dkp4wUhCwR4)\n- Learn about the [BeautifulSoup module](https://beautiful-soup-4.readthedocs.io/en/latest/#quick-start) and [video](https://youtu.be/XVv6mJpFOb0)\n- Learn about the [io module](https://pymotw.com/3/io/), [reference](https://docs.python.org/3/library/io.html) and [video](https://youtu.be/cIaOisyd7lE)\n\n## Forecasting time"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_6", "text": "://docs.python.org/3/library/io.html) and [video](https://youtu.be/cIaOisyd7lE)\n\n## Forecasting time series with Python\n\n[](https://youtu.be/aedA2javxvE)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1J62K0GG56ZNzq981AOTGwH_oA9w4RAYA?usp=sharing)\n- [Understand time series modeling, moving averages and ARIMA](https://www.youtube.com/playlist?list=PLjwX9KFWtvNnOc4HtsvaDf1XYG3O5bv5s)\n- Learn about the [pandas module](https://youtu.be/vmEHCJofslg) and [video](https://youtu.be/vmEHCJo"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_7", "text": "- Learn about the [pandas module](https://youtu.be/vmEHCJofslg) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [matplotlib module](https://matplotlib.org/stable/users/explain/quick_start.html) and [video](https://youtu.be/3Xc3CA655Y4)\n- Learn about the [statsmodels module](https://www.statsmodels.org/stable/index.html) and [video](https://youtu.be/2BdfjqyWj3c)\n\n## Data classification with Python\n\n[](https://youtu.be/XsOihX38Bg0)\n\n- [Jupyter Notebook](https://colab.research.google.co"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_8", "text": "with Python\n\n[](https://youtu.be/XsOihX38Bg0)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1aW_sXdYK1UE9AA6TizQqlYTisFftn7T8?usp=sharing)\n- [Understand machine learning](https://youtu.be/5q87K1WaoFI)\n- [Understand decision trees](https://youtu.be/tNa99PG8hR8)\n- Learn about the [pandas module](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [scikit-learn module](https://scikit-learn.org/stable/tutoria"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_9", "text": "outu.be/vmEHCJofslg)\n- Learn about the [scikit-learn module](https://scikit-learn.org/stable/tutorial/basic/tutorial.html) and [video](https://youtu.be/pqNCD_5r0IU)\n- Learn about the [matplotlib module](https://matplotlib.org/stable/users/explain/quick_start.html) and [video](https://youtu.be/3Xc3CA655Y4)\n\n## Optional: R, RStudio and Rattle\n\nR is a language and environment for statistical computing and graphics. It is open source and extremely popular for statistical analysis. In recent years, P"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_10", "text": "g and graphics. It is open source and extremely popular for statistical analysis. In recent years, Python has become the de facto standard for data modeling. However, R still plays an important role for many analysts.\n\n- [Getting started with R and RStudio](https://youtu.be/lVKMsaWju8w)\n- [Learn about R](https://cran.r-project.org/manuals.html)\n- [Learn about RStudio - an IDE for R](https://posit.co/products/open-source/rstudio/)\n- [Learn about Rattle - a GUI for R](https://rattle.togaware.com)\n"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_11", "text": "co/products/open-source/rstudio/)\n- [Learn about Rattle - a GUI for R](https://rattle.togaware.com)\n- [Video: Rattle for Data Mining](https://youtu.be/OBilaZZpvGs)\n\n## Automate machine learning with PyCaret\n\n[](https://youtu.be/WMUt7NOJGbo)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1-gHL2lEEuKRFP40tkDMCNPron3F3p3iW?usp=sharing)\n\n## Clustering with Python\n\n[](https://youtu.be/lcMWH67TiWE)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/14-k1Pe0JgyLDsmzLeKPaWGCcQZ"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_12", "text": "MWH67TiWE)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/14-k1Pe0JgyLDsmzLeKPaWGCcQZktvMbg?usp=sharing)\n- [How does K-Means clustering work?](https://youtu.be/4b5d3muPQmA)\n\n## Sentiment analysis with Python and SpaCy\n\n[](https://youtu.be/A9WX7HaS1eU)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/12SfxjYim6uijklYiByZCZDagTwPCF-MD?usp=sharing)\n- Learn about the [pandas module](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html) and [video](https://yo"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_13", "text": "s module](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [TextBlob module](https://textblob.readthedocs.io/en/dev/) and [video](https://youtu.be/qTyj2R-wcks)\n\n## Sentiment analysis with Excel and Azure ML\n\n[](https://youtu.be/wkbYLFEBCJg)\n\n- [Excel Sentiment Analysis Workbook](https://docs.google.com/spreadsheets/d/1ZwGixdzUClEF9L1_Ec4t9zB8Ls3-zZdu/edit#gid=1600996918)\n- [Excel Azure ML](https://appsource.microsoft."}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_14", "text": "wGixdzUClEF9L1_Ec4t9zB8Ls3-zZdu/edit#gid=1600996918)\n- [Excel Azure ML](https://appsource.microsoft.com/en-us/product/office/wa104379638?tab=overview)\n\n## Image auto classification with Google Cloud Vision\n\n[](https://youtu.be/z4MUpn4FRTw)\n\n- [Chessman image dataset](https://www.kaggle.com/datasets/niteshfre/chessman-image-dataset)\n- [Google Cloud AutoML](https://cloud.google.com/automl/)\n\n## Image classification with Python (Keras)\n\n[](https://youtu.be/59u3XMiSyro)\n\n- [Jupyter Notebook](https:/"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_15", "text": "e classification with Python (Keras)\n\n[](https://youtu.be/59u3XMiSyro)\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1aU3eFkwRO-Ldu_QwmJ_JduRW7TOUVDlQ?usp=sharing)\n- [Chessman image dataset](https://www.kaggle.com/datasets/niteshfre/chessman-image-dataset)\n- Learn about the [keras module](https://keras.io) and [video](https://youtu.be/qFJeN9V1ZsI)\n- Learn about the [pandas module](https://youtu.be/vmEHCJofslg) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [seaborn m"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_16", "text": "https://youtu.be/vmEHCJofslg) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [seaborn module](https://seaborn.pydata.org/tutorial.html) and [video](https://www.youtube.com/playlist?list=PL998lXKj66MpNd0_XkEXwzTGPxY2jYM2d)\n- Learn about the [matplotlib module](https://matplotlib.org/stable/users/explain/quick_start.html) and [video](https://youtu.be/3Xc3CA655Y4)\n- Learn about [sklearn.metrics.classification_report](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.cla"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_17", "text": "metrics.classification_report](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.classification_report.html) and [video](https://youtu.be/LEPyAspkkew)\n\n## Narratives with Quill on Tableau\n\n-[](https://youtu.be/b_Qojb9gLzA)\n\n## Comic narratives with Google Sheets & Comicgen\n\n[](https://youtu.be/HZDqCQBpHGI)\n\n- [Sample sheet](https://docs.google.com/spreadsheets/d/1b0DOfJnnx6MFcN955YqRqYafLb8XrH-zqtLaK2h5kkc/edit#gid=1534638946)\n\n## Optional: Scaling hotstar.com for 25 million conc"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_18", "text": "qRqYafLb8XrH-zqtLaK2h5kkc/edit#gid=1534638946)\n\n## Optional: Scaling hotstar.com for 25 million concurrent viewers\n\n[](https://youtu.be/QjvyiyH4rr0)\n\n## Supplementary material\n\n- [Using Inspect element to find APIs](https://youtu.be/_gpBxglbDY4)\n- Learn about the [urllib.parse package](https://docs.python.org/3/library/urllib.parse.html). [Video](https://youtu.be/LosIGgon_KM)\n- Learn about the [os package](https://docs.python.org/3/library/os.html) and [video](https://youtu.be/tJxcKyFMTGo)\n\n# De"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_19", "text": " package](https://docs.python.org/3/library/os.html) and [video](https://youtu.be/tJxcKyFMTGo)\n\n# Deployment\n\n[](https://youtu.be/YSGZjCxhIkk)\n\n## Tools to anonymize data\n\n[](https://youtu.be/N8I-sxmMfqQ)\n\n- [List of Tools](https://aircloak.com/top-5-free-data-anonymization-tools/)\n\n## Libraries to build web applications\n\n[](https://youtu.be/iT5sS1dWMcc)\n\n- [List of frameworks](https://www.datarevenue.com/en-blog/data-dashboarding-streamlit-vs-dash-vs-shiny-vs-voila)\n- [Code - Streamlit](https:/"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_20", "text": "enue.com/en-blog/data-dashboarding-streamlit-vs-dash-vs-shiny-vs-voila)\n- [Code - Streamlit](https://github.com/rohithsrinivaas/streamlit-heroku)\n- [Notebook - Streamlit](https://colab.research.google.com/drive/1Qd2xRdyd6SA8xaimUmlBDyu2FYnTpUar?usp=sharing)\n\n## Services to host web applications\n\n[](https://youtu.be/V5dl7zkKXC0)\n\n- [List and comparison](https://sourceforge.net/software/compare/Glitch-vs-Heroku-vs-Netlify-vs-Vercel/)\n- [Heroku deployment](https://www.heroku.com/home)\n- Docker/Podm"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_21", "text": "ch-vs-Heroku-vs-Netlify-vs-Vercel/)\n- [Heroku deployment](https://www.heroku.com/home)\n- Docker/Podman\n- GitHub actions\n- Glitch.me\n\n# Data Discovery\n\n[](https://youtu.be/3OeMOb7gByE)\n\nBefore we begin the data science journey, you first need the data set. And to get the\ndata set, you need to know where it is. This is what we will be covering in the first module.\n\nHow do you discover data? There are three things that you will learn in this module.\n\n- The first is, what are the different sources o"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_22", "text": "e three things that you will learn in this module.\n\n- The first is, what are the different sources of data sets? Where can you find them?\n- The second is, what are the different kinds of data sets? Structured, unstructured and semi-structured.\n- Third, in each data set, what are the different kinds of values that you will find?\n\nThis will give you a sense of locating the kind of data set that you want, either on the internet\nor within your organization or even within your phones.\n\n## Sources of "}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_23", "text": "want, either on the internet\nor within your organization or even within your phones.\n\n## Sources of Data\n\n[](https://youtu.be/GY5l_5RpVZM)\n\n- [Awesome public datasets](https://github.com/awesomedata/awesome-public-datasets)\n- [Google dataset search](https://datasetsearch.research.google.com/)\n- [Kaggle datasets](https://www.kaggle.com/datasets/)\n- [Data.gov](https://data.gov/) and [Data.gov.in](https://data.gov.in/)\n- [Datameet](https://datameet.org/)\n\n## Types of datasets\n\n[](https://youtu.be/u"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_24", "text": "tps://data.gov.in/)\n- [Datameet](https://datameet.org/)\n\n## Types of datasets\n\n[](https://youtu.be/u8PIxqsi1kk)\n\n- Structured data has a schema: Databases, Spreadsheets, Forms, Shapefiles\n- Semi-structured data has a flexible schema: JSON, HTML, Email\n- Unstructured data has no schema: Text, Images, Audio, Video\n- [DBF opener](https://www.dbfopener.com/)\n- [MapShaper lets you view Shapefiles](https://mapshaper.org/)\n\n## Types of values\n\n[](https://youtu.be/HlsqT0r9wAM)\n\n- Categorical values may "}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_25", "text": "s://mapshaper.org/)\n\n## Types of values\n\n[](https://youtu.be/HlsqT0r9wAM)\n\n- Categorical values may be:\n  - Boolean: True or False\n  - Unordered: No order, like colors\n  - Ordered: Order, like ratings\n  - Cyclical: Like days of the week\n  - Unstructured: Like names, images\n- Numerical values may be:\n  - Integer: You can add or subtract\n  - Real: You can multiply or divide\n- Composite values have an internal structure\n  - Temporal: Date, Time\n  - Spatial: Latitude, Longitude, Shapefiles\n  - Struc"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_26", "text": "n internal structure\n  - Temporal: Date, Time\n  - Spatial: Latitude, Longitude, Shapefiles\n  - Structured: JSON, XML with schema\n  - Specialized: IP addresses, URLs, Email addresses, Phone numbers, etc.\n\n## Week Summary\n\n[](https://youtu.be/NNiFxgANu8Y)\n\nBased on what you have learnt in this module, you should be able to do two things: find data and understand what type of data it is.\n\nBoth of these are powerful skills.\n\nThe more data you are able to find, the more analysis that you will be able"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_27", "text": "se are powerful skills.\n\nThe more data you are able to find, the more analysis that you will be able to do that others are unable to.\nTherefore, discovering new sources of data is a competitive advantage and a skill that is well worth building.\n\nThe other, in terms of understanding the type of data, will give you an edge in terms of knowing which data set is easier to work with.\nStructured data is easier to work with because you don't have to do any additional work.\nYou don't have to extract inf"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_28", "text": " easier to work with because you don't have to do any additional work.\nYou don't have to extract information from it.\nNumerical values are easier to work with than, let's say, categorical or composite because there's less effot to extract the structure.\nSo you'll be able to compare two data sets and say that one gets more results by spending in less time and effort.\n\n## Sample questions\n\n- Find the UCI machine learning dataset on Wine Quality. (It has 4,898 rows.) What is the highest pH value of"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_29", "text": "e UCI machine learning dataset on Wine Quality. (It has 4,898 rows.) What is the highest pH value of the red wines? (ANS: 4.01)\n- What's the official data portal of Russia? (ANS: <https://data.gov.ru/?language=en>)\n- Are research papers structured, semi-structured or unstructured? (ANS: Semi-structured. They have author names, abstracts, keywords, etc. but most content is free-form.)\n- Are book titles categorical or composite? (ANS: Categorical. They don't have an underlying structure.)\n\n## Opti"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_30", "text": "tles categorical or composite? (ANS: Categorical. They don't have an underlying structure.)\n\n## Optional: Tools used in the industry\n\nKathir Mani from QueLit and Anand S from Gramener discuss the tools and technologies used in the industry. (9 min)\n\n[](https://youtu.be/DH0Q4LiSgkE)\n\n## Scraping: Reference and helpful content\n\n- For those who don't know HTML, CSS, or JavaScript, this [FreeCodeCamp Responsive Web Design course](https://www.freecodecamp.org/learn/2022/responsive-web-design) is a go"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_31", "text": "Responsive Web Design course](https://www.freecodecamp.org/learn/2022/responsive-web-design) is a good starting point.\n- For those who don't know Python, this [Learn Python video](https://youtu.be/rfscVS0vtbw) and this [Python for Beginners](https://youtube.com/playlist?list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3&feature=shared) playlist is a good starting point.\n- Few More Scraping tools\n  1. [About Scrapy & Chrome Web Scraper Extension](https://docs.google.com/document/d/1QZPJIfg98-Gox7_tqzrqPy9Pi"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_32", "text": "Scrapy & Chrome Web Scraper Extension](https://docs.google.com/document/d/1QZPJIfg98-Gox7_tqzrqPy9PigYfRfgpsYgTHcBAYFM/view) [(Video)](https://youtu.be/s4jtkzHhLzY)\n  2. Chrome Web Scraper Extension [(Video)](https://youtu.be/aClnnoQK9G0)\n\n## Scraping: Sample questions\n\n- Read the [Hacker News API docs](https://github.com/HackerNews/API). Now, when was the post with ID `2921983` posted? Specifically, What is the timestamp? (ANS: 1314211127)\n- Using [PokeAPI](https://pokeapi.co/), in the `sun-moo"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_33", "text": "ly, What is the timestamp? (ANS: 1314211127)\n- Using [PokeAPI](https://pokeapi.co/), in the `sun-moon` version, find out how many moves `ivysaur` has that `bulbasaur` does not. (ANS: 1: leech-seed).\n- How many images (`` tags) does this [White House page snapshot](https://web.archive.org/web/20110101070603id_/https://www.whitehouse.gov/) have inside a link (`<a>` element)? (ANS: 15)\n- What is the westernmost point (highest longitude) on the bounding box of `Baghdad, Iraq`, according to the Nomin"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_34", "text": "westernmost point (highest longitude) on the bounding box of `Baghdad, Iraq`, according to the Nominatim API? If there are multiple matches, get the highest longitude across all bounding boxes. (ANS: 44.969\u00b0E)\n- What CSS selector would you use to extract the last list element with a class `highlight` from an unordered list? (ANS: `ul li.highlight:last-child`)\n\n## Smart Narratives with Power BI\n\n[](https://youtu.be/eHmvCNhZiWg)\n\n## Apache Airflow\n\n1. [Overview of Apache Airflow](https://airflow.a"}
{"source": "Course_content_jan_2025/archive.md", "chunk_id": "archive.md_part_35", "text": "(https://youtu.be/eHmvCNhZiWg)\n\n## Apache Airflow\n\n1. [Overview of Apache Airflow](https://airflow.apache.org/docs/apache-airflow/stable/)\n2. [Airflow Playlist](https://www.youtube.com/playlist?list=PL5_c35Deekdm6N1OBHdQm7JZECTdm7zl-)"}
{"source": "Course_content_jan_2025/data-preparation-in-the-editor.md", "chunk_id": "data-preparation-in-the-editor.md_part_1", "text": "## Data Preparation in the Editor\n\n[](https://youtu.be/99lYu43L9uM)\n\nYou'll learn how to use a text editor [Visual Studio Code](https://code.visualstudio.com/) to process and clean data, covering:\n\n- **Format** JSON files\n- **Find all** and multiple cursors to extract specific fields\n- **Sort** lines\n- **Delete duplicate** lines\n- **Replace** text with multiple cursors\n\nHere are the links used in the video:\n\n- [City-wise product sales JSON](https://drive.google.com/file/d/1VEnKChf4i04iKsQfw0MwoJ"}
{"source": "Course_content_jan_2025/data-preparation-in-the-editor.md", "chunk_id": "data-preparation-in-the-editor.md_part_2", "text": "the video:\n\n- [City-wise product sales JSON](https://drive.google.com/file/d/1VEnKChf4i04iKsQfw0MwoJlfkOBGQ65B/view?usp=drive_link)"}
{"source": "Course_content_jan_2025/data-analysis.md", "chunk_id": "data-analysis.md_part_1", "text": "# Data analysis\n\n[<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" class=\"bi bi-broadcast-pin\" viewBox=\"0 0 16 16\">\n<path d=\"M3.05 3.05a7 7 0 0 0 0 9.9.5.5 0 0 1-.707.707 8 8 0 0 1 0-11.314.5.5 0 0 1 .707.707m2.122 2.122a4 4 0 0 0 0 5.656.5.5 0 1 1-.708.708 5 5 0 0 1 0-7.072.5.5 0 0 1 .708.708m5.656-.708a.5.5 0 0 1 .708 0 5 5 0 0 1 0 7.072.5.5 0 1 1-.708-.708 4 4 0 0 0 0-5.656.5.5 0 0 1 0-.708m2.122-2.12a.5.5 0 0 1 .707 0 8 8 0 0 1 0 11.313.5.5 0 0 1-.707-.707 7"}
{"source": "Course_content_jan_2025/data-analysis.md", "chunk_id": "data-analysis.md_part_2", "text": "0 0 0 0-5.656.5.5 0 0 1 0-.708m2.122-2.12a.5.5 0 0 1 .707 0 8 8 0 0 1 0 11.313.5.5 0 0 1-.707-.707 7 7 0 0 0 0-9.9.5.5 0 0 1 0-.707zM6 8a2 2 0 1 1 2.5 1.937V15.5a.5.5 0 0 1-1 0V9.937A2 2 0 0 1 6 8\"/>\n</svg> <span style=\"font-size: 24px; margin: 0 6px; vertical-align: bottom\">Data Analysis: Introduction Podcast</span>](https://drive.google.com/file/d/1isjtxFa43CLIFlLpo8mwwQfBog9VlXYl/view) by [NotebookLM](https://notebooklm.google.com/)\n\nOnce you've prepared the data, your next task is to analyze"}
{"source": "Course_content_jan_2025/data-analysis.md", "chunk_id": "data-analysis.md_part_3", "text": "bookLM](https://notebooklm.google.com/)\n\nOnce you've prepared the data, your next task is to analyze it to get insights that are not immediately obvious.\n\nIn this module, you'll learn:\n\n- **Statistical analysis**: Calculate correlations, regressions, forecasts, and outliers using **spreadsheets**\n- **Data summarization**: Aggregate and pivot data using **Python** and **databases**.\n- **Geo-data Collection & Processing**: Gather and process geospatial data using tools like Python (GeoPandas) and "}
{"source": "Course_content_jan_2025/data-analysis.md", "chunk_id": "data-analysis.md_part_4", "text": "llection & Processing**: Gather and process geospatial data using tools like Python (GeoPandas) and QGIS.\n- **Geo-visualization**: Create and visualize geospatial data on maps using Excel, QGIS, and Python libraries such as Folium.\n- **Network & Proximity Analysis**: Analyze geospatial relationships and perform network analysis to understand data distribution and clustering.\n- **Storytelling & Decision Making**: Develop narratives and make informed decisions based on geospatial data insights.\n\n["}
{"source": "Course_content_jan_2025/data-analysis.md", "chunk_id": "data-analysis.md_part_5", "text": "ision Making**: Develop narratives and make informed decisions based on geospatial data insights.\n\n[](https://youtu.be/CRSljunxjnk)"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_1", "text": "## Multimodal Embeddings\n\nMultimodal embeddings map **text** and **images** into the **same** vector space, enabling direct comparison between, say, a caption\u2009\u2014 \u201cA cute cat\u201d\u2009\u2014 and an image of that cat. This unified representation powers real-world applications like:\n\n- **Cross-modal search** (e.g. \u201cfind images of a sunset\u201d via text queries)\n- **Content recommendation** (suggesting visually similar products to text descriptions)\n- **Clustering & retrieval** (grouping documents and their associate"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_2", "text": " products to text descriptions)\n- **Clustering & retrieval** (grouping documents and their associated graphics)\n- **Anomaly detection** (spotting unusual image\u2013text pairings)\n\nBy reducing different data types to a common numeric form, you unlock richer search, enhanced recommendations, and tighter integration of visual and textual data.\n\n## Get API keys\n\nBelow are the steps to grab a free API key for each provider.\n\n### Nomic Atlas\n\n1. **Sign up** at the Nomic Atlas homepage:\n   \ud83d\udc49 [https://atlas"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_3", "text": "for each provider.\n\n### Nomic Atlas\n\n1. **Sign up** at the Nomic Atlas homepage:\n   \ud83d\udc49 [https://atlas.nomic.ai/](https://atlas.nomic.ai/) ([Atlas | Nomic Atlas Documentation][1])\n2. Once logged in, open the **Dashboard** and navigate to **Settings \u2192 API Keys**.\n3. Click **Create API Key**, name it, and copy the generated key.\n\nSet in your shell:\n\n```bash\nexport NOMIC_API_KEY=\"your-nomic-api-key\"\n```\n\n### Jina AI\n\n1. **Visit** the Jina AI Embeddings page:\n   \ud83d\udc49 [https://jina.ai/embeddings/](https:/"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_4", "text": "`\n\n### Jina AI\n\n1. **Visit** the Jina AI Embeddings page:\n   \ud83d\udc49 [https://jina.ai/embeddings/](https://jina.ai/embeddings/) ([Jina AI][2])\n2. Click **Get Started** (no credit card needed) and register for a free account. Every new key comes with **1 million free tokens**.\n3. In the dashboard, go to **API Key & Billing** and copy your key.\n\nSet in your shell:\n\n```bash\nexport JINA_API_KEY=\"your-jina-api-key\"\n```\n\n### Google Vertex AI\n\n1. **Sign up** for Google Cloud\u2019s free tier (90 days, \\$300 credi"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_5", "text": "pi-key\"\n```\n\n### Google Vertex AI\n\n1. **Sign up** for Google Cloud\u2019s free tier (90 days, \\$300 credit):\n   \ud83d\udc49 [https://cloud.google.com/free](https://cloud.google.com/free) ([Google Cloud][3])\n2. In the Cloud Console, open **APIs & Services \u2192 Credentials**:\n   \ud83d\udc49 [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials) ([Google Cloud][4])\n3. Click **Create credentials \u2192 API key**, then copy the key.\n\nSet in your shell:\n\n```bash\nexport GOOGLE_API_KEY=\"y"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_6", "text": "te credentials \u2192 API key**, then copy the key.\n\nSet in your shell:\n\n```bash\nexport GOOGLE_API_KEY=\"your-google-api-key\"\nexport PROJECT_ID=\"your-gcp-project-id\"\n```\n\n## Example Requests\n\nBelow are fully-workable snippets that:\n\n- **Embed two texts** (\u201cA cute cat\u201d, \u201cA cardboard box\u201d)\n- **Embed two images** (`cat.jpg`, `box.png`)\n- **Send** them to the respective API\n\nReplace variables (`$NOMIC_API_KEY`, `$JINA_API_KEY`, `$GOOGLE_API_KEY`, `$PROJECT_ID`) before running.\n\n### 1. Nomic Atlas\n\nText Em"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_7", "text": "EY`, `$JINA_API_KEY`, `$GOOGLE_API_KEY`, `$PROJECT_ID`) before running.\n\n### 1. Nomic Atlas\n\nText Embeddings\n\n```bash\ncurl -X POST \"https://api-atlas.nomic.ai/v1/embedding/text\" \\\n  -H \"Authorization: Bearer $NOMIC_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n        \"model\": \"nomic-embed-text-v1.5\",\n        \"task_type\": \"search_document\",\n        \"texts\": [\"A cute cat\", \"A cardboard box\"]\n      }'\n```\n\nImage Embeddings\n\n```bash\ncurl -X POST \"https://api-atlas.nomic.ai/v1/embedding"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_8", "text": " box\"]\n      }'\n```\n\nImage Embeddings\n\n```bash\ncurl -X POST \"https://api-atlas.nomic.ai/v1/embedding/image\" \\\n  -H \"Authorization: Bearer $NOMIC_API_KEY\" \\\n  -F \"model=nomic-embed-vision-v1.5\" \\\n  -F \"images=@cat.jpg\" \\\n  -F \"images=@box.png\"\n```\n\n### 2. Jina AI\n\nJina\u2019s unified `/v1/embeddings` endpoint accepts text strings **and** base64-encoded image bytes in one batch. ([Jina AI][2])\n\n```bash\ncurl -X POST \"https://api.jina.ai/v1/embeddings\" \\\n  -H \"Authorization: Bearer $JINA_API_KEY\" \\\n  -H "}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_9", "text": "url -X POST \"https://api.jina.ai/v1/embeddings\" \\\n  -H \"Authorization: Bearer $JINA_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\n        \\\"model\\\": \\\"jina-clip-v2\\\",\n        \\\"input\\\": [\n          {\\\"text\\\":\\\"A cute cat\\\"},\n          {\\\"text\\\":\\\"A cardboard box\\\"},,\n          {\\\"image\\\":\\\"$(base64 -w 0 cat.jpg)\\\"},\n          {\\\"image\\\":\\\"$(base64 -w 0 box.png)\\\"}\n        ]\n      }\"\n```\n\n### 3. Google Vertex AI Multimodal Embeddings\n\nVertex AI\u2019s multimodal model (`multimodalembeddin"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_10", "text": "``\n\n### 3. Google Vertex AI Multimodal Embeddings\n\nVertex AI\u2019s multimodal model (`multimodalembedding@001`) takes JSON instances combining text and **base64** image data. ([Google Cloud][5])\n\n```bash\ncurl -X POST \\\n  -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\n  -H \"Content-Type: application/json\" \\\n  \"https://us-central1-aiplatform.googleapis.com/v1/projects/$PROJECT_ID/locations/us-central1/publishers/google/models/multimodalembedding@001:predict?key=$GOOGLE_API_KEY\" \\\n  -d "}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_11", "text": "ns/us-central1/publishers/google/models/multimodalembedding@001:predict?key=$GOOGLE_API_KEY\" \\\n  -d \"{\n        \\\"instances\\\": [\n          {\n            \\\"text\\\": \\\"A cute cat\\\",\n            \\\"image\\\": {\\\"bytesBase64Encoded\\\": \\\"$(base64 -w 0 cat.jpg)\\\"}\n          },\n          {\n            \\\"text\\\": \\\"A cardboard box\\\",\n            \\\"image\\\": {\\\"bytesBase64Encoded\\\": \\\"$(base64 -w 0 box.png)\\\"}\n          }\n        ]\n      }\"\n```\n\nWith these steps, you\u2019re all set to explore and experiment with mu"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_12", "text": "        }\n        ]\n      }\"\n```\n\nWith these steps, you\u2019re all set to explore and experiment with multimodal embeddings across text + image data\u2014unifying your applications\u2019 visual and linguistic understanding.\n\n[1]: https://docs.nomic.ai/atlas/quick-start \"Quickstart | Nomic Atlas Documentation\"\n[2]: https://jina.ai/embeddings/ \"Embedding API - Jina AI\"\n[3]: https://cloud.google.com/free \"Free Trial and Free Tier Services and Products - Google Cloud\"\n[4]: https://cloud.google.com/docs/authentica"}
{"source": "Course_content_jan_2025/multimodal-embeddings.md", "chunk_id": "multimodal-embeddings.md_part_13", "text": "al and Free Tier Services and Products - Google Cloud\"\n[4]: https://cloud.google.com/docs/authentication/api-keys \"Manage API keys | Authentication - Google Cloud\"\n[5]: https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/multimodal-embeddings-api \"Multimodal embeddings API | Generative AI on Vertex AI\""}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_1", "text": "# Live Session: 31 Jan 2025\n\n[](https://youtu.be/sdg4N-H4BR0)\n\n**Q1: In today's session, what will be covered?**\n\n**A1:** We will be discussing the function calling part of OpenAI. We will create a program that takes user prompts in English, identifies which function to call based on the prompt, and then calls that function.\n\n**Q2: What is the first step in the process?**\n\n**A2:** First, we import the `requests` library. Then, we'll get the headers and URL for the request, and finally, we'll cre"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_2", "text": " the `requests` library. Then, we'll get the headers and URL for the request, and finally, we'll create a JSON body for the request.\n\n**Q3: What is the goal of the program?**\n\n**A3:** The program aims to automate the process of ordering something from an online store. It will take a user's order in plain English, understand the request, and place the order. It will also include a feature for updating existing orders.\n\n**Q4: How will the program understand the user's prompt?**\n\n**A4:** The progra"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_3", "text": "ing existing orders.\n\n**Q4: How will the program understand the user's prompt?**\n\n**A4:** The program will send the user's prompt to OpenAI. OpenAI will use its function calling capabilities to identify the appropriate function to call from a predefined set of functions within your application, and return the function name and parameters in a JSON format.\n\n**Q5: What are the predefined functions?**\n\n**A5:** The predefined functions are a set of tools your application provides. Examples include `"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_4", "text": "*\n\n**A5:** The predefined functions are a set of tools your application provides. Examples include `get_weather_info` (which takes a location as a parameter) and `best_hotels` (which also takes a location). OpenAI will determine which function to call based on the user's prompt.\n\n**Q6: How does OpenAI determine which function to call?**\n\n**A6:** OpenAI analyzes the user's prompt and, based on its understanding of the context and semantics, selects the appropriate function from the predefined set"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_5", "text": "understanding of the context and semantics, selects the appropriate function from the predefined set. The response from OpenAI will include the function name and its required parameters in JSON format.\n\n**Q7: How does the program use the OpenAI response?**\n\n**A7:** Your application receives the JSON response from OpenAI, extracts the function name and parameters, and then executes the function with those parameters. The result is then sent back to the user. OpenAI acts as a proxy for a human age"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_6", "text": "h those parameters. The result is then sent back to the user. OpenAI acts as a proxy for a human agent, handling natural language input and translating it into structured data for your application.\n\n**Q8: Is the `order` function dependent on the above-written cell?**\n\n**A8:** Yes, the `order` function uses variables defined in previous cells.\n\n**Q9: How is the JSON response handled?**\n\n**A9:** The JSON response from OpenAI is structured data that your application can easily process. It contains "}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_7", "text": " JSON response from OpenAI is structured data that your application can easily process. It contains the function name and the parameters needed to execute that function.\n\n**Q10: How can we handle cases where the user doesn't provide complete information?**\n\n**A10:** You can instruct OpenAI to request missing information. The handling of incomplete requests depends on your application's design. OpenAI itself might request the missing data.\n\n**Q11: How can we integrate a voice model?**\n\n**A11:** Y"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_8", "text": "nAI itself might request the missing data.\n\n**Q11: How can we integrate a voice model?**\n\n**A11:** You can integrate a speech-to-text model (like Whisper from OpenAI) to convert voice commands into text prompts for your application.\n\n**Q12: How do we package the Colab notebook into a full-fledged application?**\n\n**A12:** We'll demonstrate this in a future session by creating another function and packaging the entire application into a Docker image.\n\n**Q13: What is the role of prompt engineering "}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_9", "text": "ackaging the entire application into a Docker image.\n\n**Q13: What is the role of prompt engineering in this process?**\n\n**A13:** Prompt engineering is less about a specific science and more about understanding how the system works to write effective prompts that yield the desired results. The course will cover this in more detail.\n\n**Q14: What if the `order` function doesn't work as expected?**\n\n**A14:** The instructor suggests checking the code, ensuring the correct parameters are passed, and h"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_10", "text": "*A14:** The instructor suggests checking the code, ensuring the correct parameters are passed, and handling potential errors gracefully. The instructor also suggests using `json.loads` to convert strings to JSON objects.\n\n**Q15: What is the duration of the Review of Exercises (ROE)?**\n\n**A15:** The ROE duration varies from term to term, ranging from 45 minutes to 1.5 hours. It's recommended to save your work frequently.\n\n**Q16: What if the user's prompt is missing information?**\n\n**A16:** The in"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_11", "text": "e your work frequently.\n\n**Q16: What if the user's prompt is missing information?**\n\n**A16:** The instructor suggests adding a system prompt to OpenAI to explicitly request missing parameters.\n\n**Q17: How do we handle the `UUID` generation to ensure uniqueness?**\n\n**A17:** The `UUID` library generally provides unique identifiers. If you need to reduce the chance of collisions, you can increase the size of the UUID. More information is available in the UUID documentation.\n\n**Q18: How do we handle"}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_12", "text": " size of the UUID. More information is available in the UUID documentation.\n\n**Q18: How do we handle the file path in a deployed application?**\n\n**A18:** Instead of using absolute paths (`os.path`), use relative paths to ensure the application works correctly in different environments. For deployed applications, you would typically use a `.env` file to store sensitive information like API keys.\n\n**Q19: What is the overall approach to building this application?**\n\n**A19:** The approach is to use "}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_13", "text": "*Q19: What is the overall approach to building this application?**\n\n**A19:** The approach is to use OpenAI's function calling capabilities to translate natural language prompts into structured data that your application can process. This allows for a more natural user experience without the need for a complex UI. The instructor emphasizes the importance of understanding how to parse JSON responses and handle errors."}
{"source": "Course_content_jan_2025/live-session-2025-01-31.md", "chunk_id": "live-session-2025-01-31.md_part_14", "text": " and handle errors."}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_1", "text": "# Live Session: 30 Jan 2025\n\n[](https://youtu.be/6VfrL5b8lLc)\n\n**Q1: My screen is visible?**\n\n**A1:** Yes, your screen is visible.\n\n**Q2: I posted on Discourse and emailed you about a problem deploying a Flask application on Vercel. The Flask module is not getting downloaded. Can you show the vercel.json configuration file?**\n\n**A2:** The error likely stems from your `requirements.txt` file. Did you create a new virtual environment for this project, or did you install Flask on your global enviro"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_2", "text": "ou create a new virtual environment for this project, or did you install Flask on your global environment? When deploying Flask applications on Vercel, you need to keep a few things in mind. I'll show you how to create a `requirements.txt` file without manually typing it.\n\n**Q3: I added a requirements.txt file with Flask and Flask-Cors, but Kartal sir said I could use the example in the question. Should I remove the requirements.txt file and rewrite the code? The code is working, but I'm getting"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_3", "text": "Should I remove the requirements.txt file and rewrite the code? The code is working, but I'm getting a null output instead of a list of integers as requested.**\n\n**A3:** Let's see your screen. The Flask application might be running fine as intended, but you might not be seeing the output. Sharing your screen would help me understand what's happening. You are getting a null output because you are not using a virtual environment. Let's create one.\n\n**Q4: When writing tools needed in requirements.t"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_4", "text": "ot using a virtual environment. Let's create one.\n\n**Q4: When writing tools needed in requirements.txt, do we need to specify the version?**\n\n**A4:** Yes, you have to specify the version. But you don't have to manually type the `requirements.txt` file. You can use a single-line command in Python: `pip freeze > requirements.txt`. This will create the file with all the libraries and their versions in your virtual environment (or global environment if you don't have a virtual environment).\n\n**Q5: I"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_5", "text": "n your virtual environment (or global environment if you don't have a virtual environment).\n\n**Q5: I tried to create a virtual environment, but it showed an error. I'm using Vercel CLI.**\n\n**A5:** Let's try `python -m venv venv` in PowerShell. If you are using a virtual environment, it will only return the libraries specifically present in that environment. Since you are currently using a global environment, it returns every library.\n\n**Q6: Have you tried the optional exercise I gave you for the"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_6", "text": "nvironment, it returns every library.\n\n**Q6: Have you tried the optional exercise I gave you for the Flask API (Zodiac sign one)?**\n\n**A6:** No one has tried it yet. The assignment was to ask for a person's month of birth and return their zodiac sign.\n\n**Q7: The main problem is that I'm spending almost 2-3 days on the TDS assignments. The GAs have 10-18 questions on average.**\n\n**A7:** I understand. The GAs are time-consuming. If you get some time and are in the mood, you can work on the optiona"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_7", "text": "d. The GAs are time-consuming. If you get some time and are in the mood, you can work on the optional mini-project. You can have many more types of ideas and execute them using Flask API.\n\n**Q8: Currently, I'm not in the directory that contains the Vercel file (vercel.json).**\n\n**A8:** I'm just demonstrating how to create the `requirements.txt` file.\n\n**Q9: If I'm running a virtual environment with `uv`, will it only copy out the tools that are in the virtual environment?**\n\n**A9:** Exactly. Tha"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_8", "text": "h `uv`, will it only copy out the tools that are in the virtual environment?**\n\n**A9:** Exactly. That's a downside of `uv`. When using `uv`, you are not installing those libraries. If they are not installed, they won't be present in your virtual environment, and therefore won't be in your `requirements.txt` file. For minor projects that you don't need to deploy, `uv` is fine. Otherwise, create a virtual environment and install the libraries there.\n\n**Q10: Now it's showing nothing. I don't know w"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_9", "text": "irtual environment and install the libraries there.\n\n**Q10: Now it's showing nothing. I don't know why.**\n\n**A10:** Your server is not running. Run `vercel deploy --prod` again. I'm not a big fan of Vercel CLI; I usually push to GitHub and then establish a connection between Vercel and GitHub. Let's open the dev tools (right-click, inspect), go to the console, and reload. Show me your code.\n\n**Q11: I'm using httpx.**\n\n**A11:** Yesterday, I told you that you can use the example file from the ques"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_10", "text": ": I'm using httpx.**\n\n**A11:** Yesterday, I told you that you can use the example file from the question. That's why you rewrote the code. Otherwise, you would have created the `requirements.txt` file and deployed both. This was working yesterday; now it's showing blank. Can you show me the code?\n\n**Q12: It was working perfectly yesterday. Now it's showing blank. An error page is showing. Sir told me to add `/api` to the URL, and it would show some data. When I entered that link in the assignmen"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_11", "text": " me to add `/api` to the URL, and it would show some data. When I entered that link in the assignment, it gave me a null list.**\n\n**A12:** That's what happens when nothing is showing. Can you scroll down? You're using CORS. You've used a lot of complexity; you've made it a lot more complex. You took help from ChatGPT. That explains the comments. It's not directing you somewhere. The JSON file is not present in the API folder. Let's go to line 5 of your code. Add `../` before `q` to include the p"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_12", "text": "ot present in the API folder. Let's go to line 5 of your code. Add `../` before `q` to include the parent directory. Save and redeploy.\n\n**Q13: Should I remove the `.vercel` folder and redeploy?**\n\n**A13:** No, that won't work. Vercel CLI created that folder; it contains build instructions.\n\n**Q14: Are the vercel.json and everything inside the API file?**\n\n**A14:** No, they are in the `vercel-python/api` directory.\n\n**Q15: I don't know how to use `class` as a variable name in question 9.**\n\n**A1"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_13", "text": "on/api` directory.\n\n**Q15: I don't know how to use `class` as a variable name in question 9.**\n\n**A15:** `class` is a keyword in Python. You can't use it as a variable name. I'll explain how to handle this. You need a different variable name. I used an alias. I'll explain what that means.\n\n**Q16: When passing multiple parameters with the same name, how do I handle it?**\n\n**A16:** You need to use lists. Import `List` from the `typing` library. I got this from ChatGPT. Always learn from ChatGPT, b"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_14", "text": "ists. Import `List` from the `typing` library. I got this from ChatGPT. Always learn from ChatGPT, but also learn from the process. The query will take all the strings and put them into one list. The default value is used if no parameter is passed. An alias is another name for a variable. The variable name is `className`, but we can use the `class` parameter using this alias.\n\n**Q17: My code was working correctly except for the name. I don't know how to write it.**\n\n**A17:** You are using `httpx"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_15", "text": "orking correctly except for the name. I don't know how to write it.**\n\n**A17:** You are using `httpx`. You're also using `index.py`. This is not Flask-based; it's more like an HTTP server.\n\n**Q18: I'll try to do it again according to the requirements and add the requirements.txt file. After that, I'll share my screen.**\n\n**A18:** Okay, you can do that. The Flask-based code is not needed here.\n\n**Q19: I'm confused because it was working perfectly (or at least working) yesterday.**\n\n**A19:** Can y"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_16", "text": "19: I'm confused because it was working perfectly (or at least working) yesterday.**\n\n**A19:** Can you open Vercel again? Yesterday, was this particular box showing \"Not Found\"? When you added `/api` to the URL, it showed a dictionary. It was returning a JSON object. Show me your folder structure.\n\n**Q20: I created the directory, then another folder `api`, and then `index.py` inside `api`.**\n\n**A20:** Should I remove the `.vercel` folder and redeploy? No, that won't work. Vercel CLI created that"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_17", "text": "0:** Should I remove the `.vercel` folder and redeploy? No, that won't work. Vercel CLI created that folder; it contains build instructions.\n\n**Q21: Show your folder structure.**\n\n**A21:** I created the directory, then another folder `api`, and then `index.py` inside `api`.\n\n**Q22: If I use `uv`, will it only copy the tools in the virtual environment?**\n\n**A22:** Yes.\n\n**Q23: What is more convenient? Directly integrating GitHub and creating files there, saving space on my local system?**\n\n**A23:"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_18", "text": "nt? Directly integrating GitHub and creating files there, saving space on my local system?**\n\n**A23:** I don't think that will save space on your local system because you have to create files locally before pushing them to Git.\n\n**Q24: Can we use the query function?**\n\n**A24:** Yes, absolutely. It's working like this. I'll comment it out, duplicate it, and comment it out once. Then we can run this. The query function is working. We have got the entire row where the city was. We can extract the p"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_19", "text": ". The query function is working. We have got the entire row where the city was. We can extract the population using this. It's working perfectly fine. It returned the population of Delhi.\n\n**Q25: Do we need to mention values [square bracket] zero, values zero, if we are mentioning population only?**\n\n**A25:** That's a very good question. If you use this, it will return a series (a Pandas term). It's just a column; it won't give you the exact value. We have to extract the zeroth value. We have to"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_20", "text": "'s just a column; it won't give you the exact value. We have to extract the zeroth value. We have to extract the values. `values` will return this.\n\n**Q26: Question 9: I don't know how to use `class` as a variable name.**\n\n**A26:** `class` is a keyword. You can't use it as a variable name. Create a different variable name. I used an alias.\n\n**Q27: Question 6: Can you take the last of the class now, or should I wait?**\n\n**A27:** Let's arrange a separate meeting to discuss this. I'll also look int"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_21", "text": ", or should I wait?**\n\n**A27:** Let's arrange a separate meeting to discuss this. I'll also look into your file. You can share it on Discourse or email it to me.\n\n**Q28: Can we use `httpie` instead of `requests`?**\n\n**A28:** Yes, you can change it to `httpx`. `httpie` is a command-line tool, not a Python module. I'm not sure about `httpie`.\n\n**Q29: Can we get the names of the words and their embeddings separately in the JSON?**\n\n**A29:** No, it won't get you the name of the embedding. It will st"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_22", "text": "dings separately in the JSON?**\n\n**A29:** No, it won't get you the name of the embedding. It will store embeddings for each word. You can pass three different values. You can calculate three embeddings. Then you can compute the cosine similarity between them. The first index would get the embedding for bicycle, the second for cycle, and the third for `biycle`.\n\n**Q30: Can we get a 3x1,1056 dimensional array?**\n\n**A30:** You won't get it directly, but you can store it in whatever format you want."}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_23", "text": "onal array?**\n\n**A30:** You won't get it directly, but you can store it in whatever format you want. You can store it in an array. I don't know how to convert JSON to an array.\n\n**Q31: One more thing about embeddings. Can we go back to the writer pad?**\n\n**A31:** Sure. Let's say I'm using a certain model for creating embeddings. Let's say that model contains a billion words. It will check the similarity of a word (like \"kitten\") with all those billion words. It will check the rate of similarity "}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_24", "text": "larity of a word (like \"kitten\") with all those billion words. It will check the rate of similarity between this particular word and that word. These models vary in the number of words they carry. A small model has about a billion; a medium-sized model has around 50 billion; a large model has several more. These numbers might be a bit wrong, but that's the distinction. The larger the model, the better the embeddings. Here, we have 1,056. That means it's checking the similarity of a word with 1,0"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_25", "text": "tter the embeddings. Here, we have 1,056. That means it's checking the similarity of a word with 1,056 words in its database. That's how embeddings work. For creating embeddings, there's a library in NLP, actually ML, with a module called `word2vec`. It's deployed on Hugging Face.\n\n**Q32: Is Hugging Face part of the TDS course?**\n\n**A32:** I think it's been removed. It would be too heavy for TDS.\n\n**Q33: Can we create LLM applications on Google Colab?**\n\n**A33:** Not exactly, but we can make API"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_26", "text": "\n**Q33: Can we create LLM applications on Google Colab?**\n\n**A33:** Not exactly, but we can make API calls and get embeddings for words. For example, let's say we have the word \"Anand\".\n\n**Q34: Sorry for interrupting, but is Hugging Face part of the TDS course?**\n\n**A34:** I think it's been removed, probably because it's too heavy for the course.\n\n**Q35: My next question is why are these vectors (embeddings) so long? It's just a word. For a paragraph, it must be thousands of variables.**\n\n**A35:"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_27", "text": "embeddings) so long? It's just a word. For a paragraph, it must be thousands of variables.**\n\n**A35:** It won't be. We're getting embeddings from OpenAI. We'll always get embeddings of the same length. It uses 1,536 numbers to represent a word. These are different features of the word. It might involve the shape of a bicycle. Does it involve SVD? It must be doing SVD.\n\n**Q36: Can we use wrongly spelled words and get embeddings for them?**\n\n**A36:** You can try. It should work. Anything similar t"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_28", "text": "elled words and get embeddings for them?**\n\n**A36:** You can try. It should work. Anything similar to \"bicycle\" should work.\n\n**Q37: My last question is how can we pass multiple words at the same time and get their embeddings separately?**\n\n**A37:** I think this is the way you can pass multiple words. This should get us two different vectors. It's a list. The first embedding is for bicycle, and the second is for cycle.\n\n**Q38: Can we get the names of the words and their embeddings separately in "}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_29", "text": "e second is for cycle.\n\n**Q38: Can we get the names of the words and their embeddings separately in the JSON?**\n\n**A38:** No, it won't get you the name of the embedding. It will store embeddings for each word. You can pass three different values. You can calculate three embeddings. Then you can compute the cosine similarity between them. The first index would get the embedding for bicycle, the second for cycle, and the third for `biycle`.\n\n**Q39: Can we have a session on Hugging Face?**\n\n**A39:*"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_30", "text": "ond for cycle, and the third for `biycle`.\n\n**Q39: Can we have a session on Hugging Face?**\n\n**A39:** We can have a session during the last week of the course. The last week should be a bit lighter. Hugging Face is totally open source, so it would be very helpful during the NLP part of the course. But Hugging Face won't be of much context when it comes to TDS. It would be for learning only.\n\n**Q40: My first doubt is, can we use `httpie` instead of `requests`?**\n\n**A40:** Yes, you can change it t"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_31", "text": ": My first doubt is, can we use `httpie` instead of `requests`?**\n\n**A40:** Yes, you can change it to `httpx`. I'm not sure about `httpie`. It's a command-line tool. I've never used it. I think even if it does, it shouldn't matter much because it's just a different library that allows you to make requests. I wanted to shift to another question. I don't know how to use this particular thing. Maybe it's possible to use it in Python, but I don't know. `requests` is better. If it's complicated, it's"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_32", "text": "it's possible to use it in Python, but I don't know. `requests` is better. If it's complicated, it's not a good tool. At the end, it's also using the `requests` module.\n\n**Q41: My next question is why are the vectors (embeddings) so long?**\n\n**A41:** That's the dimension it uses to represent a word. A higher dimension means better representation, but it requires more storage. You can think of them as a vector space, like a 3D space. Instead of representing a word in 3D, we're representing it in "}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_33", "text": " as a vector space, like a 3D space. Instead of representing a word in 3D, we're representing it in 1,536 dimensions. These are different features of the word. One might represent shape.\n\n**Q42: Does it involve SVD?**\n\n**A42:** I don't know the exact algorithm OpenAI uses to calculate embeddings. You can search on Google or ask ChatGPT. You can also ask ChatGPT for code completion.\n\n**Q43: Question 9: Three different documents. For example, these are three different documents. You can think of t"}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_34", "text": "n 9: Three different documents. For example, these are three different documents. You can think of them as paragraphs or words. The purpose is to figure out which word is related to the query word. One could be cat, one could be dog, and the other could be elephant. The query word could be kitten. You have to figure out which word relates more to it. The way to do it is using embeddings.**\n\n**A43:** You would have to figure out the embedding for each one of them. The way to compare two words is "}
{"source": "Course_content_jan_2025/live-session-2025-01-30.md", "chunk_id": "live-session-2025-01-30.md_part_35", "text": "** You would have to figure out the embedding for each one of them. The way to compare two words is to compute the dot product. Cosine similarity is the dot product divided by the norm of each vector. OpenAI returns normalized vectors. The cosine similarity between \"bicycle\" and \"cycle\" would be higher than between \"bicycle\" and \"apple\". That's how computers store this information."}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_1", "text": "## Function Calling with OpenAI\n\n[Function Calling](https://platform.openai.com/docs/guides/function-calling) allows Large Language Models to convert natural language into structured function calls. This is perfect for building chatbots and AI assistants that need to interact with your backend systems.\n\nOpenAI supports [Function Calling](https://platform.openai.com/docs/guides/function-calling) -- a way for LLMs to suggest what functions to call and how.\n\n[](https://youtu.be/aqdWSYWC_LI)\n\nHere's"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_2", "text": " a way for LLMs to suggest what functions to call and how.\n\n[](https://youtu.be/aqdWSYWC_LI)\n\nHere's a minimal example using Python and OpenAI's function calling that identifies the weather in a given location.\n\n```python\n# /// script\n# requires-python = \">=3.11\"\n# dependencies = [\n#   \"httpx\",\n# ]\n# ///\n\nimport httpx\nimport os\nfrom typing import Dict, Any\n\n\ndef query_gpt(user_input: str, tools: list[Dict[str, Any]]) -> Dict[str, Any]:\n    response = httpx.post(\n        \"https://api.openai.com/v"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_3", "text": "ist[Dict[str, Any]]) -> Dict[str, Any]:\n    response = httpx.post(\n        \"https://api.openai.com/v1/chat/completions\",\n        headers={\n            \"Authorization\": f\"Bearer {os.getenv('OPENAI_API_KEY')}\",\n            \"Content-Type\": \"application/json\",\n        },\n        json={\n            \"model\": \"gpt-4o-mini\",\n            \"messages\": [{\"role\": \"user\", \"content\": user_input}],\n            \"tools\": tools,\n            \"tool_choice\": \"auto\",\n        },\n    )\n    return response.json()[\"choice"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_4", "text": "ools\": tools,\n            \"tool_choice\": \"auto\",\n        },\n    )\n    return response.json()[\"choices\"][0][\"message\"]\n\n\nWEATHER_TOOL = {\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"get_weather\",\n        \"description\": \"Get the current weather for a location\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\"type\": \"string\", \"description\": \"City name or coordinates\"}\n            },\n            \"required\": [\"location\"],\n"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_5", "text": "g\", \"description\": \"City name or coordinates\"}\n            },\n            \"required\": [\"location\"],\n            \"additionalProperties\": False,\n        },\n        \"strict\": True,\n    },\n}\n\nif __name__ == \"__main__\":\n    response = query_gpt(\"What is the weather in San Francisco?\", [WEATHER_TOOL])\n    print([tool_call[\"function\"] for tool_call in response[\"tool_calls\"]])\n```\n\n### How to define functions\n\nThe function definition is a [JSON schema](https://json-schema.org/) with a few OpenAI specifi"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_6", "text": "ions\n\nThe function definition is a [JSON schema](https://json-schema.org/) with a few OpenAI specific properties.\nSee the [Supported schemas](https://platform.openai.com/docs/guides/structured-outputs#supported-schemas).\n\nHere's an example of a function definition for scheduling a meeting:\n\n```python\nMEETING_TOOL = {\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"schedule_meeting\",\n        \"description\": \"Schedule a meeting room for a specific date and time\",\n        \"parameters\": {\n"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_7", "text": "     \"description\": \"Schedule a meeting room for a specific date and time\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"date\": {\n                    \"type\": \"string\",\n                    \"description\": \"Meeting date in YYYY-MM-DD format\"\n                },\n                \"time\": {\n                    \"type\": \"string\",\n                    \"description\": \"Meeting time in HH:MM format\"\n                },\n                \"meeting_room\": {\n     "}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_8", "text": "cription\": \"Meeting time in HH:MM format\"\n                },\n                \"meeting_room\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of the meeting room\"\n                }\n            },\n            \"required\": [\"date\", \"time\", \"meeting_room\"],\n            \"additionalProperties\": False\n        },\n        \"strict\": True\n    }\n}\n```\n\n### How to define multiple functions\n\nYou can define multiple functions by passing a list of function definitions to the `too"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_9", "text": "e functions\n\nYou can define multiple functions by passing a list of function definitions to the `tools` parameter.\n\nHere's an example of a list of function definitions for handling employee expenses and calculating performance bonuses:\n\n```python\ntools = [\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"get_expense_balance\",\n            \"description\": \"Get expense balance for an employee\",\n            \"parameters\": {\n                \"type\": \"object\",\n                "}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_10", "text": "nce for an employee\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"employee_id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Employee ID number\"\n                    }\n                },\n                \"required\": [\"employee_id\"],\n                \"additionalProperties\": False\n            },\n            \"strict\": True\n        }\n    },\n    {\n        \"type\": \"function\",\n        \"function\":"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_11", "text": "},\n            \"strict\": True\n        }\n    },\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"calculate_performance_bonus\",\n            \"description\": \"Calculate yearly performance bonus for an employee\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"employee_id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Employee ID number\"\n                    },\n        "}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_12", "text": "nteger\",\n                        \"description\": \"Employee ID number\"\n                    },\n                    \"current_year\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Year to calculate bonus for\"\n                    }\n                },\n                \"required\": [\"employee_id\", \"current_year\"],\n                \"additionalProperties\": False\n            },\n            \"strict\": True\n        }\n    }\n]\n```\n\nBest Practices:\n\n1. **Use Strict Mode**\n   - "}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_13", "text": "  },\n            \"strict\": True\n        }\n    }\n]\n```\n\nBest Practices:\n\n1. **Use Strict Mode**\n   - Always set `strict: True` to ensure valid function calls\n   - Define all required parameters\n   - Set `additionalProperties: False`\n2. **Use tool choice**\n   - Set `tool_choice: \"required\"` to ensure that the model will always call one or more tools\n   - The default is `tool_choice: \"auto\"` which means the model will choose a tool only if appropriate\n3. **Clear Descriptions**\n   - Write detailed f"}
{"source": "Course_content_jan_2025/function-calling.md", "chunk_id": "function-calling.md_part_14", "text": "ans the model will choose a tool only if appropriate\n3. **Clear Descriptions**\n   - Write detailed function and parameter descriptions\n   - Include expected formats and units\n   - Mention any constraints or limitations\n4. **Error Handling**\n   - Validate function inputs before execution\n   - Return clear error messages\n   - Handle missing or invalid parameters"}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_1", "text": "## Data Transformation with dbt\n\n[](https://youtu.be/5rNquRnNb4E)\n\nYou'll learn how to transform data using dbt (data build tool), covering:\n\n- **dbt Fundamentals**: Understand what dbt is and how it brings software engineering practices to data transformation\n- **Project Setup**: Learn how to initialize a dbt project, configure your warehouse connection, and structure your models\n- **Models and Materialization**: Create your first dbt models and understand different materialization strategies ("}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_2", "text": "aterialization**: Create your first dbt models and understand different materialization strategies (view, table, incremental)\n- **Testing and Documentation**: Implement data quality tests and auto-generate documentation for your data models\n- **Jinja Templating**: Use Jinja for dynamic SQL generation, making your transformations more maintainable and reusable\n- **References and Dependencies**: Learn how to reference other models and manage model dependencies\n- **Sources and Seeds**: Configure so"}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_3", "text": "rn how to reference other models and manage model dependencies\n- **Sources and Seeds**: Configure source data connections and manage static reference data\n- **Macros and Packages**: Create reusable macros and leverage community packages to extend functionality\n- **Incremental Models**: Optimize performance by only processing new or changed data\n- **Deployment and Orchestration**: Set up dbt Cloud or integrate with Airflow for production deployment\n\nHere's a minimal dbt model example, `models/sta"}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_4", "text": "or integrate with Airflow for production deployment\n\nHere's a minimal dbt model example, `models/staging/stg_customers.sql`:\n\n```sql\nwith source as (\n    select * from {{ source('raw', 'customers') }}\n),\n\nrenamed as (\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email,\n        created_at\n    from source\n)\n\nselect * from renamed\n```\n\nTools and Resources:\n\n- [dbt Core](https://github.com/dbt-labs/dbt-core) - The open-source transformation tool\n- [dbt Cloud]("}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_5", "text": "dbt Core](https://github.com/dbt-labs/dbt-core) - The open-source transformation tool\n- [dbt Cloud](https://www.getdbt.com/product/dbt-cloud) - Hosted platform for running dbt\n- [dbt Packages](https://hub.getdbt.com/) - Reusable modules from the community\n- [dbt Documentation](https://docs.getdbt.com/) - Comprehensive guides and references\n- [Jaffle Shop](https://github.com/dbt-labs/jaffle_shop) - Example dbt project for learning\n- [dbt Slack Community](https://www.getdbt.com/community/) - Activ"}
{"source": "Course_content_jan_2025/dbt.md", "chunk_id": "dbt.md_part_6", "text": " Example dbt project for learning\n- [dbt Slack Community](https://www.getdbt.com/community/) - Active community for support and discussions\n\nWatch this dbt Fundamentals Course (90 min):\n\n[](https://youtu.be/5rNquRnNb4E)"}
{"source": "Course_content_jan_2025/scraping-live-sessions.md", "chunk_id": "scraping-live-sessions.md_part_1", "text": "## Scraping: Live Sessions\n\n[](https://youtu.be/cAriusuJsmw)\n\nFundamentals of web scraping with urllib and BeautifulSoup\n\n[](https://youtu.be/I3auyTYORTs)\n\nIntermediate web scraping use of cookies\n\n[](https://youtu.be/DryMIxMf3VU)\n\nXML intro and scraping\n\n[](https://youtu.be/8S_jvsjtaYg)"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_1", "text": "# Tools in Data Science - May 2025\n\n[Tools in Data Science](https://study.iitm.ac.in/ds/course_pages/BSSE2002.html) is a practical diploma level data science course at IIT Madras that teaches\npopular tools for sourcing data, transforming it, analyzing it, communicating these as visual stories, and deploying them in production.\n\n<details>\n<summary><strong>This course exposes you to real-life tools</strong></summary>\n\nCourses teach you programming and data science. From statistics to algorithms to"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_2", "text": "/strong></summary>\n\nCourses teach you programming and data science. From statistics to algorithms to writing Python code to building models.\n\nBut one critical subject that's rarely covered is: what tools should I pick and how do I become proficient in them?\n\nThese tools might not help your CV much. But they will make things easier in real life. For example, at school:\n\n- You learn from pristine datasets. But in the industry, you'll have to scrape them yourself.\n- You learn how to train models. B"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_3", "text": "tasets. But in the industry, you'll have to scrape them yourself.\n- You learn how to train models. But soon, you'll just pick something from HuggingFace.\n- You learn to write a log parser over weeks. Instead, your boss writes a `sed` + `grep` script in minutes.\n\n[ \"We lost the documentation on quantum mechanics. You'll have to decode the regexes yourself.\"](https://explainxkcd.com/224/)\n\nIn this course, we've curated the most important tools people use in data science.\n\nLearn them well. You'll b"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_4", "text": "ourse, we've curated the most important tools people use in data science.\n\nLearn them well. You'll be a **_lot_ more productive** than your peers.\n\n</details>\n\n<details>\n<summary><strong>This course is quite hard</strong></summary>\n\nHere's students' feedback:\n\n- [2 out of 5 students in the Jan 2025 batch failed](https://discourse.onlinedegree.iitm.ac.in/t/when-should-i-take-tools-in-data-science/173268)\n- It _used_ to be an easy course until 2024.\n  [#](https://discourse.onlinedegree.iitm.ac.in/"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_5", "text": "73268)\n- It _used_ to be an easy course until 2024.\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/difficulty-rating-for-diploma-subjects-based-on-students-opinion/61194)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/difficulty-rating-for-diploma-subjects-2-0-based-on-student-ratings-and-my-experience/85681)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/what-should-i-take-next/44291/6)\n- Now it's hard and covers more. Take it in your last semester if possible.\n  [#](https://discourse."}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_6", "text": "- Now it's hard and covers more. Take it in your last semester if possible.\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/diploma-course-feedback-t32024-and-course-selection-t12025-thread/160032/45)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/2024-t1-diploma-level-feedback-and-course-selection-for-may-2024-term/127856/60)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/2024-t2-diploma-level-feedback-and-course-selection-for-september-2024-term/144976/62?u=s.anand)\n- Plan extra time. "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_7", "text": "level-feedback-and-course-selection-for-september-2024-term/144976/62?u=s.anand)\n- Plan extra time. It takes more time than typical 3-credit courses.\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/concerns-regarding-unfair-grading-practices-for-tds-project-2/160611/11)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/diploma-level-course-combo-suggestion/158460/4)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/diploma-level-course-combo-suggestion/158460/7)\n- LLMs grade you -- unpredictab"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_8", "text": "edegree.iitm.ac.in/t/diploma-level-course-combo-suggestion/158460/7)\n- LLMs grade you -- unpredictably.\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/concerns-regarding-unfair-grading-practices-for-tds-project-2/160611/10)\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/wrong-marks-in-project-2/160355/9)\n- The ROE is hard.\n  [#](https://discourse.onlinedegree.iitm.ac.in/t/is-it-fair-to-consider-20-weightage-of-such-exam-which-is-impossible-to-solve-in-given-time-i-e-roe/141413/10)\n\n**[Take"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_9", "text": "der-20-weightage-of-such-exam-which-is-impossible-to-solve-in-given-time-i-e-roe/141413/10)\n\n**[Take Graded assignment 1](https://exam.sanand.workers.dev/tds-2025-05-ga1) to check if you're ready for this course.** Please drop this course (do it in a later term) if you score low. It'll be too tough for you now.\n\n</details>\n\n<details>\n<summary><strong>But it's probably worth it.</strong></summary>\n\nHere's students' feedback:\n\n- [Course experience and farewell post](https://discourse.onlinedegree."}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_10", "text": "\nHere's students' feedback:\n\n- [Course experience and farewell post](https://discourse.onlinedegree.iitm.ac.in/t/course-experience-and-farewell-post/173247)\n\n</details>\n\n<details>\n<summary><strong>Programming skills are a pre-requisite</strong></summary>\n\nYou need a _good_ understanding of Python, JavaScript, HTML, HTTP, Excel, and data science concepts.\n\n**But isn't this a data science course?** Yes. Good data scientists are good programmers. Data scientists don't just analyze data or train mod"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_11", "text": "Yes. Good data scientists are good programmers. Data scientists don't just analyze data or train models. They source data, clean it, transform it, visualize it, deploy it, and automate the whole process.\n\nIn some organizations, some of this work is done by others (e.g. data engineers, IT teams, etc.). But wherever you are, _some_ of the time, you need to write code for all of this yourself.\n\nThis course teaches you tools that will make you more productive. But you _do_ need programming to learn "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_12", "text": "course teaches you tools that will make you more productive. But you _do_ need programming to learn many of them.\n\n</details>\n\n<details>\n<summary><strong>If you passed, don't enroll again</strong></summary>\n\nThe course is public, so you can always audit it.\n\nAlso, registering again for the course [does not improve marks much](https://discourse.onlinedegree.iitm.ac.in/t/why-you-should-almost-never-register-for-tds-improvement-if-you-have-passed-it/173625).\n\n</details>\n\n<summary><strong>We encoura"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_13", "text": "register-for-tds-improvement-if-you-have-passed-it/173625).\n\n</details>\n\n<summary><strong>We encourage learning by sharing</strong></summary>\n\nYou _CAN_ copy from friends. You can work in groups. You can share code. Even in projects, assignments, and exams (except the final end-term exam).\n\n**Why should you copy?** Because in real life, there's no time to re-invent the wheel. You'll be working in teams on the shoulders of giants. It's important to learn how to do that well.\n\n**To learn well, und"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_14", "text": "teams on the shoulders of giants. It's important to learn how to do that well.\n\n**To learn well, understand** what you're copying. If you're short of time, prioritize.\n\n**To learn better, teach** what you've learnt.\n\n</details>\n\n## We cover 7 modules in 12 weeks\n\nThe content evolves with technology and feedback.\nTrack the [commit history](https://github.com/sanand0/tools-in-data-science-public/commits/tds-2025-01/) for changes.\n\n1. **[Development Tools](development-tools.md)** and concepts to **"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_15", "text": "mits/tds-2025-01/) for changes.\n\n1. **[Development Tools](development-tools.md)** and concepts to **build** models and apps.\n2. **[Deployment Tools](deployment-tools.md)** and concepts to **publish** what you built.\n3. **[Large Language Models](large-language-models.md)** that make your work easier and your apps smarter.\n4. **[Data Sourcing](data-sourcing.md)** to get data from the web, files, and databases.\n5. **[Data Preparation](data-preparation.md)** to clean up and convert the inputs to the"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_16", "text": " databases.\n5. **[Data Preparation](data-preparation.md)** to clean up and convert the inputs to the right format.\n6. **[Data Analysis](data-analysis.md)** to find surprising insights in the data.\n7. **[Data Visualization](data-visualization.md)** to communicate those insights as visual stories.\n\n## Anyone can audit this course\n\nEveryone has access to:\n\n- Course content at <https://tds.s-anand.net/>\n- [Evaluations](#evaluations-are-mostly-open-internet)\n\nYou can solve these questions any time an"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_17", "text": "/>\n- [Evaluations](#evaluations-are-mostly-open-internet)\n\nYou can solve these questions any time and check your answers before the submission dates.\n\nOnly [enrolled students](https://study.iitm.ac.in/ds/) can participate in [Discourse](https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34), get project evaluations, take the final end-term, or get a certificate.\n\nThose auditing can join the [TDS 2025 May Google Group](https://groups.google.com/g/tds-2025-05) for announcements.\n\n## Evalua"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_18", "text": "e [TDS 2025 May Google Group](https://groups.google.com/g/tds-2025-05) for announcements.\n\n## Evaluations are mostly open Internet\n\nTentative dates:\n\n| Exam                                       | Type                     | Weight |          Release Date |       Submission Date |\n| ------------------------------------------ | ------------------------ | -----: | --------------------: | --------------------: |\n| GA: Graded assignments                     | Best 4 out of 7          |    15% |      "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_19", "text": "--------: |\n| GA: Graded assignments                     | Best 4 out of 7          |    15% |                       |                       |\n| [Graded Assignment 1][GA1] [Discuss][GA1D] | Online open-Internet MCQ |        |       Thu 01 May 2025 |       Sun 18 May 2025 |\n| [Graded Assignment 2][GA2] [Discuss][GA2D] | Online open-Internet MCQ |        |       Thu 05 May 2025 |       Sun 25 May 2025 |\n| [Graded Assignment 3][GA3] [Discuss][GA3D] | Online open-Internet MCQ |        |       Fri 20"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_20", "text": "25 |\n| [Graded Assignment 3][GA3] [Discuss][GA3D] | Online open-Internet MCQ |        |       Fri 20 May 2025 |       Sun 01 Jun 2025 |\n| P1: Project 1                              | Online open-Internet     |    20% |       Fri 16 May 2025 |       Sat 14 Jun 2025 |\n| Graded Assignment 4                        | Online open-Internet MCQ |        |       Wed 11 Jun 2025 |       Sun 22 Jun 2025 |\n| Graded Assignment 5                        | Online open-Internet MCQ |        |       Wed 18 Jun 20"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_21", "text": "Graded Assignment 5                        | Online open-Internet MCQ |        |       Wed 18 Jun 2025 |       Sun 29 Jun 2025 |\n| Graded Assignment 6                        | Online open-Internet MCQ |        |       Wed 02 Jul 2025 |       Sun 13 Jul 2025 |\n| ROE: Remote Online Exam                    | Online open-Internet MCQ |    20% | Sun 20 Jul 2025 13:00 | Sun 20 Jul 2025 13:45 |\n| Graded Assignment 7                        | Online open-Internet MCQ |        |       Wed 16 Jul 2025 |   "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_22", "text": "Assignment 7                        | Online open-Internet MCQ |        |       Wed 16 Jul 2025 |       Sun 27 Jul 2025 |\n| P2: Project 2                              | Online open-Internet     |    20% |       Fri 11 Jul 2025 |        Fri 8 Aug 2025 |\n| F: Final end-term                          | In-person, no internet   |    25% |       Sun 31 Aug 2025 |       Sun 31 Aug 2025 |\n\n[GA1]: https://exam.sanand.workers.dev/tds-2025-05-ga1\n[GA2]: https://exam.sanand.workers.dev/tds-2025-05-ga2\n[GA3]"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_23", "text": "exam.sanand.workers.dev/tds-2025-05-ga1\n[GA2]: https://exam.sanand.workers.dev/tds-2025-05-ga2\n[GA3]: https://exam.sanand.workers.dev/tds-2025-05-ga3\n[GA1D]: https://discourse.onlinedegree.iitm.ac.in/t/ga1-development-tools-discussion-thread-tds-may-2025/173524\n[GA2D]: https://discourse.onlinedegree.iitm.ac.in/t/ga2-deployment-tools-discussion-thread-tds-may-2025/173525\n[GA3D]: https://discourse.onlinedegree.iitm.ac.in/t/ga3-large-language-models-discussion-thread-tds-may-2025/175592\n\nUpdates:\n\n"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_24", "text": "nlinedegree.iitm.ac.in/t/ga3-large-language-models-discussion-thread-tds-may-2025/175592\n\nUpdates:\n\n- 5 May 2025:\n  - GA1 submission date postponed from 11 May to 18 May 2025\n  - GA2 submission date postponed from 18 May to 25 May 2025\n  - ~~GA3 submission date **preponed** from 01 Jun to 25 May 2025 since there's a break the week after~~\n\n### Notes\n\n- **[Graded Assignment 1][GA1] checks course pre-requisites**. Please drop this course (do it in a later term) if you score low. It'll be too tough"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_25", "text": "e-requisites**. Please drop this course (do it in a later term) if you score low. It'll be too tough for you now.\n- **Remote exams are open and hard**\n  - You can use the Internet, WhatsApp, ChatGPT, your notes, your friends, your pets...\n  - The RoE is especially hard. Read: [What is the purpose of an impossible RoE exam?](https://discourse.onlinedegree.iitm.ac.in/t/whats-the-actual-purpose-of-impossible-roe-exam/99838/2)\n- **Final exam is in-person and closed book**. It tests your memory. It's"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_26", "text": "possible-roe-exam/99838/2)\n- **Final exam is in-person and closed book**. It tests your memory. It's easy.\n- **Projects test application**. The projects test how well you apply what you learnt in a real-world context.\n- **Bonus activities may be posted on Discourse**. See [previous bonus activities](https://discourse.onlinedegree.iitm.ac.in/tags/c/courses/tds-kb/34/bonus-marks)\n- **Evaluations are mostly automated**. This course uses pre-computed (for objective) or LLMs (for subjective) evaluati"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_27", "text": " mostly automated**. This course uses pre-computed (for objective) or LLMs (for subjective) evaluations.\n  - LLMs will evaluate you differently each time. Learn to prompt them _robustly_ to get higher marks.\n\n## Constantly check communications\n\nCheck these three links regularly to keep up with the course.\n\n1. **[Seek Notifications](https://seek.onlinedegree.iitm.ac.in/)** for Course Notifications. Log into [seek.onlinedegree.iitm.ac.in](https://seek.onlinedegree.iitm.ac.in/) and click on the bel"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_28", "text": " Log into [seek.onlinedegree.iitm.ac.in](https://seek.onlinedegree.iitm.ac.in/) and click on the bell icon :bell: on the top right corner :arrow_upper_right:. Check notifications daily.\n   \n2. **[Your email](https://mail.google.com/)** for Course Announcements. [Seek](https:/seek.onlinedegree.iitm.ac.in/) Inbox are forwarded to your email. Check daily. Check spam folders too.\n3. **[TDS Discourse](https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34)**: Faculty, instructors, and TAs will"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_29", "text": "https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34)**: Faculty, instructors, and TAs will share updates and address queries here. Email [support@study.iitm.ac.in](mailto:support@study.iitm.ac.in) cc: [discourse-staff1@study.iitm.ac.in](mailto:discourse-staff1@study.iitm.ac.in) if you can't access Discourse.\n\n## People who help you\n\n- **Faculty** (who design the course)\n  - [Anand S](https://www.linkedin.com/in/sanand0/),\n    [root.node@gmail.com](mailto:root.node@gmail.com) |\n    [@s."}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_30", "text": "ps://www.linkedin.com/in/sanand0/),\n    [root.node@gmail.com](mailto:root.node@gmail.com) |\n    [@s.anand](https://discourse.onlinedegree.iitm.ac.in/u/s.anand)\n- **Instructors** (who teach the course)\n  - Carlton D'Silva.\n    [22f3001919@ds.study.iitm.ac.in](mailto:22f3001919@ds.study.iitm.ac.in) |\n    [@carlton](https://discourse.onlinedegree.iitm.ac.in/u/carlton)\n  - [Prasanna S](https://www.linkedin.com/in/prasanna-sugumaran-ab980222/),\n    [prasanna@study.iitm.ac.in](mailto:prasanna@study.ii"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_31", "text": "kedin.com/in/prasanna-sugumaran-ab980222/),\n    [prasanna@study.iitm.ac.in](mailto:prasanna@study.iitm.ac.in) |\n    [@iamprasna](https://discourse.onlinedegree.iitm.ac.in/u/iamprasna)\n- **Teaching assistants** (who help you with your doubts)\n  - Jivraj Singh,\n    [22f3002542@ds.study.iitm.ac.in](mailto:22f3002542@ds.study.iitm.ac.in) |\n    [@Jivraj](https://discourse.onlinedegree.iitm.ac.in/u/jivraj) |\n    [LinkedIn Profile](https://www.linkedin.com/in/jivraj-singh-shekhawat-92a547269/)\n  - Such"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_32", "text": "aj) |\n    [LinkedIn Profile](https://www.linkedin.com/in/jivraj-singh-shekhawat-92a547269/)\n  - Suchintika Sarkar,\n    [21f3002441@ds.study.iitm.ac.in](mailto:21f3002441@ds.study.iitm.ac.in) |\n    [@21f3002441](https://discourse.onlinedegree.iitm.ac.in/u/21f3002441)\n  - Hritik Roshan Maurya,\n    [22f3002460@ds.study.iitm.ac.in](mailto:22f3002460@ds.study.iitm.ac.in) |\n    [@HritikRoshan_HRM](https://discourse.onlinedegree.iitm.ac.in/u/hritikroshan_hrm)\n  - Saransh Saini,\n    [22f1001123@ds.study"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_33", "text": "://discourse.onlinedegree.iitm.ac.in/u/hritikroshan_hrm)\n  - Saransh Saini,\n    [22f1001123@ds.study.iitm.ac.in](mailto:22f1001123@ds.study.iitm.ac.in) |\n    [@Saransh_Saini](https://discourse.onlinedegree.iitm.ac.in/u/Saransh_Saini) |\n    [LinkedIn Profile](https://www.linkedin.com/in/saranshsaini48/)\n  - [Virtual TA](https://chatgpt.com/g/g-mZqKVxKDx-iitm-tds-teaching-assistant)\n    ([GPT Instructions](tds-ta-instructions.md))\n\n<!--\n- Mahesh Balan U (MS, PhD - IIT Madras)\n- Dixon Prem Daniel ("}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_34", "text": "ctions](tds-ta-instructions.md))\n\n<!--\n- Mahesh Balan U (MS, PhD - IIT Madras)\n- Dixon Prem Daniel (PhD - IIT Madras)\n- Ravi Teja (MS - IIT Madras)\n- Sathiesh (MS - IIT Madras)\n- Rohith Srinivaas M (B.Tech, M.Tech - IIT Madras)\n\n- [Amit Kumar Gupta](https://www.linkedin.com/in/amit-gupta-321994252/) (B.Sc. Delhi University).\n  [21f1005763@ds.study.iitm.ac.in](mailto:21f1005763@ds.study.iitm.ac.in) |\n  [@Amit1](https://discourse.onlinedegree.iitm.ac.in/u/Amit1)\n\n-->\n\nTheir **job** is to help you."}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_35", "text": " |\n  [@Amit1](https://discourse.onlinedegree.iitm.ac.in/u/Amit1)\n\n-->\n\nTheir **job** is to help you. Trouble them for your slightest doubts!\n\n## Course Links\n\n- [TDS: Discourse](https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34) - Ask questions, get help, and discuss with your peers.\n- [IITM BS Degree Programme - Student Handbook](https://docs.google.com/document/u/2/d/e/2PACX-1vRxGnnDCVAO3KX2CGtMIcJQuDrAasVk2JHbDxkjsGrTP5ShhZK8N6ZSPX89lexKx86QPAUswSzGLsOA/pub)\n- [TDS: Public course "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_36", "text": "CVAO3KX2CGtMIcJQuDrAasVk2JHbDxkjsGrTP5ShhZK8N6ZSPX89lexKx86QPAUswSzGLsOA/pub)\n- [TDS: Public course page](https://study.iitm.ac.in/ds/course_pages/BSSE2002.html)\n- [TDS: Course files](https://drive.google.com/drive/folders/1FE0YPAxcxMzZdjnp3FopuJCI3A2Vq6fC?usp=drive_link) -- Jupyter notebooks, datasets, etc.\n\n## May 2025 Links\n\n- [Grading Document - May 2025](https://docs.google.com/document/u/3/d/e/2PACX-1vRKOWaLjxsts3qAM4h00EDvlB-GYRSPqqVXTfq3nGWFQBx91roxcU1qGv2ksS7jT4EQPNo8Rmr2zaE9/pub#h.2bn6"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_37", "text": "/e/2PACX-1vRKOWaLjxsts3qAM4h00EDvlB-GYRSPqqVXTfq3nGWFQBx91roxcU1qGv2ksS7jT4EQPNo8Rmr2zaE9/pub#h.2bn6wsx)\n- [TDS: Course page - May 2025](https://seek.onlinedegree.iitm.ac.in/courses/ns_25t2_se2002) -- for students to access course content.\n- [TDS: Announcement group - May 2025](https://groups.google.com/a/study.iitm.ac.in/g/25t2_se2002-announce)\n- [TDS: Live Sessions](https://www.youtube.com/@se-lr5ff/streams)\n\n<!--\n\n- [Back-end for configuring the lessons](https://cb-prod.seek.study.iitm.ac.in/"}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_38", "text": "r5ff/streams)\n\n<!--\n\n- [Back-end for configuring the lessons](https://cb-prod.seek.study.iitm.ac.in/25t1_se2002/)\n\n-->\n\n## Past Course Content\n\n- [TDS: Course Content - Jan 2025](2025-01/)\n- [TDS: Live Sessions - Jan 2025](https://www.youtube.com/playlist?list=PL_h5u1jMeBCl1BquBhgunA4t08XAxsA-C) -- YouTube playlist\n- [TDS: Course calendar - Jan 2025](https://calendar.google.com/calendar/u/0/r?cid=Y19ib2Y3bnMxbDduNm84azA1dHA4YTlxNWIwZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t)\n- [Grading Document - Jan "}
{"source": "Course_content_jan_2025/README.md", "chunk_id": "README.md_part_39", "text": "Y19ib2Y3bnMxbDduNm84azA1dHA4YTlxNWIwZ0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t)\n- [Grading Document - Jan 2025](https://docs.google.com/document/d/e/2PACX-1vRBH1NuM3ML6MH5wfL2xPiPsiXV0waKlUUEj6C7LrHrARNUsAEA1sT2r7IHcFKi8hvQ45gSrREnFiTT/pub)."}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_1", "text": "# TDS GPT Reviewer\n\nAfter the later parts of this course's contents were written, we ran it through a [Technical Content Reviewer GPT](https://chatgpt.com/g/g-6777656ed3b8819187b6f17d9f343853-technical-content-reviewer).\n\nTake a look at the GPT's instructions. These were generated by the [OpenAI Prompt Generation](https://platform.openai.com/docs/guides/prompt-generation) tool.\n\n```markdown\nAs a **Content Reviewer** for a high school\u2013level course on Tools in Data Science, your job is to evaluate"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_2", "text": "*Content Reviewer** for a high school\u2013level course on Tools in Data Science, your job is to evaluate provided content (such as text, code snippets, or references) with a focus on correctness, clarity, and conciseness, and offer actionable feedback for improvement.\n\n1. **Check for Correctness and Consistency**\n   - Verify technical and factual accuracy.\n   - Ensure internal consistency without contradictions.\n2. **Check for Clarity and Approachability**\n   - Ensure content is understandable for a"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_3", "text": "radictions.\n2. **Check for Clarity and Approachability**\n   - Ensure content is understandable for a high school student with limited prior knowledge.\n   - Identify and simplify jargon or advanced concepts.\n3. **Check for Conciseness**\n   - Assess if content is direct and free of unnecessary verbosity.\n   - Identify areas for streamlining to enhance readability.\n4. **Provide Feedback for Improvement**\n   - Offer actionable suggestions for fixing, clarifying, or reorganizing content.\n   - Propose"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_4", "text": "nt**\n   - Offer actionable suggestions for fixing, clarifying, or reorganizing content.\n   - Propose alternative phrasing if text is vague, complex, or verbose.\n\n# Steps\n\n1. Carefully read the entire content before forming conclusions.\n2. List factual inconsistencies or missing details causing confusion.\n3. Suggest simpler terms or analogies for complex language.\n4. Point out unnecessary repetition or filler text.\n5. Provide direct examples of how to improve the highlighted issues.\n\n# Output For"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_5", "text": "n or filler text.\n5. Provide direct examples of how to improve the highlighted issues.\n\n# Output Format\n\nRespond using **Markdown** with the following structure:\n\n1. **Summary of Findings**\n   - A concise paragraph outlining overall strengths and weaknesses.\n2. **Detailed Review**\n   - **Correctness and Consistency**: Note factual errors or inconsistencies, suggesting corrections.\n   - **Clarity and Approachability**: Identify overly advanced or unclear sections, offering simpler alternatives.\n "}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_6", "text": "nd Approachability**: Identify overly advanced or unclear sections, offering simpler alternatives.\n   - **Conciseness**: Highlight long or repetitive sections with suggestions for tightening the text.\n3. **Actionable Improvement Suggestions**\n   - Provide specific sentences, bullet points, or rewritten examples to illustrate improvements.\n\n# Notes\n\n- Maintain a constructive review tone, not content generation.\n- Even if content is perfect, confirm with suggestions for minor improvements (e.g., a"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_7", "text": "t generation.\n- Even if content is perfect, confirm with suggestions for minor improvements (e.g., adding an example or clarifying a subtle point).\n```\n\n## Content creation prompts\n\nIn addition, here are a few prompts used to create the content:\n\n1. **Video summaries**. Transcribe the video via [YouTube Transcript](https://youtubetranscript.com/) or Whisper. Then: `Summarize this video transcript crisply for a high school student.`"}
{"source": "Course_content_jan_2025/tds-gpt-reviewer.md", "chunk_id": "tds-gpt-reviewer.md_part_8", "text": "crisply for a high school student.`"}
{"source": "Course_content_jan_2025/unicode.md", "chunk_id": "unicode.md_part_1", "text": "## Unicode\n\nEver noticed when you copy-paste some text and get garbage symbols? Or see garbage when you load a CSV file? This video explains why. It covers how computers store text (called character encoding) and why it sometimes goes wonky.\n\nLearn about ASCII (the original 7-bit encoding system that could only handle 128 characters), why that wasn't enough for global languages, and how modern solutions like Unicode save the day by letting us use any character from any language.\n\nSome programs t"}
{"source": "Course_content_jan_2025/unicode.md", "chunk_id": "unicode.md_part_2", "text": "utions like Unicode save the day by letting us use any character from any language.\n\nSome programs try to guess encodings (sometimes badly!). A signature called BOM (Byte Order Mark)helps computers know exactly how to read text files correctly.\n\nLearn how Unicode, UTF-8 and character encoding works. This is a common gotcha when building apps that handle international text - something bootcamps often skip but developers and data scientists regularly face in the real world.\n\nUnicode is fundamental"}
{"source": "Course_content_jan_2025/unicode.md", "chunk_id": "unicode.md_part_3", "text": "en skip but developers and data scientists regularly face in the real world.\n\nUnicode is fundamental for data scientists working with international data. Here are key concepts you need to understand:\n\n- **Character Encodings**: Different ways to represent text in computers\n  - ASCII (7-bit): Limited to 128 characters, English-only\n  - UTF-8: Variable-width encoding, backwards compatible with ASCII\n  - UTF-16: Fixed-width encoding, used in Windows and Java\n  - UTF-32: Fixed-width encoding, memory"}
{"source": "Course_content_jan_2025/unicode.md", "chunk_id": "unicode.md_part_4", "text": "\n  - UTF-16: Fixed-width encoding, used in Windows and Java\n  - UTF-32: Fixed-width encoding, memory inefficient but simple\n\nCommon encoding issues you'll encounter:\n\n```python\n# Reading files with explicit encoding\nwith open('file.txt', encoding='utf-8') as f:\n    text = f.read()\n\n# Handling encoding errors\nimport pandas as pd\ndf = pd.read_csv('data.csv', encoding='utf-8', errors='replace')\n\n# Detecting file encoding\nimport chardet\nwith open('unknown.txt', 'rb') as f:\n    result = chardet.detec"}
{"source": "Course_content_jan_2025/unicode.md", "chunk_id": "unicode.md_part_5", "text": "tecting file encoding\nimport chardet\nwith open('unknown.txt', 'rb') as f:\n    result = chardet.detect(f.read())\nprint(result['encoding'])\n```\n\n[](https://youtu.be/jeIBNn5Y5fI)"}
{"source": "Course_content_jan_2025/regression-with-excel.md", "chunk_id": "regression-with-excel.md_part_1", "text": "## Regression with Excel\n\n[](https://youtu.be/AERQBMIHwXA)\n\nYou'll learn to perform regression analysis using Excel, covering:\n\n- **Data Preparation**: Understanding the cleaned dataset and necessary columns for analysis.\n- **Enabling the Tool**: How to enable the Data Analysis Tool Pack in Excel.\n- **Types of Regression**: Differences between simple and multiple linear regression.\n- **Setting Up Regression**: Steps to input dependent (new deaths) and independent variables (new cases, new tests,"}
{"source": "Course_content_jan_2025/regression-with-excel.md", "chunk_id": "regression-with-excel.md_part_2", "text": "Regression**: Steps to input dependent (new deaths) and independent variables (new cases, new tests, new vaccinations, stringency index) for the analysis.\n- **Interpreting Output**: Reading the regression output, focusing on adjusted R-squared, significance value (F-test), and P-values.\n- **Coefficient Interpretation**: Understanding the impact of each independent variable on the dependent variable, including scaling factors (per 1000 units).\n- **Model Evaluation**: Evaluating the model based on"}
{"source": "Course_content_jan_2025/regression-with-excel.md", "chunk_id": "regression-with-excel.md_part_3", "text": "e, including scaling factors (per 1000 units).\n- **Model Evaluation**: Evaluating the model based on significance values and understanding the implications of unexpected results (e.g., stringency index).\n- **Further Analysis**: Recognizing the need for additional analysis when encountering unexpected or inconclusive results.\n\nHere are the links used in the video:\n\n- [Understand regression](https://www.khanacademy.org/math/ap-statistics/bivariate-data-ap/least-squares-regression/v/calculating-the"}
{"source": "Course_content_jan_2025/regression-with-excel.md", "chunk_id": "regression-with-excel.md_part_4", "text": "/www.khanacademy.org/math/ap-statistics/bivariate-data-ap/least-squares-regression/v/calculating-the-equation-of-a-regression-line)\n- [COVID-19 vaccinations - Regression Excel file](https://docs.google.com/spreadsheets/d/1YZLb9ozhmc-8KQ7EaaTgs57QT6dHju5u/view#gid=242862119)\n- [COVID-19 vaccinations - Regression Model 2 Excel file](https://docs.google.com/spreadsheets/d/1KAolaOQC-P_6gXaw3jgUc7GWKAHfOrsi/view#gid=824457557)"}
{"source": "Course_content_jan_2025/regression-with-excel.md", "chunk_id": "regression-with-excel.md_part_5", "text": "fOrsi/view#gid=824457557)"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_1", "text": "## Retrieval Augmented Generation (RAG) with the CLI\n\nRetrieval Augmented Generation (RAG) combines retrieval (searching a knowledge base) with generation (using an LLM) to produce answers grounded in your own documents. Instead of relying solely on a general-purpose LLM, RAG lets you feed it the most relevant chunks from your corpus at query time, improving accuracy, reducing hallucinations, and allowing you to answer domain\u2011specific questions without fine\u2011tuning.\n\nIn particular, you can answer"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_2", "text": "allowing you to answer domain\u2011specific questions without fine\u2011tuning.\n\nIn particular, you can answer questions that are hard to answer with a keyword search. For example:\n\n```bash\nQ=\"What does the author affectionately call the => syntax?\"\n# Answer: fat arrow\n\nQ=\"What lets you walk every child node of a ts.Node?\"\n# Answer: node.getChildren()\n\nQ=\"What are code pieces like comments and whitespace that aren\u2019t in the AST called?\"\n# Answer: trivia\n\nQ=\"Which operator converts any value into an explici"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_3", "text": "at aren\u2019t in the AST called?\"\n# Answer: trivia\n\nQ=\"Which operator converts any value into an explicit boolean?\"\n# Answer: !!\n```\n\nYou can implement RAG entirely from your terminal, without writing a single line of application code. Below is a step\u2011by\u2011step example using the TypeScript book as a data source.\n\n### 1. Clone the repository\n\n```bash\ngit clone --depth 1 https://github.com/basarat/typescript-book\ncd typescript-book\n```\n\n- `--depth 1` fetches only the latest commit to minimize download s"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_4", "text": "ipt-book\ncd typescript-book\n```\n\n- `--depth 1` fetches only the latest commit to minimize download size.\n- `cd typescript-book` moves into the project folder.\n\nYou'll now be in a new folder `typescript-book` containing the repo.\n\n### 2. Split Markdown files into chunks\n\n```bash\n(\n  shopt -s globstar\n  for f in **/*.md; do\n    uvx --from split_markdown4gpt mdsplit4gpt \"$f\" --model gpt-4o --limit 4096 --separator \"===SPLIT===\" \\\n    | sed '1s/^/===SPLIT===\\n/' \\\n    | jq -R -s -c --arg file \"$f\" '"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_5", "text": "96 --separator \"===SPLIT===\" \\\n    | sed '1s/^/===SPLIT===\\n/' \\\n    | jq -R -s -c --arg file \"$f\" '\n      split(\"===SPLIT===\")[1:]\n      | to_entries\n      | map({\n          id: ($file + \"#\" + (.key | tostring)),\n          content: .value\n        })[]\n    '\n  done\n) | tee chunks.json\n```\n\n- `shopt -s globstar`: lets `**/*.md` match Markdown files in all subdirectories. [bash shopt manual](https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html)\n- `uvx --from split_markdown4gpt"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_6", "text": "/www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html)\n- `uvx --from split_markdown4gpt mdsplit4gpt`: [a tool](https://github.com/twardoch/split-markdown4gpt) that splits Markdown into LLM\u2011sized chunks:\n  - `--model gpt-4o`: uses GPT\u20114o token limits\n  - `--limit 4096`: max tokens per chunk\n  - `--separator \"===SPLIT===\"`: custom split marker\n- `sed '1s/^/===SPLIT===\\n/'`: ensures the very first chunk starts with the separator (GNU sed manual)\n- `jq -R -s -c --arg file \"$f\"`: uses [j"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_7", "text": "very first chunk starts with the separator (GNU sed manual)\n- `jq -R -s -c --arg file \"$f\"`: uses [jq](https://stedolan.github.io/jq/manual/) to convert chunks to JSON\n  - `-R`: read raw input\n  - `-s`: slurp entire input into a single string\n  - `-c`: compact JSON output\n  - builds an array of objects `{id, content}`, where `id` is `filename#chunkIndex`\n- `tee chunks.json`: writes the resulting JSON array to `chunks.json` while printing it to stdout.\n\nYou'll now have a `chunks.json` that has on"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_8", "text": "SON array to `chunks.json` while printing it to stdout.\n\nYou'll now have a `chunks.json` that has one `{id, content}` JSON object per line.\n\n### 3. Generate embeddings\n\n```bash\nllm embed-multi typescript-book --model 3-small --store --format nl chunks.json\n```\n\n- `embed-multi`: computes embeddings for each entry in `chunks.json`.\n- `typescript-book`: a namespace or collection name for storage.\n- `--model 3-small`: selects the embedding model.\n- `--store`: save embeddings in the default backend.\n"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_9", "text": "--model 3-small`: selects the embedding model.\n- `--store`: save embeddings in the default backend.\n- `--format nl`: input is newline\u2011delimited JSON. [llm CLI embed-multi](https://github.com/kerenter/llm#embed-multi)\n\nThis stores the embeddings in a collection called `typescript-book`.\n\n```bash\nllm collections path  # shows where the collections are stored\nllm collections delete typescript-book  # deletes the typescript-book collection\n```\n\n### 4. Find similar topics\n\n```bash\nllm similar typescr"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_10", "text": " deletes the typescript-book collection\n```\n\n### 4. Find similar topics\n\n```bash\nllm similar typescript-book -n 3 -c \"What does the author affectionately call the => syntax?\"\n```\n\nThis returns the 3 chunksmost similar to the question posed.\n\n- `similar`: retrieves the top `n` most similar chunks from the embeddings store.\n- `-n 3`: return three results.\n- `-c`: the user\u2019s query string.\n\n### 5. Answer a question using retrieved context\n\n```bash\nQ=\"What does the author affectionately call the => s"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_11", "text": "wer a question using retrieved context\n\n```bash\nQ=\"What does the author affectionately call the => syntax?\"\nllm similar typescript-book -n 3 -c \"$Q\" \\\n  | jq '.content' \\\n  | llm -s \"$Q - Answer ONLY from these notes. Cite verbatim from notes.\" \\\n  | uvx streamdown\n```\n\nThis answers the question in natural language following these steps:\n\n1. Store the query in `Q`.\n2. Retrieve the top 3 matching chunks.\n3. `jq '.content'` extracts just the text snippets.\n4. Pipe into `llm -s`, instructing the mo"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_12", "text": "hunks.\n3. `jq '.content'` extracts just the text snippets.\n4. Pipe into `llm -s`, instructing the model:\n   - `-s`: stream a prompt directly to the LLM.\n   - `\"$Q - Answer ONLY from these notes. Cite verbatim from notes.\"`: ensures the response is grounded.\n5. `uvx streamdown` formats the streamed LLM output for easy reading.\n\n<!--\n\nMore questions that cannot be answered via keyword search:\n\nQ=\"Which shorthand lets you both declare and initialize a class member in one go?\"\n# Answer: constructor("}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_13", "text": "ich shorthand lets you both declare and initialize a class member in one go?\"\n# Answer: constructor(public x:number)\n\nQ=\"What syntax allows initializing class fields outside the constructor?\"\n# Answer: property initializer\n\nQ=\"What property name do discriminated unions use to narrow types?\"\n# Answer: kind\n\nQ=\"Which keyword pauses and resumes execution in generator functions?\"\n# Answer: yield\n\nQ=\"What JSON-style syntax defines overloads in a callable type annotation?\"\n# Answer: { (foo: string): s"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_14", "text": "hat JSON-style syntax defines overloads in a callable type annotation?\"\n# Answer: { (foo: string): string; }\n\nQ=\"What filename do you use to declare globals available across your entire TS project?\"\n# Answer: global.d.ts\n\nQ=\"What TS helper wraps subclass constructors for ES5-style inheritance?\"\n# Answer: __extends\n\nQ=\"What option in tsconfig.json turns on ES7 decorator support?\"\n# Answer: experimentalDecorators\n\nQ=\"What directive in tsconfig.json preserves raw JSX output?\"\n# Answer: jsx: \"preser"}
{"source": "Course_content_jan_2025/rag-cli.md", "chunk_id": "rag-cli.md_part_15", "text": "ntalDecorators\n\nQ=\"What directive in tsconfig.json preserves raw JSX output?\"\n# Answer: jsx: \"preserve\"\n\nQ=\"In async/await, what wraps generator code to return a Promise?\"\n# Answer: __awaiter\n\nQ=\"What config field controls which .ts/.js files to include in compilation?\"\n# Answer: include / exclude\n\nQ=\"What npm package is recommended for structural deep-equality checks?\"\n# Answer: deep-equal\n-->"}
{"source": "Course_content_jan_2025/correlation-with-excel.md", "chunk_id": "correlation-with-excel.md_part_1", "text": "## Correlation with Excel\n\n[](https://youtu.be/lXHCyhO7DmY)\n\nYou'll learn to calculate and interpret correlations using Excel, covering:\n\n- **Enabling the Data Analysis Tool Pack**: Steps to enable the Excel data analysis tool pack.\n- **Correlation Analysis**: Understanding statistical association between variables.\n- **Creating a Correlation Matrix**: Steps to generate and interpret a correlation matrix.\n- **Scatterplots and Trendlines**: Plotting data and adding trend lines to visualize correl"}
{"source": "Course_content_jan_2025/correlation-with-excel.md", "chunk_id": "correlation-with-excel.md_part_2", "text": " matrix.\n- **Scatterplots and Trendlines**: Plotting data and adding trend lines to visualize correlations.\n- **Analyzing Results**: Comparing correlation coefficients and understanding their implications.\n- **Insights and Further Analysis**: Interpreting scatterplots and planning further analysis for deeper insights.\n\nHere are the links used in the video:\n\n- [Understand correlation](https://www.khanacademy.org/math/ap-statistics/bivariate-data-ap/correlation-coefficient-r/v/correlation-coeffici"}
{"source": "Course_content_jan_2025/correlation-with-excel.md", "chunk_id": "correlation-with-excel.md_part_3", "text": "hanacademy.org/math/ap-statistics/bivariate-data-ap/correlation-coefficient-r/v/correlation-coefficient-intuition-examples)\n- [COVID-19 vaccinations data explorer - Website](https://ourworldindata.org/covid-vaccinations?country=OWID_WRL)\n- [COVID-19 vaccinations - Correlations Excel file](https://docs.google.com/spreadsheets/d/1_vQF2i5ubKmHQMBqoTwsu6AlevWsQtTD/view#gid=790744269)"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_1", "text": "# Live Session: 04 Feb 2025\n\n[](https://youtu.be/8A7Z_PN_PzQ)\n\n**Q1: I'm having trouble with question 7 of the GA3 assignment. I'm trying to send a POST request, but it keeps showing \"method not allowed\".**\n\n**A1:** When you access a URL from a browser, it sends a GET request. To send a POST request, you need an extension like Thunder Client or Postman. Thunder Client doesn't require a login, but Postman does. However, Thunder Client is now a paid service.\n\n**Q2: Previously, I was seeing some th"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_2", "text": "Postman does. However, Thunder Client is now a paid service.\n\n**Q2: Previously, I was seeing some things, but now I'm getting the \"method not allowed\" error. I don't know why.**\n\n**A2:** Let's troubleshoot this. We'll use Thunder Client.\n\n**Q3: After changing my method to POST, what do I do next?**\n\n**A3:** Go to the \"Body\" section in Thunder Client. Create a JSON object using curly braces `{}`. Then, refer to question 7 for the JSON object to copy and paste. Remove the three dots (...) from the"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_3", "text": "hen, refer to question 7 for the JSON object to copy and paste. Remove the three dots (...) from the copied JSON. Click the \"Send\" button.\n\n**Q4: I'm getting an error: \"API key client option must be set either by passing API key to the client or by setting the OPENAI_API_KEY environment variable.\" Am I trying to access an OpenAI key?**\n\n**A4:** Yes, you are. Since you don't have a `.env` file, you need to create one. For now, comment out the code after line 172 and replace it with `return \"hello"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_4", "text": " need to create one. For now, comment out the code after line 172 and replace it with `return \"hello\"` to test. Restart the server.\n\n**Q5: Thunder Client is not showing any paywall.**\n\n**A5:** Thunder Client has a free version with limitations (e.g., 15 collections and 15 requests).\n\n**Q6: Earlier, Thunder Client was free. When did it change?**\n\n**A6:** Recently.\n\n**Q7: I'm still stuck. Can you spell \"Thunder Client\"?**\n\n**A7:** T-H-U-N-D-E-R-C-L-I-E-N-T\n\n**Q8: I'm still getting errors. What's w"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_5", "text": "ell \"Thunder Client\"?**\n\n**A7:** T-H-U-N-D-E-R-C-L-I-E-N-T\n\n**Q8: I'm still getting errors. What's wrong?**\n\n**A8:** Let's review your code. You're trying to send a request using the OpenAI module, which won't work. You need to send the request through an API proxy.\n\n**Q9: I tried using an API proxy, but I still got errors.**\n\n**A9:** Let's focus on getting the basic functionality working. We'll create a simple application and send a POST request using Thunder Client.\n\n**Q10: In the code, what g"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_6", "text": "reate a simple application and send a POST request using Thunder Client.\n\n**Q10: In the code, what goes in the brackets on lines 19, 20, 21, and 23?**\n\n**A10:** Those lines are for allowing requests from external servers. You can list the servers you want to allow. If you use `*`, anyone can access the application. It's better to restrict access by listing specific servers. For example, if you only want to allow access from `server1` and `server2`, you would list them. You only need to mention t"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_7", "text": "y want to allow access from `server1` and `server2`, you would list them. You only need to mention the domain name.\n\n**Q11: I'm stuck on the Docker part of the assignment.**\n\n**A11:** Let's review the Docker process. You need to create a Docker image and push it. The deliverables are the Git repo and the Docker image. It should be a public repository.\n\n**Q12: I'm having trouble with the FastAPI part of the assignment. I'm trying to send a POST request to a specific endpoint, but it's not working"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_8", "text": "rt of the assignment. I'm trying to send a POST request to a specific endpoint, but it's not working.**\n\n**A12:** Let's review the code. You'll need to automate the process using an LLM. The LLM will generate the code, which you'll then execute using the subprocess module in Python.\n\n**Q13: Why do we need to use the subprocess module?**\n\n**A13:** In this project, you'll receive tasks in different languages (English, Hindi, Urdu). The LLM will generate the code to handle these tasks. The subproce"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_9", "text": "languages (English, Hindi, Urdu). The LLM will generate the code to handle these tasks. The subprocess module allows you to execute the generated code on your local machine.\n\n**Q14: I have a question about the Base64 encoding in GA3, question 6. I converted an image to Base64 using Python, but the UI said it was wrong. I found another method, but how do I know which Base64 encoding is correct?**\n\n**A14:** If you paste the Base64 encoding into a decoder, you can visually compare the resulting ima"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_10", "text": "**A14:** If you paste the Base64 encoding into a decoder, you can visually compare the resulting image to the original. The size and resolution should be the same.\n\n**Q15: Some of my answers from previous assignments disappeared after logging out of the website. Why?**\n\n**A15:** That's a known issue. Some answers persist, but others are lost.\n\n**Q16: Can I still check the answers to previous assignments, even though the deadline has passed?**\n\n**A16:** Officially, no. However, if you can check t"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_11", "text": "nments, even though the deadline has passed?**\n\n**A16:** Officially, no. However, if you can check the answers, you can learn from your mistakes.\n\n**Q17: I got stuck on the Docker part of the assignment. Can you elaborate?**\n\n**A17:** It sounds like you may have had issues with Docker push and tagging. Let's review your process.\n\n**Q18: I only gave myself 5 hours for this assignment, which wasn't enough. GA2 took a lot of time, especially the last question (running a local server on a different "}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_12", "text": "enough. GA2 took a lot of time, especially the last question (running a local server on a different API).**\n\n**A18:** Five hours is often insufficient for these assignments. GA2, in particular, can be time-consuming.\n\n**Q19: For question 9, I'm trying to write a string that will make the AI say \"yes,\" but it's not working. Can you give me some hints?**\n\n**A19:** That's something you'll have to figure out on your own. Try different prompts. You can also look at previous Discourse posts for ideas."}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_13", "text": "ure out on your own. Try different prompts. You can also look at previous Discourse posts for ideas.\n\n**Q20: Can I do this using the command prompt, or is there a way to do it from the website?**\n\n**A20:** You can use the website, but you may need to use the command prompt for some tasks.\n\n**Q21: I used Docker Desktop, but I don't remember exactly what I did.**\n\n**A21:** That's okay. Let's focus on the current assignment.\n\n**Q22: What will be the description for the FastAPI part of the assignmen"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_14", "text": "n the current assignment.\n\n**Q22: What will be the description for the FastAPI part of the assignment?**\n\n**A22:** The description will include the three lines of code you've already seen. These will be part of the request parameters.\n\n**Q23: Why can't I just pass an ID instead of the whole string?**\n\n**A23:** There might be other tasks that require different inputs.\n\n**Q24: How are we restricting access to data from other servers?**\n\n**A24:** We use the `Allow-Origin` header to specify which se"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_15", "text": " access to data from other servers?**\n\n**A24:** We use the `Allow-Origin` header to specify which servers are allowed to access the data. The header contains information about where the request is coming from and the type of request (GET, POST, etc.). If you use `*`, any server can access it. Restricting access is a security measure.\n\n**Q25: What is the trigger point for this assignment?**\n\n**A25:** The trigger point is the same as before: a REST API POST call.\n\n**Q26: For the fetch data from AP"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_16", "text": "** The trigger point is the same as before: a REST API POST call.\n\n**Q26: For the fetch data from API and save it task, what is the URL?**\n\n**A26:** It can be any URL. The assignment is about comparing your code, not fetching data from a specific URL.\n\n**Q27: What is the purpose of the subprocess module?**\n\n**A27:** The subprocess module allows you to execute commands from within your Python script. This is useful for executing code generated by the LLM.\n\n**Q28: For task 3, what is the expected "}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_17", "text": "t. This is useful for executing code generated by the LLM.\n\n**Q28: For task 3, what is the expected output?**\n\n**A28:** The task can be described in different ways (e.g., English, Hindi). The LLM will generate the code to handle the task. You'll need to execute that code using the subprocess module.\n\n**Q29: Is there a time frame for completing the project?**\n\n**A29:** We'll prioritize project 1. We'll discuss the timeline for project 4 later.\n\n**Q30: I have a question about the Base64 encoding i"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_18", "text": "e'll discuss the timeline for project 4 later.\n\n**Q30: I have a question about the Base64 encoding in GA3, question 6. I converted an image to Base64 using Python, but the UI said it was wrong. I found another method, but how do I know which Base64 encoding is correct?**\n\n**A30:** You can compare the decoded image from both methods visually. The size and resolution should be the same. If the encoding is correct, the decoded image will match the original. You can also encode the image using an en"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_19", "text": "ing is correct, the decoded image will match the original. You can also encode the image using an encoder to verify.\n\n**Q31: In previous assignments, some answers disappeared after logging out. Can we still check the answers to previous assignments, even though the deadline has passed?**\n\n**A31:** Officially, no. However, reviewing your answers can still be beneficial for learning.\n\n**Q32: Can you give me some hints on how to write a prompt to make the AI in question 9 say \"yes\"?**\n\n**A32:** Tha"}
{"source": "Course_content_jan_2025/live-session-2025-02-04.md", "chunk_id": "live-session-2025-02-04.md_part_20", "text": " give me some hints on how to write a prompt to make the AI in question 9 say \"yes\"?**\n\n**A32:** That's something you'll need to figure out on your own. Try different prompts. You can also look at previous Discourse posts for ideas."}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_1", "text": "## Data Analysis with DuckDB\n\n[](https://youtu.be/4U0GqYrET5s)\n\nYou'll learn how to perform data analysis using DuckDB and Pandas, covering:\n\n- **Parquet for Data Storage**: Understand why Parquet is a faster, more compact, and better-typed storage format compared to CSV, JSON, and SQLite.\n- **DuckDB Setup**: Learn how to install and set up DuckDB, along with integrating it into a Jupyter notebook environment.\n- **File Format Comparisons**: Compare file formats by speed and size, observing the p"}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_2", "text": " environment.\n- **File Format Comparisons**: Compare file formats by speed and size, observing the performance difference between saving and loading data in CSV, JSON, SQLite, and Parquet.\n- **Faster Queries with DuckDB**: Learn how DuckDB uses parallel processing, columnar storage, and on-disk operations to outperform Pandas in speed and memory efficiency.\n- **SQL Query Execution in DuckDB**: Run SQL queries directly on Parquet files and Pandas DataFrames to compute metrics such as the number o"}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_3", "text": " SQL queries directly on Parquet files and Pandas DataFrames to compute metrics such as the number of unique flight routes delayed by certain time intervals.\n- **Memory Efficiency**: Understand how DuckDB performs analytics without loading entire datasets into memory, making it highly efficient for large-scale data analysis.\n- **Mixing DuckDB and Pandas**: Learn to interleave DuckDB and Pandas operations, leveraging the strengths of both tools to perform complex queries like correlations and agg"}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_4", "text": "rations, leveraging the strengths of both tools to perform complex queries like correlations and aggregations.\n- **Ranking and Filtering Data**: Use SQL and Pandas to rank arrival delays by distance and extract key insights, such as the earliest flight arrival for each route.\n- **Joining Data**: Create a cost analysis by joining datasets and calculating total costs of flight delays, demonstrating DuckDB's speed in joining and aggregating large datasets.\n\nHere are the links used in the video:\n\n- "}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_5", "text": "DuckDB's speed in joining and aggregating large datasets.\n\nHere are the links used in the video:\n\n- [Data analysis with DuckDB - Notebook](https://drive.google.com/file/d/1Y9XSs-LeSz-ZmnQj4OGP-Q4yDkPJrmsZ/view)\n- [Parquet file format](https://parquet.apache.org/) - a fast columnar storage format that's becoming a de facto standard for big data\n- [DuckDB](https://duckdb.org/) - a fast in-memory database that's very good with large-scale analysis\n- [Plotly Datasets](https://github.com/plotly/datas"}
{"source": "Course_content_jan_2025/data-analysis-with-duckdb.md", "chunk_id": "data-analysis-with-duckdb.md_part_6", "text": "abase that's very good with large-scale analysis\n- [Plotly Datasets](https://github.com/plotly/datasets/) - a collection of sample datasets for analysis. This includes the [Kaggle Flights Dataset](https://www.kaggle.com/datasets/usdot/flight-delays) that the notebook downloads as [2015_flights.parquet](https://github.com/plotly/datasets/raw/master/2015_flights.parquet)"}
{"source": "Course_content_jan_2025/visualizing-machine-learning.md", "chunk_id": "visualizing-machine-learning.md_part_1", "text": "## Visualizing Machine Learning\n\n[](https://youtu.be/sORnCj52COw)\n\nYou'll learn about improving customer retention, understanding black box models, and using clustering for market segmentation:\n\n- **Churn Reduction**: Use decision trees to identify customers likely to leave.\n- **Cost Efficiency**: Compare customer acquisition vs. retention costs.\n- **Model Improvement**: Apply SVMs and neural networks for better accuracy.\n- **Project Challenges**: Understand issues with black box models in imple"}
{"source": "Course_content_jan_2025/visualizing-machine-learning.md", "chunk_id": "visualizing-machine-learning.md_part_2", "text": "orks for better accuracy.\n- **Project Challenges**: Understand issues with black box models in implementation.\n- **K-Means Clustering**: Segment markets using demographic data.\n- **Data Visualization**: Interpret clustering results using maps and charts.\n- **Correlation Analysis**: Identify relationships between currency exchange rates.\n- **Tool Proficiency**: Utilize Excel, Python, and JavaScript for analysis and communication.\n- **Practical Application**: Tailor marketing strategies based on c"}
{"source": "Course_content_jan_2025/visualizing-machine-learning.md", "chunk_id": "visualizing-machine-learning.md_part_3", "text": " for analysis and communication.\n- **Practical Application**: Tailor marketing strategies based on cluster characteristics.\n\nHere are the links used in the video:\n\n- [Visualizing-Forecast-Models.xlsx](https://docs.google.com/spreadsheets/d/1oJdwjOuZMfnWX3DKw47IuGPD7yUO8vgg/view) - the spreadsheet used in the video"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-python.md", "chunk_id": "geospatial-analysis-with-python.md_part_1", "text": "## Geospatial Analysis with Python\n\n[](https://youtu.be/m_qayAJt-yE)\n\nYou'll learn how to perform geospatial analysis for location-based decision making, covering:\n\n- **Distance Calculation**: Compute distances between various store locations and a reference point, such as the Empire State Building.\n- **Data Visualization**: Visualize store locations on a map using Python libraries like Folium.\n- **Store Density Analysis**: Determine the number of stores within a specified radius.\n- **Proximity "}
{"source": "Course_content_jan_2025/geospatial-analysis-with-python.md", "chunk_id": "geospatial-analysis-with-python.md_part_2", "text": "**Store Density Analysis**: Determine the number of stores within a specified radius.\n- **Proximity Analysis**: Identify the closest and farthest stores from a specific location.\n- **Decision Making**: Use geospatial data to assess whether opening a new store is feasible based on existing store distribution.\n\nHere are links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1TwKw2pQ9XKSdTUUsTq_ulw7rb-xVhays?usp=sharing)\n- Learn about the [`pandas` package](https://p"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-python.md", "chunk_id": "geospatial-analysis-with-python.md_part_3", "text": "/drive/1TwKw2pQ9XKSdTUUsTq_ulw7rb-xVhays?usp=sharing)\n- Learn about the [`pandas` package](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html) and [video](https://youtu.be/vmEHCJofslg)\n- Learn about the [`numpy` package](https://numpy.org/doc/stable/user/whatisnumpy.html) and [video](https://youtu.be/8JfDAm9y_7s)\n- Learn about the [`folium` package](https://python-visualization.github.io/folium/latest/) and [video](https://youtu.be/t9Ed5QyO7qY)\n- Learn about the [`geopy` package]"}
{"source": "Course_content_jan_2025/geospatial-analysis-with-python.md", "chunk_id": "geospatial-analysis-with-python.md_part_4", "text": "hub.io/folium/latest/) and [video](https://youtu.be/t9Ed5QyO7qY)\n- Learn about the [`geopy` package](https://pypi.org/project/geopy/) and [video](https://youtu.be/3jj_5kVmPLs)"}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_1", "text": "## Browser: DevTools\n\n[Chrome DevTools](https://developer.chrome.com/docs/devtools/overview/) is the de facto standard for web development and data analysis in the browser.\nYou'll use this a lot when debugging and inspecting web pages.\n\nHere are the key features you'll use most:\n\n1. **Elements Panel**\n\n   - Inspect and modify HTML/CSS in real-time\n   - Copy CSS selectors for web scraping\n   - Debug layout issues with the Box Model\n\n   ```javascript\n   // Copy selector in Console\n   copy($0); // "}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_2", "text": "g layout issues with the Box Model\n\n   ```javascript\n   // Copy selector in Console\n   copy($0); // Copies selector of selected element\n   ```\n\n2. **Console Panel**\n\n   - JavaScript REPL environment\n   - Log and debug data\n   - Common console methods:\n\n   ```javascript\n   console.table(data); // Display data in table format\n   console.group(\"Name\"); // Group related logs\n   console.time(\"Label\"); // Measure execution time\n   ```\n\n3. **Network Panel**\n   - Monitor API requests and responses\n   - "}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_3", "text": "// Measure execution time\n   ```\n\n3. **Network Panel**\n   - Monitor API requests and responses\n   - Simulate slow connections\n   - Right-click on a request and select \"Copy as fetch\" to get the request.\n4. **Essential Keyboard Shortcuts**\n   - `Ctrl+Shift+I` (Windows) / `Cmd+Opt+I` (Mac): Open DevTools\n   - `Ctrl+Shift+C`: Select element to inspect\n   - `Ctrl+L`: Clear console\n   - `$0`: Reference currently selected element\n   - `$$('selector')`: Query selector all (returns array)\n\nVideos from C"}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_4", "text": " currently selected element\n   - `$$('selector')`: Query selector all (returns array)\n\nVideos from Chrome Developers (37 min total):\n\n- [Fun & powerful: Intro to Chrome DevTools](https://youtu.be/t1c5tNPpXjs) (5 min)\n- [Different ways to open Chrome DevTools](https://youtu.be/X65TAP8a530) (5 min)\n- [Faster DevTools navigation with shortcuts and settings](https://youtu.be/xHusjrb_34A) (3 min)\n- [How to log messages in the Console](https://youtu.be/76U0gtuV9AY) (6 min)\n- [How to speed up your work"}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_5", "text": "w to log messages in the Console](https://youtu.be/76U0gtuV9AY) (6 min)\n- [How to speed up your workflow with Console shortcuts](https://youtu.be/hdRDTj6ObiE) (6 min)\n- [HTML vs DOM? Let\u2019s debug them](https://youtu.be/J-02VNxE7lE) (5 min)\n- [Caching demystified: Inspect, clear, and disable caches](https://youtu.be/mSMb-aH6sUw) (7 min)\n- [Console message logging](https://youtu.be/76U0gtuV9AY) (6 min)\n- [Console workflow shortcuts](https://youtu.be/hdRDTj6ObiE) (6 min)\n- [HTML vs DOM debugging](ht"}
{"source": "Course_content_jan_2025/devtools.md", "chunk_id": "devtools.md_part_6", "text": "n)\n- [Console workflow shortcuts](https://youtu.be/hdRDTj6ObiE) (6 min)\n- [HTML vs DOM debugging](https://youtu.be/J-02VNxE7lE) (5 min)\n- [Cache inspection and management](https://youtu.be/mSMb-aH6sUw) (7 min)"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_1", "text": "## OpenAI TTS-1 for Text-to-Speech Generation\n\nOpenAI's Text-to-Speech API (TTS-1) converts text into natural-sounding speech using state-of-the-art neural models. Released in March 2025, it offers multiple voices and control over speaking style and speed.\n\n[](https://youtu.be/lXb0L16ISAc)\n\n### Simple speech generation\n\nTo generate speech from text, send a POST request to the speech endpoint:\n\n```bash\ncurl https://api.openai.com/v1/audio/speech \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  "}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_2", "text": "bash\ncurl https://api.openai.com/v1/audio/speech \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"model\": \"tts-1\",\n    \"input\": \"Hello! This is a test of the OpenAI text to speech API.\",\n    \"voice\": \"alloy\"\n  }' --output speech.mp3\n```\n\n### Generation options\n\nControl the output with these parameters:\n\n- `model`: `tts-1` (standard) or `tts-1-hd` (higher quality)\n- `input`: Text to convert (max 4096 characters)\n- `voice`: `alloy`, `echo`, `fab"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_3", "text": "` (higher quality)\n- `input`: Text to convert (max 4096 characters)\n- `voice`: `alloy`, `echo`, `fable`, `onyx`, `nova`, or `shimmer`\n- `response_format`: `mp3` (default), `opus`, `aac`, or `flac`\n- `speed`: 0.25 to 4.0 (default 1.0)\n\n```bash\ncurl https://api.openai.com/v1/audio/speech \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"model\": \"tts-1-hd\",\n    \"input\": \"Welcome to our podcast! Today we will be discussing artificial intelligence.\""}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_4", "text": "s-1-hd\",\n    \"input\": \"Welcome to our podcast! Today we will be discussing artificial intelligence.\",\n    \"voice\": \"nova\",\n    \"response_format\": \"mp3\",\n    \"speed\": 1.2\n  }' --output podcast_intro.mp3\n```\n\n### Costs and optimization\n\nPricing per 1,000 characters:\n\n- `tts-1`: $0.015\n- `tts-1-hd`: $0.030\n\nTo optimize costs:\n\n- Use `tts-1` for drafts, `tts-1-hd` for final versions\n- Batch process text in chunks\n- Cache frequently used phrases\n- Choose lower quality formats for testing\n\n## Google G"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_5", "text": "xt in chunks\n- Cache frequently used phrases\n- Choose lower quality formats for testing\n\n## Google Gemini Speech Studio for Text-to-Speech\n\nGoogle's Gemini Speech Studio offers advanced text-to-speech capabilities with support for multiple languages, voices, and speaking styles.\n\n[](https://youtu.be/Rx8PmBo9vfI)\n\nFor this, you need a `GOOGLE_API_KEY`. You can:\n\n1. Go to the Google Cloud Console: [https://console.cloud.google.com/apis/library/texttospeech.googleapis.com](https://console.cloud.goo"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_6", "text": "https://console.cloud.google.com/apis/library/texttospeech.googleapis.com](https://console.cloud.google.com/apis/library/texttospeech.googleapis.com), select or create the project you want and click **Enable**.\n2. **Create an API key**. In the Console, navigate to **APIs & Services \u2192 Credentials** and click **+ Create Credentials \u2192 API key**. Copy the generated key (it\u2019ll look like `AIza\u2026`).\n\n### Simple speech generation\n\nGenerate speech using the Gemini API:\n\n```bash\ncurl -X POST \"https://textt"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_7", "text": "Simple speech generation\n\nGenerate speech using the Gemini API:\n\n```bash\ncurl -X POST \"https://texttospeech.googleapis.com/v1/text:synthesize?key=$GOOGLE_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"input\": { \"text\": \"Hello, welcome to Gemini Speech Studio!\" },\n    \"voice\": { \"languageCode\": \"en-US\", \"name\": \"en-US-Neural2-A\" },\n    \"audioConfig\": { \"audioEncoding\": \"MP3\" }\n  }' | jq -r .audioContent | base64 --decode > gemini-speech.mp3\n```\n\n### Generation options\n\nCustomize "}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_8", "text": " | jq -r .audioContent | base64 --decode > gemini-speech.mp3\n```\n\n### Generation options\n\nCustomize synthesis with these parameters:\n\n- `voice`:\n  - `languageCode`: Language code (e.g., \"en-US\", \"es-ES\")\n  - `name`: Voice model name\n  - `ssmlGender`: \"NEUTRAL\", \"MALE\", or \"FEMALE\"\n- `audioConfig`:\n  - `audioEncoding`: \"MP3\", \"WAV\", \"OGG_OPUS\"\n  - `speakingRate`: 0.25 to 4.0\n  - `pitch`: -20.0 to 20.0\n  - `volumeGainDb`: Volume adjustment\n\n```bash\ncurl -X POST \"https://texttospeech.googleapis.com"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_9", "text": "0.0\n  - `volumeGainDb`: Volume adjustment\n\n```bash\ncurl -X POST \"https://texttospeech.googleapis.com/v1/text:synthesize?key=$GOOGLE_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"input\": {\n      \"text\": \"This is a demonstration of advanced speech settings.\"\n    },\n    \"voice\": {\n      \"languageCode\": \"en-US\",\n      \"name\": \"en-US-Neural2-D\"\n    },\n    \"audioConfig\": {\n      \"audioEncoding\": \"MP3\",\n      \"speakingRate\": 1.2,\n      \"pitch\": 2.0,\n      \"volumeGainDb\": 1.0\n    }\n  }"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_10", "text": "Encoding\": \"MP3\",\n      \"speakingRate\": 1.2,\n      \"pitch\": 2.0,\n      \"volumeGainDb\": 1.0\n    }\n  }' | jq -r .audioContent | base64 --decode > gemini-options.mp3\n```\n\n### SSML support\n\nBoth APIs support Speech Synthesis Markup Language (SSML) for fine-grained control:\n\n```bash\ncurl -X POST \"https://texttospeech.googleapis.com/v1/text:synthesize?key=$GOOGLE_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"input\": {\n      \"ssml\": \"<speak>Hello <break time=\\\"1s\\\"/> This text has a p"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_11", "text": "on/json\" \\\n  -d '{\n    \"input\": {\n      \"ssml\": \"<speak>Hello <break time=\\\"1s\\\"/> This text has a pause and <emphasis level=\\\"strong\\\">emphasized words</emphasis>.</speak>\"\n    },\n    \"voice\": { \"languageCode\": \"en-US\", \"name\": \"en-US-Neural2-A\" },\n    \"audioConfig\": { \"audioEncoding\": \"MP3\" }\n  }' | jq -r .audioContent | base64 --decode > gemini-ssml.mp3\n```\n\n### Costs and optimization\n\nPricing (per character):\n\n- Standard voices: $0.000004\n- Neural voices: $0.000016\n- Neural2 voices: $0.00002"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_12", "text": "(per character):\n\n- Standard voices: $0.000004\n- Neural voices: $0.000016\n- Neural2 voices: $0.000024\n\nTo optimize:\n\n- Use standard voices for development\n- Cache common phrases\n- Batch process where possible\n- Choose appropriate audio quality\n\n### Python implementation\n\nHere's a simple Python wrapper for both APIs:\n\n```python\nimport requests\nimport base64\nimport os\n\nopenai_key = os.getenv(\"OPENAI_API_KEY\")\ngoogle_key = os.getenv(\"GOOGLE_API_KEY\")\n\ndef generate_openai_speech(text, voice=\"alloy\","}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_13", "text": "_API_KEY\")\ngoogle_key = os.getenv(\"GOOGLE_API_KEY\")\n\ndef generate_openai_speech(text, voice=\"alloy\", model=\"tts-1\"):\n    response = requests.post(\n        \"https://api.openai.com/v1/audio/speech\",\n        headers={\"Authorization\": f\"Bearer {openai_key}\"},\n        json={\"model\": model, \"input\": text, \"voice\": voice}\n    )\n    return response.content\n\ndef generate_gemini_speech(text, voice_name=\"en-US-Neural2-A\"):\n    response = requests.post(\n        f\"https://texttospeech.googleapis.com/v1/text:"}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_14", "text": "US-Neural2-A\"):\n    response = requests.post(\n        f\"https://texttospeech.googleapis.com/v1/text:synthesize?key={google_key}\",\n        json={\n            \"input\": {\"text\": text},\n            \"voice\": {\"languageCode\": \"en-US\", \"name\": voice_name},\n            \"audioConfig\": {\"audioEncoding\": \"MP3\"}\n        }\n    )\n    return base64.b64decode(response.json()[\"audioContent\"])\n\nif __name__ == \"__main__\":\n    with open(\"openai_speech.mp3\", \"wb\") as f:\n        f.write(generate_openai_speech(\"Hello "}
{"source": "Course_content_jan_2025/llm-speech.md", "chunk_id": "llm-speech.md_part_15", "text": "in__\":\n    with open(\"openai_speech.mp3\", \"wb\") as f:\n        f.write(generate_openai_speech(\"Hello from OpenAI's text to speech API!\"))\n    with open(\"gemini_speech.mp3\", \"wb\") as f:\n        f.write(generate_gemini_speech(\"Hello from Google's Gemini Speech Studio!\"))\n```"}
{"source": "Course_content_jan_2025/hosting-llms-runpod.md", "chunk_id": "hosting-llms-runpod.md_part_1", "text": "## Hosting LLMs on Runpod\n\nThis material will likely be added in the May 2025 term. It is not part of the Jan 2025 term."}
{"source": "Course_content_jan_2025/data-aggregation-in-excel.md", "chunk_id": "data-aggregation-in-excel.md_part_1", "text": "## Data Aggregation in Excel\n\n[](https://youtu.be/NkpT0dDU8Y4)\n\nYou'll learn data aggregation and visualization techniques in Excel, covering:\n\n- **Data Cleanup**: Remove empty columns and rows with missing values.\n- **Creating Excel Tables**: Convert raw data into tables for easier manipulation and formula application.\n- **Date Manipulation**: Extract week, month, and year from date columns using Excel functions (WEEKNUM, TEXT).\n- **Color Scales**: Apply color scales to visualize clusters and t"}
{"source": "Course_content_jan_2025/data-aggregation-in-excel.md", "chunk_id": "data-aggregation-in-excel.md_part_2", "text": " Excel functions (WEEKNUM, TEXT).\n- **Color Scales**: Apply color scales to visualize clusters and trends in data over time.\n- **Pivot Tables**: Create pivot tables to aggregate data by location and date, summarizing values weekly and monthly.\n- **Sparklines**: Use sparklines to visualize trends within pivot tables, making data patterns more apparent.\n- **Data Bars**: Implement data bars for graphical illustrations of numerical columns, showing trends and waves.\n\nHere are links used in the video"}
{"source": "Course_content_jan_2025/data-aggregation-in-excel.md", "chunk_id": "data-aggregation-in-excel.md_part_3", "text": "ical illustrations of numerical columns, showing trends and waves.\n\nHere are links used in the video:\n\n- [COVID-19 data Excel file - raw data](https://docs.google.com/spreadsheets/d/14HLgSmME95q--6lcBv9pUstqHL183wTd/view)"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_1", "text": "# Live Session: 21 Jan 2025\n\n[](https://youtu.be/0e0RhXREnxU)\n\n**Q1: How much depth of knowledge is needed for the tools in the TDS course, specifically for GA1 and GA2?**\n\n**A1:** The goal is to give you sufficient proficiency to execute the purpose of the tools, not to make you an expert. The focus is on GA1 and GA2 because of the approaching deadline. Basic knowledge will suffice; how deep you go is up to you. The biggest challenge is usually reading and understanding documentation. These ses"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_2", "text": "go is up to you. The biggest challenge is usually reading and understanding documentation. These sessions are designed to help you overcome that hurdle.\n\n**Q2: What is the tool to create the API?**\n\n**A2:** FastAPI. It will be demonstrated in this session.\n\n**Q3: Will there be a review of the previous sessions?**\n\n**A3:** Recordings are available on the YouTube playlist. Summaries are also available on the Tools in Data Science website (the last item on the page). The summaries were generated us"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_3", "text": "le on the Tools in Data Science website (the last item on the page). The summaries were generated using AI, and the process is explained. An overarching summary may be added later, but not today.\n\n**Q4: In the week 2 GA assignment, when using FastAPI, question 9 asks for an authentication tool from NGrok. After three uses, it says the limitation has expired. What can we do?**\n\n**A4:** NGrok will be discussed in this session. The limitation is that you can only run one server or one tunnel at a t"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_4", "text": "e discussed in this session. The limitation is that you can only run one server or one tunnel at a time.\n\n**Q5: In the GitHub Actions section, question 7 asks about creating a FastAPI webpage using GitHub. It seems to require a premium version. Is there a workaround?**\n\n**A5:** You can do it without a premium version. The only time you might have an issue is if you're using Codespaces and run out of the 125-hour limitation. Students have free access to GitHub.\n\n**Q6: What is the tool to create t"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_5", "text": "of the 125-hour limitation. Students have free access to GitHub.\n\n**Q6: What is the tool to create the API?**\n\n**A6:** FastAPI.\n\n**Q7: Are the scores from the initial check (9/10 or 10/10) final, or will they be evaluated after submission?**\n\n**A7:** Whatever you last submitted is your final score.\n\n**Q8: In GA1, question 2 says to submit only the JSON body, not the headers. But if I don't submit headers, it shows an error. What should I do?**\n\n**A8:** This will be addressed toward the end of th"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_6", "text": "headers, it shows an error. What should I do?**\n\n**A8:** This will be addressed toward the end of the session.\n\n**Q9: When running UVicorn on WSL, there are no issues. But on Windows, it seems there's an issue with anti-something, some shielders, or something on my computer, flagging it and preventing it from running. What should I do?**\n\n**A9:** Most web infrastructure runs on Linux servers (maybe 80%). These tools are designed with Linux in mind, and later ported to Windows. There will be some"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_7", "text": "e 80%). These tools are designed with Linux in mind, and later ported to Windows. There will be some issues running them on Windows. You can get Linux in Windows now using the Windows Subsystem for Linux (WSL). You need at least 8 GB of RAM to run it with reasonable performance. Anything less won't work or will work poorly. If you can, install WSL; it's worth it. Then these tools will work out of the box.\n\n**Q10: What is CI/CD?**\n\n**A10:** Continuous Integration/Continuous Deployment. It automat"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_8", "text": "the box.\n\n**Q10: What is CI/CD?**\n\n**A10:** Continuous Integration/Continuous Deployment. It automates tasks such as compiling, running, and sending code to devices. It reduces the time lag between finding a bug, fixing it, and pushing the fix to the devices that need it. This is useful in data science when pulling data from various places and quickly integrating findings into a workflow.\n\n**Q11: What is Vercel?**\n\n**A11:** Vercel is a platform to deploy applications. You can deploy quickly and "}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_9", "text": "What is Vercel?**\n\n**A11:** Vercel is a platform to deploy applications. You can deploy quickly and easily, and it automatically rebuilds when you push an update. You can deploy directly from your GitHub repo.\n\n**Q12: What is the difference between Docker run and Docker compose?**\n\n**A12:** Docker compose is for local testing. You can create a local network, give it a name, and test with four or five containers. For larger deployments, use Swarm (provided by Docker), Kubernetes, or Mesos.\n\n**Q13"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_10", "text": "ive containers. For larger deployments, use Swarm (provided by Docker), Kubernetes, or Mesos.\n\n**Q13: Can we wrap our MAD1 and MAD2 projects using Docker?**\n\n**A13:** Yes, that's possible.\n\n**Q14: Is there a demo where all the tools are used in a single project?**\n\n**A14:** There will be a separate session for the project, towards the end of this week or the beginning of next week. This session will show how all the tools fit together.\n\n**Q15: If someone goes through CSS, JavaScript, GitHub, and"}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_11", "text": "ll show how all the tools fit together.\n\n**Q15: If someone goes through CSS, JavaScript, GitHub, and REST API, will that cover 50% of the course?**\n\n**A15:** Yes, roughly. The core technologies (REST APIs, JavaScript, HTML, CSS) haven't changed much in 30 years. Learning these will give you a foundation to learn other tools more easily. The course will also spend significant time on LLMs and how they fit into the workflow."}
{"source": "Course_content_jan_2025/live-session-2025-01-21.md", "chunk_id": "live-session-2025-01-21.md_part_12", "text": "hey fit into the workflow."}
{"source": "Course_content_jan_2025/tds-ta-instructions.md", "chunk_id": "tds-ta-instructions.md_part_1", "text": "# TDS TA Instructions\n\nThe TDS TA is a virtual assistant that helps you with your doubts.\n\nIt has been trained on course content created as follows:\n\n```bash\n# Clone the course repository\ngit clone https://github.com/sanand0/tools-in-data-science-public.git\ncd tools-in-data-science-public\n\n# Create a prompt file for the TA\nPYTHONUTF8=1 uvx files-to-prompt --cxml *.md -o tds-content.xml\n# Replace the source with the URL of the course\nsed -i \"s/<source>/<source>https:\\/\\/tds.s-anand.net\\/#\\//g\" td"}
{"source": "Course_content_jan_2025/tds-ta-instructions.md", "chunk_id": "tds-ta-instructions.md_part_2", "text": "he source with the URL of the course\nsed -i \"s/<source>/<source>https:\\/\\/tds.s-anand.net\\/#\\//g\" tds-content.xml\n```\n\nAdditionally, we visit each of the evaluation links on <https://exam.sanand.workers.dev/>, [copy it as Markdown](https://tools.s-anand.net/page2md/), and add it to the content, called `ga1.md`, `ga2.md`, etc.\n\nThese files are uploaded to the [IITM TDS Teaching Assistant](https://chatgpt.com/g/g-mZqKVxKDx-iitm-tds-teaching-assistant).\n\nTake a look at the GPT's instructions. These"}
{"source": "Course_content_jan_2025/tds-ta-instructions.md", "chunk_id": "tds-ta-instructions.md_part_3", "text": "hatgpt.com/g/g-mZqKVxKDx-iitm-tds-teaching-assistant).\n\nTake a look at the GPT's instructions. These were generated by the [OpenAI Prompt Generation](https://platform.openai.com/docs/guides/prompt-generation) tool.\n\n```markdown\nAs a Teaching Assistant (TA) for the Tools in Data Science course at IIT Madras, guide students through course-related questions.\n\n1. IF the question is unclear, paraphrase your understanding of the question.\n2. Cite all relevant sections from `tds-content.xml` or `ga*.md"}
{"source": "Course_content_jan_2025/tds-ta-instructions.md", "chunk_id": "tds-ta-instructions.md_part_4", "text": " your understanding of the question.\n2. Cite all relevant sections from `tds-content.xml` or `ga*.md`. Begin with: \"According to [this reference](https://tds.s-anand.net/#/...), ...\". Cite ONLY from the relevant <source>. ALWAYS cite verbatim. Mention ALL material relevant to the question.\n3. Search online for additional answers. Share results WITH CITATION LINKS.\n4. Think step-by-step. Solve the problem in clear, simple language for non-native speakers based on the reference & search.\n5. Follow"}
{"source": "Course_content_jan_2025/tds-ta-instructions.md", "chunk_id": "tds-ta-instructions.md_part_5", "text": "problem in clear, simple language for non-native speakers based on the reference & search.\n5. Follow-up: Ask thoughtful questions to help students explore and learn.\n```"}
{"source": "Course_content_jan_2025/live-sessions.md", "chunk_id": "live-sessions.md_part_1", "text": "# Live Sessions\n\nLive sessions by the instructors and TAs are recorded and uploaded to YouTube.\n\n[](https://www.youtube.com/playlist?list=PL_h5u1jMeBCl1BquBhgunA4t08XAxsA-C)\n\nThese were downloaded using [yt-dlp](https://github.com/yt-dlp/yt-dlp). The options compress the audio optimized for speech.\n\n```bash\nyt-dlp --extract-audio --audio-format opus --embed-thumbnail --postprocessor-args \\\n  \"-c:a libopus -b:a 12k -ac 1 -application voip -vbr off -ar 8000 -cutoff 4000 -frame_duration 60 -compres"}
{"source": "Course_content_jan_2025/live-sessions.md", "chunk_id": "live-sessions.md_part_2", "text": " libopus -b:a 12k -ac 1 -application voip -vbr off -ar 8000 -cutoff 4000 -frame_duration 60 -compression_level 10\" \\\n  $YOUTUBE_URL\n```\n\nThey were then transcribed by Gemini 1.5 Flash 002 (currently the best model from a price-quality perspective for audio transcription).\n\nSystem prompt:\n\n```\nYou are an expert transcriber of data science audio tutorials\n```\n\nUser prompt:\n\n```\nTranscribe this audio tutorial about Tools in Data Science (TDS) as an FAQ.\nSummarize the student questions faithfully.\nS"}
{"source": "Course_content_jan_2025/live-sessions.md", "chunk_id": "live-sessions.md_part_3", "text": " tutorial about Tools in Data Science (TDS) as an FAQ.\nSummarize the student questions faithfully.\nSummarize the answers succinctly, without missing information, in a conversational style.\nAvoid repeating questions, consolidating similar ones.\nPrefer \"You\" and \"I\" instead of \"student\" and \"instructor\".\nFor example:\n\n**Q1: [Concisely framed question]**\n\n**A1:** [Succinct answer]\n```"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_1", "text": "# Project: TDS Virtual TA\n\nCreate a virtual Teaching Assistant Discourse responder.\n\n## Background\n\nYou are a clever student who has joined IIT Madras' Online Degree in Data Science. You have just enrolled in the [Tools in Data Science](https://tds.s-anand.net/#/2025-01/) course.\n\nOut of kindness for your teaching assistants, you have decided to build an API that can automatically answer student questions on their behalf based on:\n\n- [Course content](https://tds.s-anand.net/#/2025-01/) with cont"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_2", "text": "uestions on their behalf based on:\n\n- [Course content](https://tds.s-anand.net/#/2025-01/) with content for TDS Jan 2025 as on 15 Apr 2025.\n- [TDS Discourse posts](https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34) with content from 1 Jan 2025 - 14 Apr 2025.\n\n## Scrape the data\n\nTo make sure you can answer these questions, you will need to extract the data from the above source.\n\n## Create an API\n\nYour application exposes an API endpoint. You may host it anywhere. Let's assume it's a"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_3", "text": "eate an API\n\nYour application exposes an API endpoint. You may host it anywhere. Let's assume it's at `https://app.example.com/api/`.\n\nThe endpoint must accept a POST request, e.g. `POST https://app.example.com/api/` with a student question as well as optional base64 file attachments as JSON.\n\nFor example, here's how anyone can make a request:\n\n```bash\ncurl \"https://app.example.com/api/\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"question\\\": \\\"Should I use gpt-4o-mini which AI proxy supp"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_4", "text": "ontent-Type: application/json\" \\\n  -d \"{\\\"question\\\": \\\"Should I use gpt-4o-mini which AI proxy supports, or gpt3.5 turbo?\\\", \\\"image\\\": \\\"$(base64 -w0 project-tds-virtual-ta-q1.webp)\\\"}\"\n```\n\nThis is a [real question](https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939) and uses this [screenshot](images/project-tds-virtual-ta-q1.webp):\n\n\n\nThe response must be a JSON object like this:\n\n```json\n{\n  \"answer\": \"You must use `gpt-3.5-turbo-0125`, even if the AI Proxy only"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_5", "text": "ject like this:\n\n```json\n{\n  \"answer\": \"You must use `gpt-3.5-turbo-0125`, even if the AI Proxy only supports `gpt-4o-mini`. Use the OpenAI API directly for this question.\",\n  \"links\": [\n    {\n      \"url\": \"https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/4\",\n      \"text\": \"Use the model that\u2019s mentioned in the question.\"\n    },\n    {\n      \"url\": \"https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/3\",\n      \"text\": \"My understanding is"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_6", "text": "onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/3\",\n      \"text\": \"My understanding is that you just have to use a tokenizer, similar to what Prof. Anand used, to get the number of tokens and multiply that by the given rate.\"\n    }\n  ]\n}\n```\n\nThe response must be sent within 30 seconds.\n\n## Evaluate your application\n\nHere are a few [sample questions and evaluation parameters](project-tds-virtual-ta-promptfoo.yaml \":ignore\"). These are **indicative**. The actual evaluation could ask"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_7", "text": "-tds-virtual-ta-promptfoo.yaml \":ignore\"). These are **indicative**. The actual evaluation could ask _any_ realistic student question.\n\nTo run this:\n\n1. Edit [`project-tds-virtual-ta-promptfoo.yaml`](project-tds-virtual-ta-promptfoo.yaml \":ignore\") to replace `providers[0].config.url` with your API URL.\n2. Run this script:\n\n   ```bash\n   npx -y promptfoo eval --config project-tds-virtual-ta-promptfoo.yaml\n   ```\n\n## Deploy your application\n\nDeploy your application to a public URL that can be acc"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_8", "text": "foo.yaml\n   ```\n\n## Deploy your application\n\nDeploy your application to a public URL that can be accessed by anyone. You may use any platform.\n\n(If you use ngrok, ensure that it is running continuously until you get your results.)\n\n## Share your code\n\n- [Create a new _public_ GitHub repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository)\n- [Add an MIT `LICENSE` file](https://docs.github.com/en/communities/setting-up-your-project-for-healt"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_9", "text": "[Add an MIT `LICENSE` file](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository)\n- Commit and push your code\n\n## Submit your URL\n\nSubmit your GitHub repository URL and your API endpoint URL at https://exam.sanand.workers.dev/tds-project-virtual-ta\n\n## Evaluation\n\n- **Pre-requisites**: Your repository **MUST** meet the following criteria to be eligible for evaluation\n  - Your GitHub repository exists and is publicly accessible\n"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_10", "text": "criteria to be eligible for evaluation\n  - Your GitHub repository exists and is publicly accessible\n  - Your GitHub repository has a `LICENSE` file with the MIT license in the root folder\n- We will use a modified version of [`project-tds-virtual-ta-promptfoo.yaml`](project-tds-virtual-ta-promptfoo.yaml \":ignore\") with 10 realistic questions. Correct answers will be awarded up to 2 marks each.\n- Your score will be the sum of the marks above. No normalization. What you get is what you get.\n\nBonus:"}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_11", "text": "ur score will be the sum of the marks above. No normalization. What you get is what you get.\n\nBonus:\n\n- 1 mark if your GitHub repo includes a script that scrapes the Discourse posts across a date range from a Discourse course page like [TDS](https://discourse.onlinedegree.iitm.ac.in/c/courses/tds-kb/34)\n- 2 marks if we deploy your solution (with minimal modifications) as an official solution for students to use."}
{"source": "Course_content_jan_2025/project-tds-virtual-ta.md", "chunk_id": "project-tds-virtual-ta.md_part_12", "text": "tudents to use."}
{"source": "Course_content_jan_2025/cleaning-data-with-openrefine.md", "chunk_id": "cleaning-data-with-openrefine.md_part_1", "text": "## Cleaning Data with OpenRefine\n\n[](https://youtu.be/zxEtfHseE84)\n\nThis session covers the use of OpenRefine for data cleaning, focusing on resolving entity discrepancies:\n\n- **Data Upload and Project Creation**: Import data into OpenRefine and create a new project for analysis.\n- **Faceting Data**: Use text facets to group similar entries and identify frequency of address crumbs.\n- **Clustering Methodology**: Apply clustering algorithms to merge similar entries with minor differences, such as "}
{"source": "Course_content_jan_2025/cleaning-data-with-openrefine.md", "chunk_id": "cleaning-data-with-openrefine.md_part_2", "text": "Methodology**: Apply clustering algorithms to merge similar entries with minor differences, such as punctuation.\n- **Manual and Automated Clustering**: Learn to merge clusters manually or in one go, trusting the system's clustering accuracy.\n- **Entity Resolution**: Clean and save the data by resolving multiple versions of the same entity using Open Refine.\n\nHere are links used in the video:\n\n- [OpenRefine software](https://openrefine.org)\n- [Dataset for OpenRefine](https://drive.google.com/file"}
{"source": "Course_content_jan_2025/cleaning-data-with-openrefine.md", "chunk_id": "cleaning-data-with-openrefine.md_part_3", "text": "penRefine software](https://openrefine.org)\n- [Dataset for OpenRefine](https://drive.google.com/file/d/1ccu0Xxk8UJUa2Dz4lihmvzhLjvPy42Ai/view)"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_1", "text": "## Gemini Flash Experimental Image Generation and Editing APIs\n\nIn March 2025, Google introduced native image generation and editing capabilities in the Gemini 2.0 Flash Experimental model. You can now generate and iteratively edit images via a single REST endpoint ([Experiment with Gemini 2.0 Flash native image generation](https://developers.googleblog.com/en/experiment-with-gemini-20-flash-native-image-generation/), [Generate images | Gemini API | Google AI for Developers](https://ai.google.de"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_2", "text": "e-image-generation/), [Generate images | Gemini API | Google AI for Developers](https://ai.google.dev/gemini-api/docs/image-generation)).\n\n[](https://youtu.be/wgs4UYx6quY) ([How to use Latest Gemini 2.0 Native Image Generation with API?](https://www.youtube.com/watch?v=wgs4UYx6quY))\n\n### Simple image generation\n\nTo generate a basic image, send a POST request to the `generateContent` method:\n\n```bash\ncurl \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generati"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_3", "text": "sh\ncurl \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=$GEMINI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -X POST \\\n  -d '{\n    \"contents\": [{ \"parts\": [{ \"text\": \"A serene landscape of rolling hills at sunrise, digital art\" }] }],\n    \"generationConfig\": { \"responseModalities\": [\"TEXT\", \"IMAGE\"] }\n  }' | jq -r '.candidates[].content.parts[] | select(.inlineData) | .inlineData.data' | base64 --decode > image.png\n```\n\nR"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_4", "text": "tes[].content.parts[] | select(.inlineData) | .inlineData.data' | base64 --decode > image.png\n```\n\nReplace `$GEMINI_API_KEY` with your key. ([Gemini API | Google AI for Developers](https://ai.google.dev/gemini-api/docs))\n\n### Generation options\n\nYou can tweak the output with these `generationConfig` parameters:\n\n- `responseModalities`: Modalities to return (`TEXT`, `IMAGE`).\n- `temperature` (0.0\u20132.0): Controls randomness (default 1.0).\n- `topP` (0.0\u20131.0): Nucleus sampling threshold.\n- `topK`: To"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_5", "text": ".0): Controls randomness (default 1.0).\n- `topP` (0.0\u20131.0): Nucleus sampling threshold.\n- `topK`: Token selection cutoff.\n- `maxOutputTokens`: Max tokens for text parts.\n- `stopSequences`: Sequences to end generation.\n- `seed`: For reproducibility.\n\n```bash\ncurl \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=$GEMINI_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -X POST \\\n  -d '{\n    \"contents\": [{ \"parts\": [{ \"text\": \"A f"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_6", "text": "H \"Content-Type: application/json\" \\\n  -X POST \\\n  -d '{\n    \"contents\": [{ \"parts\": [{ \"text\": \"A futuristic city skyline at dusk, neon lights\" }] }],\n    \"generationConfig\": {\n      \"responseModalities\": [\"TEXT\", \"IMAGE\"],\n      \"temperature\": 0.7,\n      \"topP\": 0.9,\n      \"maxOutputTokens\": 1024\n    }\n  }' | jq -r '.candidates[].content.parts[] | select(.inlineData) | .inlineData.data' | base64 --decode > image.png\n```\n\n[Image Generation Docs](https://ai.google.dev/gemini-api/docs/image-gener"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_7", "text": " --decode > image.png\n```\n\n[Image Generation Docs](https://ai.google.dev/gemini-api/docs/image-generation)\n\n### Simple image editing\n\nTo edit an existing image, include it in the `contents` as `inlineData` (base64-encoded):\n\n```bash\ncurl \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp-image-generation:generateContent?key=$GEMINI_API_KEY\" \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n      \"contents\": [{\n        \"parts\":[\n            {\"text\": \"Replace the bac"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_8", "text": "ation/json' \\\n    -d '{\n      \"contents\": [{\n        \"parts\":[\n            {\"text\": \"Replace the background with a starry night sky\"},\n            {\"inline_data\": {\"mime_type\":\"image/jpeg\", \"data\": \"'$(base64 -w 0 cat.jpg)'\"}}\n        ]\n      }],\n      \"generationConfig\": {\"responseModalities\": [\"TEXT\", \"IMAGE\"]}\n    }' | jq -r '.candidates[].content.parts[] | select(.inlineData) | .inlineData.data' | base64 --decode > image.png\n```\n\n[Image Editing Docs](https://ai.google.dev/gemini-api/docs/ima"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_9", "text": "a' | base64 --decode > image.png\n```\n\n[Image Editing Docs](https://ai.google.dev/gemini-api/docs/image-generation)\n\n### Editing options\n\nEditing requests support:\n\n- `inlineData`: Embed raw image bytes.\n- `fileData`: Reference public URLs.\n- All `generationConfig` options listed above.\n- `safetySettings`: Per-request safety rules.\n- Multi-turn edits by repeating `contents` in conversation history.\n\n### Costs and optimization\n\nGemini 2.0 Flash Experimental uses token-based billing:\n\n- **Input** ("}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_10", "text": "\n\n### Costs and optimization\n\nGemini 2.0 Flash Experimental uses token-based billing:\n\n- **Input** (text/image/video): free tier, then $0.10 per 1M tokens.\n- **Output** (text/image): free tier, then $0.40 per 1M tokens.\n- **Per-image flat cost** for Pro models: ~$0.001315 /image ([Gemini Developer API Pricing | Gemini API | Google AI for Developers](https://ai.google.dev/gemini-api/docs/pricing), [Solved: Re: Outdated Gemini Pro image pricing? By tile, or...](https://www.googlecloudcommunity.com"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_11", "text": "[Solved: Re: Outdated Gemini Pro image pricing? By tile, or...](https://www.googlecloudcommunity.com/gc/AI-ML/Outdated-Gemini-Pro-image-pricing-By-tile-or-by-image/m-p/813755)).\n\nTo optimize:\n\n- Use smaller image sizes by setting `responseMimeType`.\n- Cache or reuse prompts with `cachedContent`.\n- Lower `candidateCount` or `temperature` for fewer tokens.\n\n## OpenAI gpt-image-1 Model for Image Generation and Editing\n\nOpenAI\u2019s GPT Image 1 (`gpt-image-1`) is a state-of-the-art multimodal model rele"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_12", "text": "ration and Editing\n\nOpenAI\u2019s GPT Image 1 (`gpt-image-1`) is a state-of-the-art multimodal model released on April 23, 2025, for high-fidelity image creation and editing.\n\n[](https://youtu.be/k-G71JZA75A)\n\n### Simple image generation\n\nUse the Image Generations endpoint:\n\n```bash\ncurl 'https://api.openai.com/v1/images/generations' \\\n  -H 'Content-Type: application/json' \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-image-1\",\n    \"prompt\": \"A whimsical illustration of a"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_13", "text": " $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-image-1\",\n    \"prompt\": \"A whimsical illustration of a cat playing chess\",\n    \"n\": 1,\n    \"size\": \"1024x1024\"\n  }' > image.png\n```\n\n([Generate Image | OpenAI API - Postman](https://www.postman.com/devrel/openai/request/riub8s3/generate-image))\n\n### Generation options\n\nAdjust these JSON parameters:\n\n- `model`: `gpt-image-1` (default).\n- `prompt`: Text description.\n- `n`: Number of images.\n- `size`: `256x256`, `512x512`, or `1024x1024`.\n- `response_fo"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_14", "text": "description.\n- `n`: Number of images.\n- `size`: `256x256`, `512x512`, or `1024x1024`.\n- `response_format`: `\"url\"` (default) or `\"b64_json\"`.\n\n```json\n{\n  \"model\": \"gpt-image-1\",\n  \"prompt\": \"...\",\n  \"n\": 2,\n  \"size\": \"512x512\",\n  \"response_format\": \"b64_json\"\n}\n```\n\n### Simple image editing\n\nUse the Edits endpoint with an image and a mask:\n\n```bash\ncurl https://api.openai.com/v1/images/edits \\\n  -H 'Content-Type: application/json' \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"mo"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_15", "text": "-H 'Content-Type: application/json' \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -d '{\n    \"model\": \"gpt-image-1\",\n    \"image\": \"data:image/png;base64,<BASE64_IMAGE>\",\n    \"mask\": \"data:image/png;base64,<BASE64_MASK>\",\n    \"prompt\": \"Add a rainbow in the sky above the mountains\",\n    \"n\": 1,\n    \"size\": \"1024x1024\"\n  }'\n```\n\n([curl - What's the correct URL to test OpenAI API? - Stack Overflow](https://stackoverflow.com/questions/75041247/whats-the-correct-url-to-test-openai-api))\n\n### Edit"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_16", "text": "w](https://stackoverflow.com/questions/75041247/whats-the-correct-url-to-test-openai-api))\n\n### Editing options\n\nEditing requests accept:\n\n- `image`: Original image (base64 or URL).\n- `mask`: PNG mask for inpainting.\n- `prompt`: Instruction for the edit.\n- `n`, `size`, `response_format` as above.\n- Optional `user` field for attribution.\n\n### Costs and optimization\n\nGPT Image 1 pricing (per 1M tokens): text input $5, image input $10, image output $40. Rough per-image costs:\n\n- Low quality: ~$0.02"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_17", "text": "ns): text input $5, image input $10, image output $40. Rough per-image costs:\n\n- Low quality: ~$0.02\n- Medium quality: ~$0.07\n- High quality: ~$0.19 ([OpenAI's GPT-Image-1 API \u2014 Create Stunning Images for Your Apps!](https://medium.com/h7w/openais-gpt-image-1-api-create-stunning-images-for-your-apps-902c4f6745b1), [Usage of gpt-image-1 is priced per token, with ... - Hacker News](https://news.ycombinator.com/item?id=43787769))\n\nTo optimize:\n\n- Choose smaller sizes (`256x256`).\n- Generate fewer i"}
{"source": "Course_content_jan_2025/llm-image-generation.md", "chunk_id": "llm-image-generation.md_part_18", "text": "binator.com/item?id=43787769))\n\nTo optimize:\n\n- Choose smaller sizes (`256x256`).\n- Generate fewer images (`n:1`).\n- Use `response_format:\"url\"` to reduce payload.\n- Cache frequent prompts or images."}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_1", "text": "# Large Language Models\n\nThis module covers the practical usage of large language models (LLMs).\n\n**LLMs incur a cost.** For the May 2025 batch, use [aipipe.org](https://aipipe.org/) as a proxy.\nEmails with `@ds.study.iitm.ac.in` get a **$1 per calendar month** allowance. (Don't exceed that.)\n\nRead the [AI Pipe documentation](https://github.com/sanand0/aipipe) to learn how to use it. But in short:\n\n1. Replace `OPENAI_BASE_URL`, i.e. `https://api.openai.com/v1` with `https://aipipe.org/openrouter"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_2", "text": "\n\n1. Replace `OPENAI_BASE_URL`, i.e. `https://api.openai.com/v1` with `https://aipipe.org/openrouter/v1...` or `https://aipipe.org/openai/v1...`\n2. Replace `OPENAI_API_KEY` with the [`AIPIPE_TOKEN`](https://aipipe.org/login)\n3. Replace model names, e.g. `gpt-4.1-nano`, with `openai/gpt-4.1-nano`\n\nFor example, let's use [Gemini 2.0 Flash Lite](https://cloud.google.com/vertex-ai/generative-ai/docs/models/gemini/2-0-flash-lite) via [OpenRouter](https://openrouter.ai/google/gemini-2.0-flash-lite-001"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_3", "text": "odels/gemini/2-0-flash-lite) via [OpenRouter](https://openrouter.ai/google/gemini-2.0-flash-lite-001) for chat completions and [Text Embedding 3 Small](https://platform.openai.com/docs/models/text-embedding-3-small) via [OpenAI](https://platform.openai.com/docs/) for embeddings:\n\n```bash\ncurl https://aipipe.org/openrouter/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $AIPIPE_TOKEN\" \\\n  -d '{\n    \"model\": \"google/gemini-2.0-flash-lite-001\",\n    \"message"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_4", "text": "ation: Bearer $AIPIPE_TOKEN\" \\\n  -d '{\n    \"model\": \"google/gemini-2.0-flash-lite-001\",\n    \"messages\": [{ \"role\": \"user\", \"content\": \"What is 2 + 2?\"} }]\n  }'\n\ncurl https://aipipe.org/openai/v1/embeddings \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer $AIPIPE_TOKEN\" \\\n  -d '{ \"model\": \"text-embedding-3-small\", \"input\": \"What is 2 + 2?\" }'\n```\n\nOr using [`llm`](https://llm.datasette.io/):\n\n```bash\nllm keys set openai --value $AIPIPE_TOKEN\n\nexport OPENAI_BASE_URL=https://ai"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_5", "text": "atasette.io/):\n\n```bash\nllm keys set openai --value $AIPIPE_TOKEN\n\nexport OPENAI_BASE_URL=https://aipipe.org/openrouter/v1\nllm 'What is 2 + 2?' -m openrouter/google/gemini-2.0-flash-lite-001\n\nexport OPENAI_BASE_URL=https://aipipe.org/openai/v1\nllm embed -c 'What is 2 + 2' -m 3-small\n```\n\n**For a 50% discount** (but slower speed), use [Flex processing](https://platform.openai.com/docs/guides/flex-processing) by adding `service_tier: \"flex\"` to your JSON request.\n\n## AI Proxy - Jan 2025\n\nFor the J"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_6", "text": "rocessing) by adding `service_tier: \"flex\"` to your JSON request.\n\n## AI Proxy - Jan 2025\n\nFor the Jan 2025 batch, we had created API keys for everyone with an `iitm.ac.in` email to use `gpt-4o-mini` and `text-embedding-3-small`. Your usage is limited to **$1 per calendar month** for this course. Don't exceed that.\n\n**Use [AI Proxy](https://github.com/sanand0/aiproxy)** instead of OpenAI. Specifically:\n\n1. Replace your API to `https://api.openai.com/...` with `https://aiproxy.sanand.workers.dev/"}
{"source": "Course_content_jan_2025/large-language-models.md", "chunk_id": "large-language-models.md_part_7", "text": "ally:\n\n1. Replace your API to `https://api.openai.com/...` with `https://aiproxy.sanand.workers.dev/openai/...`\n2. Replace the `OPENAI_API_KEY` with the `AIPROXY_TOKEN` that someone will give you."}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_1", "text": "## Google Authentication with FastAPI\n\nSecure your API endpoints using Google ID tokens to restrict access to specific email addresses.\n\n[](https://youtu.be/4ExQYRCwbzw)\n\nGoogle Auth is the most commonly implemented single sign-on mechanism because:\n\n- It's popular and user-friendly. Users can log in with their existing Google accounts.\n- It's secure: Google supports OAuth2 and OpenID Connect to handle authentication.\n\nHere's how you build a FastAPI app that identifies the user.\n\n1. Go to the [G"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_2", "text": "andle authentication.\n\nHere's how you build a FastAPI app that identifies the user.\n\n1. Go to the [Google Cloud Console \u2013 Credentials](https://console.developers.google.com/apis/credentials) and click **Create Credentials > OAuth client ID**.\n2. Choose **Web application**, set your authorized redirect URIs (e.g., `http://localhost:8000/`).\n3. Copy the **Client ID** and **Client Secret** into a `.env` file:\n\n   ```env\n   GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com\n   GOOGLE_CLIENT_"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_3", "text": "nv` file:\n\n   ```env\n   GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com\n   GOOGLE_CLIENT_SECRET=your-client-secret\n   ```\n\n4. Create your FastAPI `app.py`:\n\n```python\n# /// script\n# dependencies = [\"python-dotenv\", \"fastapi\", \"uvicorn\", \"itsdangerous\", \"httpx\", \"authlib\"]\n# ///\n\nimport os\nfrom dotenv import load_dotenv\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import RedirectResponse\nfrom starlette.middleware.sessions import SessionMiddleware\nfrom authlib.integration"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_4", "text": "edirectResponse\nfrom starlette.middleware.sessions import SessionMiddleware\nfrom authlib.integrations.starlette_client import OAuth\n\nload_dotenv()\napp = FastAPI()\napp.add_middleware(SessionMiddleware, secret_key=\"create-a-random-secret-key\")\n\noauth = OAuth()\noauth.register(\n    name=\"google\",\n    client_id=os.getenv(\"GOOGLE_CLIENT_ID\"),\n    client_secret=os.getenv(\"GOOGLE_CLIENT_SECRET\"),\n    server_metadata_url=\"https://accounts.google.com/.well-known/openid-configuration\",\n    client_kwargs={\""}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_5", "text": "er_metadata_url=\"https://accounts.google.com/.well-known/openid-configuration\",\n    client_kwargs={\"scope\": \"openid email profile\"},\n)\n\n@app.get(\"/\")\nasync def application(request: Request):\n    user = request.session.get(\"user\")\n    # 3. For authenticated users: say hello\n    if user:\n        return f\"Hello {user['email']}\"\n    # 2. For users who have just logged in, save their details in the session\n    if \"code\" in request.query_params:\n        token = await oauth.google.authorize_access_toke"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_6", "text": "sion\n    if \"code\" in request.query_params:\n        token = await oauth.google.authorize_access_token(request)\n        request.session[\"user\"] = token[\"userinfo\"]\n        return RedirectResponse(\"/\")\n    # 1. For users who are logging in for the first time, redirect to Google login\n    return await oauth.google.authorize_redirect(request, request.url)\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, port=8000)\n```\n\nNow, run `uv run app.py`.\n\n1. When you visit <http://localhost"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_7", "text": "\n    uvicorn.run(app, port=8000)\n```\n\nNow, run `uv run app.py`.\n\n1. When you visit <http://localhost:8000/> you'll be redirected to a Google login page.\n2. When you log in, you'll be redirected back to http://localhost:8000/\n3. Now you'll see the email ID you logged in with.\n\nInstead of displaying the email, you can show different content based on the user. For example:\n\n- Allow access to specfic users and not others\n- Fetch the user's personalized information\n- Display different content based o"}
{"source": "Course_content_jan_2025/google-auth.md", "chunk_id": "google-auth.md_part_8", "text": "users and not others\n- Fetch the user's personalized information\n- Display different content based on the user"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_1", "text": "## Database: SQLite\n\nRelational databases are used to store data in a structured way. You'll often access databases created by others for analysis.\n\nPostgreSQL, MySQL, MS SQL, Oracle, etc. are popular databases. But the most installed database is [SQLite](https://www.sqlite.org/index.html). It's embedded into many devices and apps (e.g. your phone, browser, etc.). It's lightweight but very scalable and powerful.\n\nWatch these introductory videos to understand SQLite and how it's used in Python (3"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_2", "text": "e and powerful.\n\nWatch these introductory videos to understand SQLite and how it's used in Python (34 min):\n\n[](https://youtu.be/8Xyn8R9eKB8)\n\n[](https://youtu.be/Ohj-CqALrwk)\n\nThere are many non-relational databases (NoSQL) like [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html), [MongoDB](https://www.mongodb.com/docs/manual/), [Redis](https://redis.io/docs/latest/), etc. that you should know about and we may cover later.\n\nCore Concepts:\n\n```sql\n-- Creat"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_3", "text": "s/latest/), etc. that you should know about and we may cover later.\n\nCore Concepts:\n\n```sql\n-- Create a table\nCREATE TABLE users (\n    id INTEGER PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT UNIQUE,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Insert data\nINSERT INTO users (name, email) VALUES\n    ('Alice', 'alice@example.com'),\n    ('Bob', 'bob@example.com');\n\n-- Query data\nSELECT name, COUNT(*) as count\nFROM users\nGROUP BY name\nHAVING count > 1;\n\n-- Join tables\nSELECT u.name"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_4", "text": "ECT name, COUNT(*) as count\nFROM users\nGROUP BY name\nHAVING count > 1;\n\n-- Join tables\nSELECT u.name, o.product\nFROM users u\nLEFT JOIN orders o ON u.id = o.user_id\nWHERE o.status = 'pending';\n```\n\nPython Integration:\n\n```python\nimport sqlite3\nfrom pathlib import Path\nimport pandas as pd\n\nasync def query_database(db_path: Path, query: str) -> pd.DataFrame:\n    \"\"\"Execute SQL query and return results as DataFrame.\n\n    Args:\n        db_path: Path to SQLite database\n        query: SQL query to exec"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_5", "text": "s as DataFrame.\n\n    Args:\n        db_path: Path to SQLite database\n        query: SQL query to execute\n\n    Returns:\n        DataFrame with query results\n    \"\"\"\n    try:\n        conn = sqlite3.connect(db_path)\n        return pd.read_sql_query(query, conn)\n    finally:\n        conn.close()\n\n# Example usage\ndb = Path('data.db')\ndf = await query_database(db, '''\n    SELECT date, COUNT(*) as count\n    FROM events\n    GROUP BY date\n''')\n```\n\nCommon Operations:\n\n1. **Database Management**\n\n   ```sql"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_6", "text": "   FROM events\n    GROUP BY date\n''')\n```\n\nCommon Operations:\n\n1. **Database Management**\n\n   ```sql\n   -- Backup database\n   .backup 'backup.db'\n\n   -- Import CSV\n   .mode csv\n   .import data.csv table_name\n\n   -- Export results\n   .headers on\n   .mode csv\n   .output results.csv\n   SELECT * FROM table;\n   ```\n\n2. **Performance Optimization**\n\n   ```sql\n   -- Create index\n   CREATE INDEX idx_user_email ON users(email);\n\n   -- Analyze query\n   EXPLAIN QUERY PLAN\n   SELECT * FROM users WHERE email"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_7", "text": "email ON users(email);\n\n   -- Analyze query\n   EXPLAIN QUERY PLAN\n   SELECT * FROM users WHERE email LIKE '%@example.com';\n\n   -- Show indexes\n   SELECT * FROM sqlite_master WHERE type='index';\n   ```\n\n3. **Data Analysis**\n\n   ```sql\n   -- Time series aggregation\n   SELECT\n       date(timestamp),\n       COUNT(*) as events,\n       AVG(duration) as avg_duration\n   FROM events\n   GROUP BY date(timestamp);\n\n   -- Window functions\n   SELECT *,\n       AVG(amount) OVER (\n           PARTITION BY user_id"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_8", "text": "amp);\n\n   -- Window functions\n   SELECT *,\n       AVG(amount) OVER (\n           PARTITION BY user_id\n           ORDER BY date\n           ROWS BETWEEN 3 PRECEDING AND CURRENT ROW\n       ) as moving_avg\n   FROM transactions;\n   ```\n\nTools to work with SQLite:\n\n- [SQLiteStudio](https://sqlitestudio.pl/): Lightweight GUI\n- [DBeaver](https://dbeaver.io/): Full-featured GUI\n- [sqlite-utils](https://sqlite-utils.datasette.io/): CLI tool\n- [Datasette](https://datasette.io/): Web interface"}
{"source": "Course_content_jan_2025/sqlite.md", "chunk_id": "sqlite.md_part_9", "text": "te-utils.datasette.io/): CLI tool\n- [Datasette](https://datasette.io/): Web interface"}
{"source": "Course_content_jan_2025/data-cleansing-in-excel.md", "chunk_id": "data-cleansing-in-excel.md_part_1", "text": "## Data Cleansing in Excel\n\n[](https://youtu.be/7du7xkqeu4s)\n\nYou'll learn basic but essential data cleaning techniques in Excel, covering:\n\n- **Find and Replace**: Use Ctrl+H to replace or remove specific terms (e.g., removing \"[more]\" from country names).\n- **Changing Data Formats**: Convert columns from general to numerical format.\n- **Removing Extra Spaces**: Use the TRIM function to clean up unnecessary spaces in text.\n- **Identifying and Removing Blank Cells**: Highlight and delete entire "}
{"source": "Course_content_jan_2025/data-cleansing-in-excel.md", "chunk_id": "data-cleansing-in-excel.md_part_2", "text": "unnecessary spaces in text.\n- **Identifying and Removing Blank Cells**: Highlight and delete entire rows with blank cells using the \"Go To Special\" function.\n- **Removing Duplicates**: Use the \"Remove Duplicates\" feature to eliminate duplicate entries, demonstrated with country names.\n\nHere are links used in the video:\n\n- [List of Largest Cities Excel file](https://docs.google.com/spreadsheets/d/1jl8tHGoxmIba4J78aJVfT9jtZv7lfCbV/view)"}
{"source": "Course_content_jan_2025/data-cleansing-in-excel.md", "chunk_id": "data-cleansing-in-excel.md_part_3", "text": "jl8tHGoxmIba4J78aJVfT9jtZv7lfCbV/view)"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_1", "text": "## LLM Video Screen-Scraping\n\nVideo screen-scraping with LLMs is a powerful technique for extracting structured data from screen recordings. This approach works with any visible screen content and bypasses traditional web scraping limitations like authentication or anti-scraping measures.\n\n[](https://youtu.be/2G1LqS6qO5s)\n\nKey benefits:\n\n- No setup cost or authentication handling\n- Works with any visible screen content\n- Full control over data exposure\n- Extremely cost-effective (< $0.001 per sh"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_2", "text": "visible screen content\n- Full control over data exposure\n- Extremely cost-effective (< $0.001 per short video)\n- Bypasses anti-scraping measures\n- Handles varying formats and layouts\n\n### Quick Start Example\n\nHere's a basic workflow using Google's AI Studio and Gemini:\n\n1. **Record the Screen**\n   - Use QuickTime (Mac) or Windows Game Bar (Windows), Screen2Gif, or any tool of your choice\n   - Select specific screen area containing target data\n   - Record scrolling/clicking through content\n   - K"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_3", "text": "ct specific screen area containing target data\n   - Record scrolling/clicking through content\n   - Keep recordings short (30-60 seconds)\n2. **Process with Gemini**\n   - Upload to [Google AI Studio](https://makersuite.google.com/app/prompts)\n   - Select Gemini 1.5 Flash (cost-effective)\n   - Prompt for structured output (JSON/CSV)\n\nExample prompt for extracting tabular data:\n\n```text\nTurn this video into a JSON array where each item has:\n{\n  \"date\": \"yyyy-mm-dd\",\n  \"amount\": float\n}\n```\n\n### Cost"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_4", "text": "o into a JSON array where each item has:\n{\n  \"date\": \"yyyy-mm-dd\",\n  \"amount\": float\n}\n```\n\n### Cost Calculation\n\nGemini 1.5 Flash pricing (as of January 2025):\n\n- $0.075 per million tokens\n- Cost per frame ~ 250 tokens\n- Cost for 24 hours of video at 1 frame per second ~ $1.62!\n\n### Best Practices\n\n1. **Recording Quality**\n   - Frame only relevant content\n   - Pause briefly on important data\n   - Maintain consistent scroll speed\n   - Use high contrast display settings\n2. **Data Validation**\n   "}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_5", "text": " Maintain consistent scroll speed\n   - Use high contrast display settings\n2. **Data Validation**\n   - Always verify critical data manually\n   - Use spot-checking for large datasets\n   - Consider running multiple passes\n   - Log and review any anomalies\n3. **Error Handling**\n   - Request data in simple formats (CSV/JSON)\n   - Include validation in prompts\n   - Split long videos into segments\n   - Handle missing/partial data gracefully\n\n### Use Cases\n\n1. **Data Extraction**\n   - Email content aggr"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_6", "text": "andle missing/partial data gracefully\n\n### Use Cases\n\n1. **Data Extraction**\n   - Email content aggregation\n   - Dashboard metrics collection\n   - Protected web content\n   - Legacy system data\n2. **Data Journalism**\n   - Public records analysis\n   - Time-series data collection\n   - Interactive visualization data\n   - Government website scraping\n3. **Business Intelligence**\n   - Competitor pricing analysis\n   - Market research data\n   - Internal system migration\n   - Legacy report conversion\n\nToo"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_7", "text": "analysis\n   - Market research data\n   - Internal system migration\n   - Legacy report conversion\n\nTools:\n\n- [Google AI Studio](https://aistudio.google.com/app/prompts): Process videos with Gemini\n- [QuickTime Player](https://support.apple.com/guide/quicktime-player/welcome/mac): Screen recording (Mac)\n- [Screen2Gif](https://www.screentogif.com/): Screen recording (Windows)\n- [OBS Studio](https://obsproject.com/): Advanced screen recording (cross-platform)\n\nReferences:\n\n- [Simon Willison's Video S"}
{"source": "Course_content_jan_2025/llm-video-screen-scraping.md", "chunk_id": "llm-video-screen-scraping.md_part_8", "text": "sproject.com/): Advanced screen recording (cross-platform)\n\nReferences:\n\n- [Simon Willison's Video Scraping Tutorial](https://simonwillison.net/2024/Oct/17/video-scraping/)\n- [Gemini API Documentation](https://ai.google.dev/docs)"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_1", "text": "## Local LLMs: Llamafile\n\nYou would have heard of Large Language Models (LLMs) like GPT-4, Claude, and Llama. Some of these models are available for free, but most of them are not.\n\nAn easy way to run LLMs locally is Mozilla's [Llamafile](https://github.com/Mozilla-Ocho/llamafile). It's a single executable file that works on Windows, Mac, and Linux. No installation or configuration needed - just download and run.\n\nWatch this Llamafile Tutorial (6 min):\n\n[](https://youtu.be/d1Fnfvat6nM)\n\nHere's h"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_2", "text": "ownload and run.\n\nWatch this Llamafile Tutorial (6 min):\n\n[](https://youtu.be/d1Fnfvat6nM)\n\nHere's how to get started\n\n1. [Download `Llama-3.2-1B-Instruct.Q6_K.llamafile` (1.11 GB)](https://huggingface.co/Mozilla/Llama-3.2-1B-Instruct-llamafile/blob/main/Llama-3.2-1B-Instruct.Q6_K.llamafile?download=true).\n2. From the command prompt or terminal, run `Llama-3.2-1B-Instruct.Q6_K.llamafile`.\n3. Optional: For GPU acceleration, use `Llama-3.2-1B-Instruct.Q6_K.llamafile --n-gpu-layers 35`. (Increase o"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_3", "text": "nal: For GPU acceleration, use `Llama-3.2-1B-Instruct.Q6_K.llamafile --n-gpu-layers 35`. (Increase or decrease the number of layers based on your GPU VRAM.)\n\nYou might see a message like this:\n\n```text\n\u2588\u2588\u2557     \u2588\u2588\u2557      \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2557     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\n\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u255d\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_4", "text": "\u2551     \u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u255d\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\nsoftware: llamafile 0.8.17\nmodel:    Llama-3.2-1B-Instruct-Q8_0.gguf\ncompute:  13th Gen Intel Core i9-13900HX (alderlake)\nserver:   http://127.0.0.1:8080/\n\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and poli"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_5", "text": "ious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\n```\n\nYou can now chat with the model. Type `/exit` or press `Ctrl+C` to stop.\n\nYou can also visit `http://127.0.0.1:8080/` in your browser to chat with the model.\n\nLlamaFile exposes an OpenAI compatible API. Here's how to use it in Python:\n\n```python\nimport requests\n\nresponse = requests.post(\n    \"http://localhost:8080/v1/chat/completions\",\n    headers={\"Conten"}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_6", "text": "sts\n\nresponse = requests.post(\n    \"http://localhost:8080/v1/chat/completions\",\n    headers={\"Content-Type\": \"application/json\"},\n    json={\"messages\": [{\"role\": \"user\", \"content\": \"Write a haiku about coding\"}]}\n)\nprint(response.json()[\"choices\"][0][\"message\"][\"content\"])\n```\n\nTools:\n\n- [OpenAI API compatibility](https://platform.openai.com/docs/api-reference/chat): Use existing OpenAI code\n- [Creating your own llamafiles](https://github.com/Mozilla-Ocho/llamafile#creating-llamafiles): Control "}
{"source": "Course_content_jan_2025/llamafile.md", "chunk_id": "llamafile.md_part_7", "text": "eating your own llamafiles](https://github.com/Mozilla-Ocho/llamafile#creating-llamafiles): Control output format"}
{"source": "Course_content_jan_2025/scraping-with-google-sheets.md", "chunk_id": "scraping-with-google-sheets.md_part_1", "text": "## Scraping with Google Sheets\n\n[](https://youtu.be/eYQEk7XJM7s)\n\nYou'll learn how to [import tables on the web using Google Sheets's `=IMPORTHTML()` formula](https://support.google.com/docs/answer/3093339?hl=en), covering:\n\n- **Import HTML Formula**: Use =IMPORTHTML(URL, \"query\", index) to fetch tables or lists from a web page.\n- **Granting Access**: Allow access for formulas to fetch data from external sources.\n- **Checking Imported Data**: Verify if the imported table matches the data on the "}
{"source": "Course_content_jan_2025/scraping-with-google-sheets.md", "chunk_id": "scraping-with-google-sheets.md_part_2", "text": "xternal sources.\n- **Checking Imported Data**: Verify if the imported table matches the data on the web page.\n- **Handling Errors**: Understand common issues and how to resolve them.\n- **Sorting Data**: Copy imported data as values and sort it within Google Sheets.\n- **Freezing Rows**: Use frozen rows to maintain headers while sorting.\n- **Live Formulas**: Learn how web data updates automatically when the source changes.\n- **Other Import Functions**: IMPORTXML, IMPORTFEED, IMPORTRANGE, and IMPOR"}
{"source": "Course_content_jan_2025/scraping-with-google-sheets.md", "chunk_id": "scraping-with-google-sheets.md_part_3", "text": "when the source changes.\n- **Other Import Functions**: IMPORTXML, IMPORTFEED, IMPORTRANGE, and IMPORTDATA for advanced data fetching options.\n\nHere are links used in the video:\n\n- [Google sheet used in the video](https://docs.google.com/spreadsheets/d/1Qp_YTh1-hJHxjMWE_GofkvLIKgEdKxb6NFImpId3z9o/view)\n- [`IMPORTHTML()`](https://support.google.com/docs/answer/3093339)\n- [`IMPORTXML()`](https://support.google.com/docs/answer/3093342)\n- [Demographics of India](https://en.wikipedia.org/wiki/Demograp"}
{"source": "Course_content_jan_2025/scraping-with-google-sheets.md", "chunk_id": "scraping-with-google-sheets.md_part_4", "text": "ort.google.com/docs/answer/3093342)\n- [Demographics of India](https://en.wikipedia.org/wiki/Demographics_of_India)\n- [List of highest grossing Indian films](https://en.wikipedia.org/wiki/List_of_highest-grossing_Indian_films)"}
{"source": "Course_content_jan_2025/deployment-tools.md", "chunk_id": "deployment-tools.md_part_1", "text": "# Deployment Tools\n\nAny application you build is likely to be deployed somewhere. This section covers the most popular tools involved in deploying an application."}
{"source": "Course_content_jan_2025/colab.md", "chunk_id": "colab.md_part_1", "text": "## Notebooks: Google Colab\n\n[Google Colab](https://colab.research.google.com/) is a free, cloud-based Jupyter notebook environment that's become indispensable for data scientists and ML practitioners. It's particularly valuable because it provides free access to GPUs and TPUs, and for easy sharing of code and execution results.\n\nWhile Colab is excellent for prototyping and learning, its free tier has limitations - notebooks time out after 12 hours, and GPU access can be inconsistent.\n\nLearn how "}
{"source": "Course_content_jan_2025/colab.md", "chunk_id": "colab.md_part_2", "text": "has limitations - notebooks time out after 12 hours, and GPU access can be inconsistent.\n\nLearn how to mount Google Drive for persistent storage, manage dependencies with `!pip install` commands, as these are common pain points when getting started.\n\n[](https://youtu.be/inN8seMm7UI)\n\n- [Google Colab features you may have missed](https://youtu.be/rNgswRZ2C1Y)\n- [How to mount Google Drive to Google Colab](https://youtu.be/8HvugBq5NKg)\n- [How to take advantage of GPUs and TPUs for your ML project]("}
{"source": "Course_content_jan_2025/colab.md", "chunk_id": "colab.md_part_3", "text": "Colab](https://youtu.be/8HvugBq5NKg)\n- [How to take advantage of GPUs and TPUs for your ML project](https://youtu.be/tCYSce6l8gA)"}
{"source": "Course_content_jan_2025/data-visualization.md", "chunk_id": "data-visualization.md_part_1", "text": "# Data visualization\n\n[](https://youtu.be/XkxRDql00UU)"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_1", "text": "## LLM Text Extraction\n\n[JSON](json.md) is one of the most widely used formats in the world for applications to exchange data.\n\n[](https://youtu.be/72514uGffPE)\n\nThis video explains how to use LLMs to extract structure from unstructured data, covering:\n\n- **LLM for Data Extraction**: Use OpenAI's API to extract structured information from unstructured data like addresses.\n- **JSON Schema**: Define a JSON schema to ensure consistent and structured output from the LLM.\n- **Prompt Engineering**: Cr"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_2", "text": " a JSON schema to ensure consistent and structured output from the LLM.\n- **Prompt Engineering**: Craft effective prompts to guide the LLM's response and improve accuracy.\n- **Data Cleaning**: Use string functions and OpenAI's API to clean and standardize data.\n- **Data Analysis**: Analyze extracted data using Pandas to gain insights.\n- **LLM Limitations**: Understand the limitations of LLMs, including potential errors and inconsistencies in output.\n- **Production Use Cases**: Explore real-world"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_3", "text": "uding potential errors and inconsistencies in output.\n- **Production Use Cases**: Explore real-world applications of LLMs for data extraction, such as customer service email analysis.\n\nHere are the links used in the video:\n\n- [Jupyter Notebook](https://colab.research.google.com/drive/1Z8mG-RPTSYY4qwkoNdzRTc4StbnwOXeE)\n- [JSON Schema](https://json-schema.org/)\n- [Function calling](https://platform.openai.com/docs/guides/function-calling)\n\nStructured Outputs is a feature that ensures the model wil"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_4", "text": "openai.com/docs/guides/function-calling)\n\nStructured Outputs is a feature that ensures the model will always generate responses that adhere to your supplied\n[JSON Schema](https://json-schema.org/overview/what-is-jsonschema), so you don't need to worry about the model omitting a required key,\nor hallucinating an invalid enum value.\n\n```bash\ncurl https://api.openai.com/v1/chat/completions \\\n-H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"model\": \"gpt-4o-"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_5", "text": "orization: Bearer $OPENAI_API_KEY\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"model\": \"gpt-4o-2024-08-06\",\n  \"messages\": [\n    { \"role\": \"system\", \"content\": \"You are a helpful math tutor. Guide the user through the solution step by step.\" },\n    { \"role\": \"user\", \"content\": \"how can I solve 8x + 7 = -23\" }\n  ],\n  \"response_format\": {\n    \"type\": \"json_schema\",\n    \"json_schema\": {\n      \"name\": \"math_response\",\n      \"strict\": true\n      \"schema\": {\n        \"type\": \"object\",\n        \"prop"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_6", "text": "me\": \"math_response\",\n      \"strict\": true\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"steps\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": { \"explanation\": { \"type\": \"string\" }, \"output\": { \"type\": \"string\" } },\n              \"required\": [\"explanation\", \"output\"],\n              \"additionalProperties\": false\n            }\n          },\n          \"final_answer\": { \"type\": \"string\" }\n        },\n "}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_7", "text": "rties\": false\n            }\n          },\n          \"final_answer\": { \"type\": \"string\" }\n        },\n        \"required\": [\"steps\", \"final_answer\"],\n        \"additionalProperties\": false\n      }\n    }\n  }\n}'\n```\n\nHere's what the `response_format` tells OpenAI. The items marked \u26a0\ufe0f are OpenAI specific requirements for the JSON schema.\n\n- `\"type\": \"json_schema\"`: We want you to generate a JSON response that follows this schema.\n- `\"json_schema\":`: We're going to give you a schema.\n  - `\"name\": \"math_r"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_8", "text": "that follows this schema.\n- `\"json_schema\":`: We're going to give you a schema.\n  - `\"name\": \"math_response\"`: The schema is called `math_response`. (We can call it anything.)\n  - `\"strict\": true`: Follow the schema exactly.\n  - `\"schema\":`: Now, here's the actual JSON schema.\n    - `\"type\": \"object\"`: Return an object. \u26a0\ufe0f The root object **must** be an object.\n    - `\"properties\":`: The object has these properties:\n      - `\"steps\":`: There's a `steps` property.\n        - `\"type\": \"array\"`: It'"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_9", "text": "s these properties:\n      - `\"steps\":`: There's a `steps` property.\n        - `\"type\": \"array\"`: It's an array.\n        - `\"items\":`: Each item in the array...\n          - `\"type\": \"object\"`: ... is an object.\n          - `\"properties\":`: The object has these properties:\n            - `\"explanation\":`: There's an `explanation` property.\n              - `\"type\": \"string\"`: ... which is a string.\n            - `\"output\":`: There's an `output` property.\n              - `\"type\": \"string\"`: ... which"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_10", "text": "          - `\"output\":`: There's an `output` property.\n              - `\"type\": \"string\"`: ... which is a string, too.\n          - `\"required\": [\"explanation\", \"output\"]`: \u26a0\ufe0f You **must** add `\"required\": [...]` and include **all** fields int he object.\n          - `\"additionalProperties\": false`: \u26a0\ufe0f OpenAI requires every object to have `\"additionalProperties\": false`.\n      - `\"final_answer\":`: There's a `final_answer` property.\n        - `\"type\": \"string\"`: ... which is a string.\n    - `\"requi"}
{"source": "Course_content_jan_2025/llm-text-extraction.md", "chunk_id": "llm-text-extraction.md_part_11", "text": "here's a `final_answer` property.\n        - `\"type\": \"string\"`: ... which is a string.\n    - `\"required\": [\"steps\", \"final_answer\"]`: \u26a0\ufe0f You **must** add `\"required\": [...]` and include **all** fields in the object.\n    - `\"additionalProperties\": false`: \u26a0\ufe0f OpenAI requires every object to have `\"additionalProperties\": false`."}
{"source": "Course_content_jan_2025/visualizing-animated-data-with-powerpoint.md", "chunk_id": "visualizing-animated-data-with-powerpoint.md_part_1", "text": "## Visualizing Animated Data with PowerPoint\n\n[](https://youtu.be/umHlPDFVWr0)\n\n- [How to make a bar chart race in PowerPoint](https://blog.gramener.com/bar-chart-race-in-powerpoint/)"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_1", "text": "## Terminal: Bash\n\nUNIX shells are the de facto standard in the data science world and [Bash](https://www.gnu.org/software/bash/) is the most popular.\nThis is available by default on Mac and Linux.\n\nOn Windows, install [Git Bash](https://git-scm.com/downloads) or [WSL](https://learn.microsoft.com/en-us/windows/wsl/install) to get a UNIX shell.\n\nWatch this video to install WSL (12 min).\n\n[](https://youtu.be/X-DHaQLrBi8)\n\nWatch this video to understand the basics of Bash and UNIX shell commands (7"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_2", "text": "/youtu.be/X-DHaQLrBi8)\n\nWatch this video to understand the basics of Bash and UNIX shell commands (75 min).\n\n[](https://youtu.be/oxuRxtrO2Ag)\n\nEssential Commands:\n\n```bash\n# File Operations\nls -la               # List all files with details\ncd path/to/dir       # Change directory\npwd                  # Print working directory\ncp source dest       # Copy files\nmv source dest       # Move/rename files\nrm -rf dir           # Remove directory recursively\n\n# Text Processing\ngrep \"pattern\" file  # Sea"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_3", "text": "es\nrm -rf dir           # Remove directory recursively\n\n# Text Processing\ngrep \"pattern\" file  # Search for pattern\nsed 's/old/new/' f   # Replace text\nawk '{print $1}' f   # Process text by columns\ncat file | wc -l     # Count lines\n\n# Process Management\nps aux               # List processes\nkill -9 PID          # Force kill process\ntop                  # Monitor processes\nhtop                 # Interactive process viewer\n\n# Network\ncurl url             # HTTP requests\nwget url             # Do"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_4", "text": "Interactive process viewer\n\n# Network\ncurl url             # HTTP requests\nwget url             # Download files\nnc -zv host port     # Test connectivity\nssh user@host        # Remote login\n\n# Count unique values in CSV column\ncut -d',' -f1 data.csv | sort | uniq -c\n\n# Quick data analysis\nawk -F',' '{sum+=$2} END {print sum/NR}' data.csv  # Average\nsort -t',' -k2 -n data.csv | head                  # Top 10\n\n# Monitor log in real-time\ntail -f log.txt | grep --color 'ERROR'\n```\n\nBash Scripting Es"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_5", "text": "  # Top 10\n\n# Monitor log in real-time\ntail -f log.txt | grep --color 'ERROR'\n```\n\nBash Scripting Essentials:\n\n```bash\n#!/bin/bash\n\n# Variables\nNAME=\"value\"\necho $NAME\n\n# Loops\nfor i in {1..5}; do\n    echo $i\ndone\n\n# Conditionals\nif [ -f \"file.txt\" ]; then\n    echo \"File exists\"\nfi\n\n# Functions\nprocess_data() {\n    local input=$1\n    echo \"Processing $input\"\n}\n```\n\nProductivity Tips:\n\n1. **Command History**\n\n   ```bash\n   history         # Show command history\n   Ctrl+R         # Search history\n"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_6", "text": " History**\n\n   ```bash\n   history         # Show command history\n   Ctrl+R         # Search history\n   !!             # Repeat last command\n   !$             # Last argument\n   ```\n\n2. **Directory Navigation**\n\n   ```bash\n   pushd dir      # Push directory to stack\n   popd           # Pop directory from stack\n   cd -           # Go to previous directory\n   ```\n\n3. **Job Control**\n\n   ```bash\n   command &      # Run in background\n   Ctrl+Z         # Suspend process\n   bg             # Resume in b"}
{"source": "Course_content_jan_2025/bash.md", "chunk_id": "bash.md_part_7", "text": "mmand &      # Run in background\n   Ctrl+Z         # Suspend process\n   bg             # Resume in background\n   fg             # Resume in foreground\n   ```\n\n4. **Useful Aliases** - typically added to `~/.bashrc`\n   ```bash\n   alias ll='ls -la'\n   alias gs='git status'\n   alias jupyter='jupyter notebook'\n   alias activate='source venv/bin/activate'\n   ```"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_1", "text": "# Live Session: 28 Jan 2025\n\n[](https://youtu.be/lmSMQ5LWa30)\n\n**Q1: Can I ask a question about the graded assignment for week one?**\n\n**A1:** I'll try to answer it at the end of the session if there's time. We'll also have extra sessions this week, and we're hoping to release video solutions showing how to solve some of the assignments. But for now, let's focus on today's session.\n\n**Q2: I posted a question on the Discourse forum about the assignment. Should I ask it again now?**\n\n**A2:** No ne"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_2", "text": " a question on the Discourse forum about the assignment. Should I ask it again now?**\n\n**A2:** No need to ask it again. I'll look at the forum later.\n\n**Q3: DeepSeek is in the news. Does that affect the course?**\n\n**A3:** Not really. The core concept remains the same: using LLMs as agents. The workflow is similar whether you use OpenAI, Anthropic, Copilot, or other AI tools.\n\n**Q4: What is the concept behind Project One?**\n\n**A4:** Project One involves creating an automated continuous integratio"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_3", "text": "cept behind Project One?**\n\n**A4:** Project One involves creating an automated continuous integration pipeline. Data comes into a server, and various tasks are performed, many of which are repetitive. The goal is to automate some of this process to reduce errors and produce structured output. Your job is to build an API that handles these tasks using an LLM.\n\n**Q5: What kind of tasks can I expect?**\n\n**A5:** There are roughly 10 tasks in Phase A, which should be straightforward. In Phase B, the "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_4", "text": "**\n\n**A5:** There are roughly 10 tasks in Phase A, which should be straightforward. In Phase B, the tasks are less well-defined, testing your system's ability to handle unexpected requests. The API should have two endpoints: \"run\" and \"read\". The \"run\" endpoint receives a task description (in plain English), processes it, and creates output files. The \"read\" endpoint retrieves the contents of a specified file.\n\n**Q6: In GA1, the videos and questions aren't showing after the submission deadline. "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_5", "text": "ecified file.\n\n**Q6: In GA1, the videos and questions aren't showing after the submission deadline. Can they be shown?**\n\n**A6:** I'll inform Anand. The videos should still be available on the Tools in Data Science portal. They're from this section.\n\n**Q7: Why are the videos and questions integrated into the GA itself?**\n\n**A7:** Based on past data, students often go straight to the assignments without reviewing the content. Integrating the content into the GA is a better way to ensure they see "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_6", "text": "thout reviewing the content. Integrating the content into the GA is a better way to ensure they see it.\n\n**Q8: I'm struggling with the project. The concepts are confusing. Could you present a model project and explain things step-by-step?**\n\n**A8:** Yes, we'll do that in future sessions. We'll work through a working prototype of the project to illustrate each step. The project only uses material from the first three weeks of the course. If you're thorough with that material, you should be able t"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_7", "text": "rom the first three weeks of the course. If you're thorough with that material, you should be able to complete the project. It seems there's a knowledge gap, but I have full faith you can handle it. We'll address that gap in future sessions, starting with the basics.\n\n**Q9: I'm having trouble with Git and GitHub. Is there support available?**\n\n**A9:** Yes, we'll provide as much support as possible. We'll also go through a working prototype in future sessions. If you're struggling with Git, you w"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_8", "text": ". We'll also go through a working prototype in future sessions. If you're struggling with Git, you won't be able to do the project, as it's a prerequisite. We'll create a repository during a future session so you can see how it's done.\n\n**Q10: What's required for grading?**\n\n**A10:** Your repository must meet these criteria:\n\n- It must exist and be publicly accessible.\n- It must have a license file (MIT license).\n- It must have a valid Dockerfile.\n- The Docker image must be publicly accessible a"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_9", "text": "e (MIT license).\n- It must have a valid Dockerfile.\n- The Docker image must be publicly accessible and run via the specified command.\n- The Docker image must use the same Dockerfile as your GitHub repository.\n\nIt doesn't have to be publicly accessible while you're developing it. Just make sure it's public when you submit. These are absolute prerequisites; if any fail, your project won't be evaluated.\n\n**Q11: What is the grading scheme?**\n\n**A11:** Phase A is worth 10 marks, and Phase B is worth "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_10", "text": "ed.\n\n**Q11: What is the grading scheme?**\n\n**A11:** Phase A is worth 10 marks, and Phase B is worth 10 marks. You get one mark for each task completed in Phase A and one for each task in Phase B. There are also bonus marks for additional tasks and code diversity. Last term, there were 12 bonus marks, and the highest score was 7 or 8 out of 12.\n\n**Q12: We give bonuses for code diversity. Does that mean we penalize copying?**\n\n**A12:** No, we don't penalize copying. We want you to learn. We encour"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_11", "text": "mean we penalize copying?**\n\n**A12:** No, we don't penalize copying. We want you to learn. We encourage you to learn from each other, but we'll reward unique code.\n\n**Q13: How do I use the OpenAI LLM?**\n\n**A13:** You'll use it through a proxy. You'll get a $1 limit per month, renewed at the beginning of each month. Avoid exceeding this limit by carefully constructing your queries. We'll show you how to use environment variables to avoid putting your token directly in your code.\n\n**Q14: How do I "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_12", "text": "ow to use environment variables to avoid putting your token directly in your code.\n\n**Q14: How do I get access to Perplexity AI?**\n\n**A14:** All IITM students (including BS students) have free access to the Pro version of Perplexity AI for one year. Use your IITM email address to register.\n\n**Q15: In the LLM section, the prompt engineering section mentions using the API a certain number of times. I haven't used it even once. The key was generated, but I didn't use it. What should I do?**\n\n**A15:"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_13", "text": "I haven't used it even once. The key was generated, but I didn't use it. What should I do?**\n\n**A15:** We'll cover this in a later session.\n\n**Q16: The textbox in question 3 doesn't appear. I think there's a CSS issue. I generated the JSON, but it's not being accepted. Should I refresh?**\n\n**A16:** We'll cover this in a later session.\n\n**Q17: There was mention of a debrief session on the project. I couldn't find the video. Is there one?**\n\n**A17:** Yes, at the beginning of this session, we discu"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_14", "text": "I couldn't find the video. Is there one?**\n\n**A17:** Yes, at the beginning of this session, we discussed the requirements for Project One. We'll upload this video in a few hours or early tomorrow.\n\n**Q18: Will there be support for those not well-versed in Git and GitHub?**\n\n**A18:** Yes, we'll provide support. We'll also go through a working prototype in future sessions.\n\n**Q19: Is the week two content completely covered in the sessions?**\n\n**A19:** Yes, but the way we covered it is a bit differ"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_15", "text": "ntent completely covered in the sessions?**\n\n**A19:** Yes, but the way we covered it is a bit different. We went through the important parts. Referencing past sessions will give you a concise idea of the important parts.\n\n**Q20: I have a question about GA1, questions 10 and 11. I posted them on Discourse, but haven't received a reply. In question 10, the hash button is showing an error. In question 11, I don't understand the statement about the class in the hidden element below. What does this l"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_16", "text": "n 11, I don't understand the statement about the class in the hidden element below. What does this line mean?**\n\n**A20:** Regarding question 10, you have to use inverted double quotes for the key and value in the JSON file. Regarding question 11, you need to right-click and inspect the element to find the class name. The data value should be 35.\n\n**Q21: So, for this one, I don't get anything. Did I do it correctly? Should I submit anything else?**\n\n**A21:** You just say \"yes\" here, and then subm"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_17", "text": "I do it correctly? Should I submit anything else?**\n\n**A21:** You just say \"yes\" here, and then submit to the URL. It will only pick up the API itself. Remove the question mark.\n\n**Q22: Why isn't it reflecting?**\n\n**A22:** It may be because you haven't pushed to GitHub yet.\n\n**Q23: I have a question about prompt engineering. It mentions using the API a certain number of times. I haven't used it, but it generated a key. Can I proceed?**\n\n**A23:** No, you don't need to use the API multiple times. "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_18", "text": "ut it generated a key. Can I proceed?**\n\n**A23:** No, you don't need to use the API multiple times. The free OpenAI API access is only through the proxy. A normal OpenAI account is a subscription service and doesn't give you API access. You have to buy tokens to use the API.\n\n**Q24: I've used a normal OpenAI account before. I was hoping to use those model IDs. Why can't I?**\n\n**A24:** The free OpenAI account doesn't give you API access. You can only use their web-based service. To use the API, y"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_19", "text": "nAI account doesn't give you API access. You can only use their web-based service. To use the API, you have to buy tokens.\n\n**Q25: Can you show me how to do that? Can I share my screen?**\n\n**A25:** No need to share your screen. I'll show you how to access the API via the proxy. That's how your project will have to work.\n\n**Q26: The ninth question in the prompt engineering section mentions paying money. Do I have to pay?**\n\n**A26:** No, you don't have to pay.\n\n**Q27: I have a few more questions. "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_20", "text": "oney. Do I have to pay?**\n\n**A26:** No, you don't have to pay.\n\n**Q27: I have a few more questions. Will we have more sessions before GA3 is due?**\n\n**A27:** Yes, we'll have at least three more sessions before GA3 is due.\n\n**Q28: I thought GA3 was due this weekend. Is that wrong?**\n\n**A28:** Yes, it's due this weekend, but we'll have three more sessions before then.\n\n**Q29: I have another question. Is it okay to ask now?**\n\n**A29:** Sure.\n\n**Q30: I submitted my answers, but I don't know if I did"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_21", "text": ". Is it okay to ask now?**\n\n**A29:** Sure.\n\n**Q30: I submitted my answers, but I don't know if I did it correctly. There's nothing to submit here. I just say \"yes\"?**\n\n**A30:** You just say \"yes\" and submit to the URL. It will pick up the API itself.\n\n**Q31: Why isn't it reflecting?**\n\n**A31:** It may be because you haven't pushed to GitHub yet.\n\n**Q32: I have a question about GA1, questions 10 and 11. I posted them on Discourse, but haven't received a reply. In question 10, the hash button is s"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_22", "text": "d 11. I posted them on Discourse, but haven't received a reply. In question 10, the hash button is showing an error. In question 11, I don't understand the statement about the class in the hidden element below. What does this line mean?**\n\n**A32:** For question 10, you need to use inverted double quotes for the key and value in the JSON file. For question 11, you need to right-click and inspect the element to find the class name. The data value should be 35.\n\n**Q33: What are some other core conc"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_23", "text": "e element to find the class name. The data value should be 35.\n\n**Q33: What are some other core concepts that are important to understand?**\n\n**A33:** Before I talk about those, let's start with a simple example of how to make an API call to an LLM. API calls are powerful because you can use them in your programs.\n\n**Q34: How do I get my API key?**\n\n**A34:** You can find the link to get your proxy token on the GitHub page. I'll demonstrate using this proxy, but you can use something similar for "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_24", "text": " token on the GitHub page. I'll demonstrate using this proxy, but you can use something similar for other LLMs.\n\n**Q35: What is a proxy?**\n\n**A35:** OpenAI provides the service, but you don't interact with them directly. Anand has purchased tokens from OpenAI and provides access via a proxy. The proxy acts as a middleman between you and OpenAI.\n\n**Q36: How many tokens does a prompt take?**\n\n**A36:** The prompt we used took 32 tokens. The response (\"negative\") took two tokens. The total was 34 to"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_25", "text": "** The prompt we used took 32 tokens. The response (\"negative\") took two tokens. The total was 34 tokens. This cost us 1/10,000 of a dollar. Keep track of your token usage.\n\n**Q37: How can I keep track of token usage?**\n\n**A37:** Keep track of the prompt and the cost in a file. This will help you be efficient.\n\n**Q38: How are API calls made?**\n\n**A38:** You'll need a URL, headers (including authorization), and a JSON payload. The payload includes the model, messages, and response format. The res"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_26", "text": "ization), and a JSON payload. The payload includes the model, messages, and response format. The response format should be strictly defined to avoid unexpected output.\n\n**Q39: Can you share the notebook file?**\n\n**A39:** No, we don't typically share the notebook file itself, as it prevents you from fully grasping the concepts. However, a sample file is available.\n\n**Q40: What about function calling?**\n\n**A40:** We'll cover function calling in a later session. It's a key part of the project. Func"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_27", "text": "g?**\n\n**A40:** We'll cover function calling in a later session. It's a key part of the project. Function calling allows your LLM to decide which function to call based on the prompt. We'll use last term's Project Two to demonstrate.\n\n**Q41: What about embeddings?**\n\n**A41:** Embeddings are another important topic. They reduce the cost of using tokens by an order of magnitude. You can download embeddings from Hugging Face. We'll demonstrate this in a future session.\n\n**Q42: What about text extrac"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_28", "text": "ddings from Hugging Face. We'll demonstrate this in a future session.\n\n**Q42: What about text extraction?**\n\n**A42:** We'll cover this in a future session.\n\n**Q43: What about Base64 encoding?**\n\n**A43:** We'll cover this in a future session. It's how you send images to the API.\n\n**Q44: I've seen students use the LLM to get answers to Quiz One. Can I do that?**\n\n**A44:** Yes, you can upload a screenshot of the question and ask the LLM for the answer and explanation. You would send it as a Base64 "}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_29", "text": "nshot of the question and ask the LLM for the answer and explanation. You would send it as a Base64 encoded URI. We'll cover this in a future session.\n\n**Q45: Can we simply go through the topics mentioned (prompt engineering, TDS, TA instructions, LLM sentiment analysis) during self-study?**\n\n**A45:** Yes, but this content is simplified. Reading through documentation is difficult, so we've put this together for you. We'll also demonstrate and do working examples.\n\n**Q46: Can we change the time o"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_30", "text": "s together for you. We'll also demonstrate and do working examples.\n\n**Q46: Can we change the time of the sessions? My other classes are clashing. I've already told the TA, but haven't received a response.**\n\n**A46:** The Wednesday session cannot be moved. The Thursday session might be possible, but the sessions are generally kept in the evening because many students work during the day. We record all sessions, so you can view them later. We can try to schedule an earlier doubt-clearing session,"}
{"source": "Course_content_jan_2025/live-session-2025-01-28.md", "chunk_id": "live-session-2025-01-28.md_part_31", "text": " all sessions, so you can view them later. We can try to schedule an earlier doubt-clearing session, perhaps on Friday, but I'll have to discuss it with the team. What time on Friday works for you?"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_1", "text": "# Live Session: 20 Jan 2025\n\n[](https://youtu.be/aJnygTpma7M)\n\n**Q1: What is an ML project, and how does it compare to the \"fitting of six models\" project?**\n\n**A1:** An ML (Machine Learning) project involves more factors than just fitting models. The \"fitting of six models\" project was a simplified version done for a friend's certification course. It involved training six models on a pre-cleaned dataset with some hyperparameter tuning but minimal data preprocessing or cleaning.\n\n**Q2: Is the TD"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_2", "text": "dataset with some hyperparameter tuning but minimal data preprocessing or cleaning.\n\n**Q2: Is the TDS project designed to provide a level playing field for everyone, considering some participants may lack coding experience?**\n\n**A2:** The TDS project aims to combine everything learned in the course so far. It might seem challenging, especially for those without a coding background. The project requires creating an application with specific endpoints, pushing it to GitHub, creating a Docker file,"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_3", "text": "uires creating an application with specific endpoints, pushing it to GitHub, creating a Docker file, and submitting it through a Google form. However, the course is designed to bridge the technical gap for non-technical participants, preparing them for industry standards. The instructors will provide support through dedicated sessions, and students are encouraged to use resources like ChatGPT and YouTube videos.\n\n**Q3: What are the main components of the TDS project, and what tools are involved?"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_4", "text": "YouTube videos.\n\n**Q3: What are the main components of the TDS project, and what tools are involved?**\n\n**A3:** The TDS project has three main parts:\n\n1. **GitHub:** For version control and code storage.\n2. **Docker Hub:** For containerizing and deploying the application.\n3. **LLM (Large Language Model):** For the core functionality of the application.\n   The project involves using Fast API or similar frameworks to create the application, Podman to run the Docker image, and a form to submit the "}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_5", "text": "ilar frameworks to create the application, Podman to run the Docker image, and a form to submit the GitHub and Docker file details.\n\n**Q4: How does the project accommodate participants from non-science or non-coding backgrounds?**\n\n**A4:** The course aims to equip all participants, regardless of their background, with the necessary skills for the industry. It provides support through live sessions, encourages the use of external resources like ChatGPT and YouTube, and offers dedicated project se"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_6", "text": ", encourages the use of external resources like ChatGPT and YouTube, and offers dedicated project sessions. The goal is to bridge the technical gap and prepare everyone for real-world challenges.\n\n**Q5: How can I seek help or clarification on the project, especially if I find it overwhelming?**\n\n**A5:** You can ask questions during the live sessions, utilize the course forum, or reach out to the instructors directly through the designated channels. Additionally, you can use resources like ChatGP"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_7", "text": "nstructors directly through the designated channels. Additionally, you can use resources like ChatGPT for assistance.\n\n**Q6: What are the key tools and technologies used in the TDS project?**\n\n**A6:** Key tools include Git for version control, GitHub for code hosting, Docker for containerization, Podman for running Docker images, and Fast API (or similar frameworks) for creating the application.\n\n**Q7: How can I use VS Code for managing my Git repository?**\n\n**A7:** VS Code has extensions that s"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_8", "text": "**Q7: How can I use VS Code for managing my Git repository?**\n\n**A7:** VS Code has extensions that simplify Git operations. You can initialize a new Git instance, connect it to a remote GitHub repository, commit changes with messages, and manage branches all within the VS Code interface.\n\n**Q8: How can I handle case-insensitive replacements in files using command-line tools?**\n\n**A8:** You can use the `sed` editor with the `-i` option for in-place editing and the `I` flag for case-insensitive ma"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_9", "text": " the `sed` editor with the `-i` option for in-place editing and the `I` flag for case-insensitive matching. You can combine this with `find` to locate and modify multiple files within a directory structure.\n\n**Q9: How do I set up the connection between my local Git instance and a remote GitHub repository?**\n\n**A9:** You can use the `git remote add origin <repository URL>` command to establish the connection. You can find the specific URL on the GitHub repository page.\n\n**Q10: What if I encounter"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_10", "text": "connection. You can find the specific URL on the GitHub repository page.\n\n**Q10: What if I encounter issues while trying to push changes to GitHub?**\n\n**A10:** If you're using HTTPS, you'll need to use a personal access token instead of your password for authentication. If you encounter errors, ensure you have configured your Git username and email correctly using `git config`. You might also need to check the permissions granted to your personal access token or set up SSH keys for authenticatio"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_11", "text": " to check the permissions granted to your personal access token or set up SSH keys for authentication.\n\n**Q11: How many students are regularly attending the live sessions?**\n\n**A11:** The attendance in the live sessions is lower than expected, with around 15-25 students at peak times, compared to the 400-500 enrolled in the current term.\n\n**Q12: What is the new feature added for TDS live sessions?**\n\n**A12:** A new feature has been added that curates the live sessions into a few important portio"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_12", "text": "**\n\n**A12:** A new feature has been added that curates the live sessions into a few important portions, providing a summary of the questions asked and their answers. This allows students who missed a session to quickly catch up on the key topics discussed.\n\n**Q13: When is the next session scheduled, and will it clash with college classes?**\n\n**A13:** The next session is scheduled for 5 PM. There might be clashes with college classes, as the schedule is pre-planned with classes on Tuesdays from 5"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_13", "text": "ight be clashes with college classes, as the schedule is pre-planned with classes on Tuesdays from 5-7 PM, Wednesdays from 9-10 AM, and other classes from 8-10 PM.\n\n**Q14: Where can I find the link for the new feature summarizing live sessions?**\n\n**A14:** The link has been emailed to all participants and can also be found at the very bottom of the course page.\n\n**Q15: How can I get support regarding any particular topic in the project?**\n\n**A15:** You can use the \"Learning Feedback\" form on the"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_14", "text": "ing any particular topic in the project?**\n\n**A15:** You can use the \"Learning Feedback\" form on the portal to submit your queries related to specific modules or topics. The responses are used to plan future sessions.\n\n**Q16: What is GitHub, and how is it used in the project?**\n\n**A16:** GitHub is a platform for hosting Git repositories. It allows for version control, collaboration, and code sharing. In the project, you will push your code to a GitHub repository, making it accessible to others a"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_15", "text": "ng. In the project, you will push your code to a GitHub repository, making it accessible to others and enabling collaboration.\n\n**Q17: What is the difference between Git and GitHub?**\n\n**A17:** Git is a version control system that you install and use on your local machine, while GitHub is a web-based platform that hosts Git repositories, allowing for remote collaboration and code sharing.\n\n**Q18: What are the alternatives to using command-line tools for Git and GitHub operations?**\n\n**A18:** You"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_16", "text": "What are the alternatives to using command-line tools for Git and GitHub operations?**\n\n**A18:** You can use a graphical interface like VS Code with Git extensions to manage your Git repositories and interact with GitHub. This can be more user-friendly than using command-line tools.\n\n**Q19: How does the `sed` editor work for replacing text in files?**\n\n**A19:** The `sed` editor is a stream editor that can perform text transformations on input streams. You can use it with the `s` command for subs"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_17", "text": "that can perform text transformations on input streams. You can use it with the `s` command for substitution, specifying the pattern to match and the replacement text. The `g` flag indicates global replacement (all occurrences), and the `I` flag enables case-insensitive matching.\n\n**Q1: How can I use the `find` command to locate files for processing with `sed`?**\n\n**A21:** The `find` command can locate files based on various criteria, such as name, type, and location. You can use the `-exec` opt"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_18", "text": "ocate files based on various criteria, such as name, type, and location. You can use the `-exec` option to execute a command, like `sed`, on each file found. For example, `find . -type f -exec sed -i 's/IITM/IIT Madras/gI' {} \\;` will find all files in the current directory and its subdirectories and replace \"IITM\" with \"IIT Madras\" (case-insensitive) in each file.\n\n**Q22: Why am I getting an \"authentication failed\" error when pushing to GitHub?**\n\n**A22:** This could be because GitHub no longer"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_19", "text": "hentication failed\" error when pushing to GitHub?**\n\n**A22:** This could be because GitHub no longer supports password authentication for Git operations. You need to use a personal access token or set up SSH keys for authentication.\n\n**Q23: How do I create and use a personal access token for GitHub authentication?**\n\n**A23:** You can create a personal access token in your GitHub account settings under \"Developer settings.\" When pushing to GitHub, use your GitHub username and the generated token "}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_20", "text": "nder \"Developer settings.\" When pushing to GitHub, use your GitHub username and the generated token instead of your password.\n\n**Q24: How do I set up SSH keys for GitHub authentication?**\n\n**A24:** You can generate SSH keys using the `ssh-keygen` command and then add the public key to your GitHub account settings. This allows you to authenticate without using a password or personal access token.\n\n**Q25: What is the purpose of the `git remote add origin` command?**\n\n**A25:** This command adds a r"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_21", "text": "**Q25: What is the purpose of the `git remote add origin` command?**\n\n**A25:** This command adds a remote repository named \"origin\" to your local Git instance. \"Origin\" is a conventional name for the primary remote repository, and the URL specifies the location of the remote repository on GitHub.\n\n**Q26: How can I update the remote URL if I have already added one?**\n\n**A26:** You can update the remote URL using the `git remote set-url origin <new URL>` command, replacing `<new URL>` with the cor"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_22", "text": "mote URL using the `git remote set-url origin <new URL>` command, replacing `<new URL>` with the correct URL of your GitHub repository.\n\n**Q27: What is the difference between committing and pushing in Git?**\n\n**A27:** Committing saves changes to your local Git instance, while pushing uploads those committed changes to a remote repository like GitHub.\n\n**Q28: How can I use VS Code to simplify Git operations?**\n\n**A28:** VS Code has built-in Git integration and extensions that provide a graphical "}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_23", "text": "perations?**\n\n**A28:** VS Code has built-in Git integration and extensions that provide a graphical interface for managing your repository. You can stage changes, commit them with messages, push to remote repositories, manage branches, and perform other Git operations without using the command line.\n\n**Q29: What is the significance of the `.git` folder in my project directory?**\n\n**A29:** The `.git` folder is a hidden directory that contains all the information related to your Git instance, incl"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_24", "text": "t` folder is a hidden directory that contains all the information related to your Git instance, including the history of commits, branches, and other metadata. It's essential for version control and should not be modified directly.\n\n**Q30: How can I ensure that my code is backed up and accessible to collaborators?**\n\n**A30:** By pushing your code to a remote GitHub repository, you create a backup of your project and make it accessible to collaborators who have been granted access. This ensures t"}
{"source": "Course_content_jan_2025/live-session-2025-01-20.md", "chunk_id": "live-session-2025-01-20.md_part_25", "text": "of your project and make it accessible to collaborators who have been granted access. This ensures that your code is safe even if your local machine encounters issues."}
{"source": "Course_content_jan_2025/narratives-with-excel.md", "chunk_id": "narratives-with-excel.md_part_1", "text": "## Narratives with Excel\n\n[](https://youtu.be/CRNJerr3pI4)\n\n- [Sample Excel](https://docs.google.com/spreadsheets/d/1Htmr5ar0ZX2nYW8Xerr9OaLJl3zS0gxY/view#gid=171350107)"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_1", "text": "## Images: Compression\n\nImage compression is essential when deploying apps. Often, pages have dozens of images. Image analysis runs over thousands of images. The cost of storage and bandwidth can grow over time.\n\nHere are things you should know when you're compressing images:\n\n- **Image dimensions** are the width and height of the image in pixels. This impacts image size a lot\n- **Lossless** compression (PNG, WebP) preserves exact data\n- **Lossy** compression (JPEG, WebP) removes some data for s"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_2", "text": "ession (PNG, WebP) preserves exact data\n- **Lossy** compression (JPEG, WebP) removes some data for smaller files\n- **Vector** formats (SVG) scale without quality loss\n- **WebP** is the modern standard, supporting both lossy and lossless\n\nHere's a rule of thumb you can use as of 2025.\n\n- Use SVG if you can (i.e. if it's vector graphics or you can convert it to one)\n- Else, reduce the image to as small as you can, and save as (lossy or lossless) WebP\n\nCommon operations with Python:\n\n```python\nfrom"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_3", "text": "all as you can, and save as (lossy or lossless) WebP\n\nCommon operations with Python:\n\n```python\nfrom pathlib import Path\nfrom PIL import Image\nimport io\n\nasync def compress_image(input_path: Path, output_path: Path, quality: int = 85) -> None:\n    \"\"\"Compress an image while maintaining reasonable quality.\"\"\"\n    with Image.open(input_path) as img:\n        # Convert RGBA to RGB if needed\n        if img.mode == 'RGBA':\n            img = img.convert('RGB')\n        # Optimize for web\n        img.sav"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_4", "text": " img.mode == 'RGBA':\n            img = img.convert('RGB')\n        # Optimize for web\n        img.save(output_path, 'WEBP', quality=quality, optimize=True)\n\n# Batch process images\npaths = Path('images').glob('*.jpg')\nfor p in paths:\n    await compress_image(p, p.with_suffix('.webp'))\n```\n\nCommand line tools include [cwebp](https://developers.google.com/speed/webp/docs/cwebp), [pngquant](https://pngquant.org/), [jpegoptim](https://github.com/tjko/jpegoptim), and [ImageMagick](https://imagemagick.o"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_5", "text": "quant.org/), [jpegoptim](https://github.com/tjko/jpegoptim), and [ImageMagick](https://imagemagick.org/).\n\n```bash\n# Convert to WebP\ncwebp -q 85 input.png -o output.webp\n\n# Optimize PNG\npngquant --quality=65-80 image.png\n\n# Optimize JPEG\njpegoptim --strip-all --all-progressive --max=85 image.jpg\n\n# Convert and resize\nconvert input.jpg -resize 800x600 output.jpg\n\n# Batch convert\nmogrify -format webp -quality 85 *.jpg\n```\n\nWatch this video on modern image formats and optimization (15 min):\n\n[](htt"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_6", "text": "p -quality 85 *.jpg\n```\n\nWatch this video on modern image formats and optimization (15 min):\n\n[](https://youtu.be/F1kYBnY6mwg)\n\nTools for image optimization:\n\n- [squoosh.app](https://squoosh.app/): Browser-based compression\n- [ImageOptim](https://imageoptim.com/): GUI tool for Mac\n- [sharp](https://sharp.pixelplumbing.com/): Node.js image processing\n- [Pillow](https://python-pillow.org/): Python imaging library"}
{"source": "Course_content_jan_2025/image-compression.md", "chunk_id": "image-compression.md_part_7", "text": "maging library"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_1", "text": "## CORS: Cross-Origin Resource Sharing\n\nCORS (Cross-Origin Resource Sharing) is a security mechanism that controls how web browsers handle requests between different origins (domains, protocols, or ports). Data scientists need CORS for APIs serving data or analysis to a browser on a different domain.\n\nWatch this practical explanation of CORS (3 min):\n\n[](https://youtu.be/4KHiSt0oLJ0)\n\nKey CORS concepts:\n\n- **Same-Origin Policy**: Browsers block requests between different origins by default\n- **C"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_2", "text": "cepts:\n\n- **Same-Origin Policy**: Browsers block requests between different origins by default\n- **CORS Headers**: Server responses must include specific headers to allow cross-origin requests\n- **Preflight Requests**: Browsers send OPTIONS requests to check if the actual request is allowed\n- **Credentials**: Special handling required for requests with cookies or authentication\n\nIf you're exposing your API with a GET request publicly, the only thing you need to do is set the HTTP header `Access-"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_3", "text": " your API with a GET request publicly, the only thing you need to do is set the HTTP header `Access-Control-Allow-Origin: *`.\n\nHere are other common CORS headers:\n\n```http\nAccess-Control-Allow-Origin: https://example.com\nAccess-Control-Allow-Methods: GET, POST, PUT, DELETE\nAccess-Control-Allow-Headers: Content-Type, Authorization\nAccess-Control-Allow-Credentials: true\n```\n\nTo implement CORS in FastAPI, use the [`CORSMiddleware` middleware](https://fastapi.tiangolo.com/tutorial/cors/):\n\n```python"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_4", "text": "tAPI, use the [`CORSMiddleware` middleware](https://fastapi.tiangolo.com/tutorial/cors/):\n\n```python\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\napp.add_middleware(CORSMiddleware, allow_origins=[\"*\"]) # Allow GET requests from all origins\n# Or, provide more granular control:\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"https://example.com\"],  # Allow a specific domain\n    allow_credentials=True,  # Allow cookies\n    allow_method"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_5", "text": "mple.com\"],  # Allow a specific domain\n    allow_credentials=True,  # Allow cookies\n    allow_methods=[\"GET\", \"POST\", \"PUT\", \"DELETE\"],  # Allow specific methods\n    allow_headers=[\"*\"],  # Allow all headers\n)\n```\n\nTesting CORS with JavaScript:\n\n```javascript\n// Simple request\nconst response = await fetch(\"https://api.example.com/data\", {\n  method: \"GET\",\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\n// Request with credentials\nconst response = await fetch(\"https://api.example.com/data"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_6", "text": "json\" },\n});\n\n// Request with credentials\nconst response = await fetch(\"https://api.example.com/data\", {\n  credentials: \"include\",\n  headers: { \"Content-Type\": \"application/json\" },\n});\n```\n\nUseful CORS debugging tools:\n\n- [CORS Checker](https://cors-test.codehappy.dev/): Test CORS configurations\n- Browser DevTools Network tab: Inspect CORS headers and preflight requests\n- [cors-anywhere](https://github.com/Rob--W/cors-anywhere): CORS proxy for development\n\nCommon CORS errors and solutions:\n\n- `"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_7", "text": "github.com/Rob--W/cors-anywhere): CORS proxy for development\n\nCommon CORS errors and solutions:\n\n- `No 'Access-Control-Allow-Origin' header`: Configure server to send proper CORS headers\n- `Request header field not allowed`: Add required headers to `Access-Control-Allow-Headers`\n- `Credentials flag`: Set both `credentials: 'include'` and `Access-Control-Allow-Credentials: true`\n- `Wild card error`: Cannot use `*` with credentials; specify exact origins"}
{"source": "Course_content_jan_2025/cors.md", "chunk_id": "cors.md_part_8", "text": ": Cannot use `*` with credentials; specify exact origins"}
{"source": "Course_content_jan_2025/data-preparation.md", "chunk_id": "data-preparation.md_part_1", "text": "# Data Preparation\n\nData preparation is crucial because raw data is rarely perfect.\n\nIt often contains errors, inconsistencies, or missing values. For example, marks data may have 'NA' or 'absent' for non-attendees, which you need to handle.\n\nThis section teaches you how to clean up data, convert it to different formats, aggregate it if required, and get a feel for the data before you analyze.\n\nHere are links used in the video:\n\n- [Presentation used in the video](https://docs.google.com/presenta"}
{"source": "Course_content_jan_2025/data-preparation.md", "chunk_id": "data-preparation.md_part_2", "text": "re are links used in the video:\n\n- [Presentation used in the video](https://docs.google.com/presentation/d/1Gb0QnPUN1YOwM_O5EqDdXUdL-5Azp1Tf/view)\n- [Scraping assembly elections - Notebook](https://colab.research.google.com/drive/1SP8yVxzmofQO48-yXF3rujqWk2iM0KSl)\n- [Assembly election results (CSV)](https://github.com/datameet/india-election-data/blob/master/assembly-elections/assembly.csv)\n- [`pdftotext` software](https://www.xpdfreader.com/pdftotext-man.html)\n- [OpenRefine software](https://op"}
{"source": "Course_content_jan_2025/data-preparation.md", "chunk_id": "data-preparation.md_part_3", "text": "ftotext` software](https://www.xpdfreader.com/pdftotext-man.html)\n- [OpenRefine software](https://openrefine.org)\n- [The most persistent party](https://gramener.com/election/parliament#story.ddp)\n- [TN assembly election cartogram](https://gramener.com/election/cartogram?ST_NAME=Tamil%20Nadu)\n\n[](https://youtu.be/dF3zchJJKqk)"}
{"source": "Course_content_jan_2025/data-analysis-with-python.md", "chunk_id": "data-analysis-with-python.md_part_1", "text": "## Data Analysis with Python\n\n[](https://youtu.be/ZPfZH14FK90)\n\nYou'll learn practical data analysis techniques in Python using Pandas, covering:\n\n- **Reading Parquet Files**: Utilize Pandas to read Parquet file formats for efficient data handling.\n- **Dataframe Inspection**: Methods to preview and understand the structure of a dataset.\n- **Pivot Tables**: Creating and interpreting pivot tables to summarize data.\n- **Percentage Calculations**: Normalize pivot table values to percentages for bett"}
{"source": "Course_content_jan_2025/data-analysis-with-python.md", "chunk_id": "data-analysis-with-python.md_part_2", "text": " summarize data.\n- **Percentage Calculations**: Normalize pivot table values to percentages for better insights.\n- **Correlation Analysis**: Calculate and interpret correlation between variables, including significance testing.\n- **Statistical Significance**: Use statistical tests to determine the significance of observed correlations.\n- **Datetime Handling**: Extract and manipulate date and time information from datetime columns.\n- **Data Visualization**: Generate and customize heat maps to vis"}
{"source": "Course_content_jan_2025/data-analysis-with-python.md", "chunk_id": "data-analysis-with-python.md_part_3", "text": "information from datetime columns.\n- **Data Visualization**: Generate and customize heat maps to visualize data patterns effectively.\n- **Leveraging AI**: Use ChatGPT to generate and refine analytical code, enhancing productivity and accuracy.\n\nHere are the links used in the video:\n\n- [Data analysis with Python - Notebook](https://colab.research.google.com/drive/1wEUEeF_e2SSmS9uf2-3fZJQ2kEFRnxah)\n- [Card transactions dataset (Parquet)](https://drive.google.com/file/u/3/d/1XGvuFjoTwlybkw0cc9u34ho"}
{"source": "Course_content_jan_2025/data-analysis-with-python.md", "chunk_id": "data-analysis-with-python.md_part_4", "text": "- [Card transactions dataset (Parquet)](https://drive.google.com/file/u/3/d/1XGvuFjoTwlybkw0cc9u34horMF9vMhrB/view)\n- [10 minutes to Pandas](https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html)\n- [Python Pandas tutorials](https://www.youtube.com/playlist?list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS)"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_1", "text": "# Solving ROE Realtime\n\n---\n**23f1002382** *(created: 2025-03-02T07:30:53.879Z)*\n\n<p>I\u2019ll try to post whatever i solve lol XD</p>\n\n---\n**23f1002382** *(created: 2025-03-02T08:04:22.864Z)*\n\n<p>Q 7 LLM Embeddings (1 mark)</p>\n<p><strong>SecurePay</strong>, a leading fintech startup, has implemented an innovative feature to detect and prevent fraudulent activities in real time. As part of its security suite, the system analyzes personalized transaction messages by converting them into embeddings. T"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_2", "text": "y suite, the system analyzes personalized transaction messages by converting them into embeddings. These embeddings are compared against known patterns of legitimate and fraudulent messages to flag unusual activity.</p>\n<p>Imagine you are working on the SecurePay team as a junior developer tasked with integrating the text embeddings feature into the fraud detection module. When a user initiates a transaction, the system sends a personalized v\u2026</p>\n<p>ANSWER:<br>\n{<br>\n\u201cmodel\u201d: \u201ctext-embedding-3-"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_3", "text": "transaction, the system sends a personalized v\u2026</p>\n<p>ANSWER:<br>\n{<br>\n\u201cmodel\u201d: \u201ctext-embedding-3-small\u201d,<br>\n\u201cinput\u201d: [<br>\n\u201cDear user, please verify your transaction code 33692 sent to roe-23f1002382@ds.study.iitm.ac.in\u201d,<br>\n\u201cDear user, please verify your transaction code 66801 sent to roe-23f1002382@ds.study.iitm.ac.in\u201d<br>\n]<br>\n}</p>\n\n---\n**23f1002382** *(created: 2025-03-02T08:05:59.474Z)*\n\n<p>Q^: 6 Move and rename files (1 mark)</p>\n<p>Download q-move-rename-files.zip and extract it. U"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_4", "text": "*\n\n<p>Q^: 6 Move and rename files (1 mark)</p>\n<p>Download q-move-rename-files.zip and extract it. Use <code>mv</code> to move all files under folders into an empty folder. Then rename all files replacing each digit with the next. 1 becomes 2, 9 becomes 0, <code>a1b9c.txt</code> becomes <code>a2b0c.txt</code>.</p>\n<p>ANSWER:</p>\n<pre><code class=\"lang-auto\">unzip /workspaces/TDS/q-move-rename-files.zip -d extracted_folder123123\n    5  mkdir empty_folder \n    6  find extracted_folder -type f -exe"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_5", "text": "s.zip -d extracted_folder123123\n    5  mkdir empty_folder \n    6  find extracted_folder -type f -exec mv {} empty_folder/ \\; \n    7  ls\n    8  find extracted_folder123123 -type f -exec mv {} empty_folder/ \\; \n    9  cd empty_folder  \n   10  for file in *; do       new_name=$(echo \"$file\" | tr '0123456789' '1234567890')  ;     mv \"$file\" \"$new_name\"  ; done  \n   11  grep . * | LC_ALL=C sort | sha256sum  \n</code></pre>\n\n---\n**23f1002382** *(created: 2025-03-02T08:13:44.624Z)*\n\n<p>Sydney,Brisbane,P"}
{"source": "topics_md/168943.md", "chunk_id": "168943.md_part_6", "text": "6sum  \n</code></pre>\n\n---\n**23f1002382** *(created: 2025-03-02T08:13:44.624Z)*\n\n<p>Sydney,Brisbane,Perth,Jakarta,Singapore,Dubai,Doha<br>\nflights</p>\n\n---\n**23f1002382** *(created: 2025-03-02T08:14:15.471Z)*\n\n<p>150,171,174</p>\n<p>for studebts</p>"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_1", "text": "# Graded Assignments Dashboard Scores Incorrect/Missing\n\n---\n**HARISH.S** *(created: 2025-02-11T17:03:21.205Z)*\n\n<p>hello sir this is Harish. i completed and saved the week 2 and week 4 assignment. (didn\u2019t do week 3) but the graded assignment shows it is incomplete and the score is 0 for both the weeks . i am attaching the iages. kindly check and reply soon sir.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/5/6/5"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_2", "text": "\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/5/6/56b130af1cc28926192b9915e2ea49a471168b8e.png\" data-download-href=\"/uploads/short-url/cmUGORxLRnXe4dSAkDKi60hXcrs.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1035\u00d7466 71 KB</span><svg class=\"fa d-icon d-icon-dis"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_3", "text": "lename\">image</span><span class=\"informations\">1035\u00d7466 71 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/2/12633c3acc823f927ca57b5f3c0efadcf89de1b0.png\" data-download-href=\"/uploads/short-url/2CFcIf7atWwPUCMZVCTtcG5UQxi.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><d"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_4", "text": "uploads/short-url/2CFcIf7atWwPUCMZVCTtcG5UQxi.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1035\u00d7453 27.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>this is for week 4<br>\n<div class=\"lightbox-wrapper\"><a"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_5", "text": "-expand\"></use></svg></div></a></div></p>\n<p>this is for week 4<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/7/6/7659b9ba3bf327fd5d15ca20d77836ec62770a9f.png\" data-download-href=\"/uploads/short-url/gSYzNVNsaBfa9lihLSOY5zWHmxx.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filena"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_6", "text": "d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1678\u00d7847 141 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/a/d/ade36e6af66c8f0677eab16962a78c0d1211e7dc.png\" data-download-href=\"/upl"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_7", "text": "/uploads/iitm/original/3X/a/d/ade36e6af66c8f0677eab16962a78c0d1211e7dc.png\" data-download-href=\"/uploads/short-url/oOhS2YHaSqgLKBWfNhtMc56nMS0.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1035\u00d7481 38.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-ex"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_8", "text": "><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/2/1283504bdf9a3f1f7d5ff5d2154d0f5695fe403b.png\" data-download-href=\"/uploads/short-url/2DLVPeiy4Fv7so1LKFGB37LYhar.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\""}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_9", "text": "mage\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">463\u00d7457 26.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>kindly check on this sir.</p>\n\n---\n**carlton** *(created: 2025-02-11T18:21:52.000Z)*\n\n<p>Could you send me your email id"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_10", "text": " sir.</p>\n\n---\n**carlton** *(created: 2025-02-11T18:21:52.000Z)*\n\n<p>Could you send me your email id. thanks.</p>\n\n---\n**24ds3000061** *(created: 2025-02-11T18:46:15.785Z)*\n\n<p>Hi, the same issue persists for me for GA 2 and 4. I also did not attemp GA 3. Please look into this. My email id: 24ds3000061@ds.study.iitm.ac.in</p>\n\n---\n**22f2001532** *(created: 2025-02-12T03:23:21.693Z)*\n\n<p>My Graded assignment results are also not appearing in the dashboard. My email id is 22f2001532@ds.study.iitm."}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_11", "text": "assignment results are also not appearing in the dashboard. My email id is 22f2001532@ds.study.iitm.ac.in</p>\n\n---\n**carlton** *(created: 2025-02-12T05:18:27.095Z)*\n\n<p><a class=\"mention\" href=\"/u/24ds3000061\">@24ds3000061</a> <a class=\"mention\" href=\"/u/22f2001532\">@22f2001532</a></p>\n<p>Can you check the dashboard now, I\u2019ve been informed by operations that the scores have been pushed.</p>\n<p>GA 4 scores will be a little late to be pushed because there are some manual (i.e. automated using a cu"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_12", "text": "4 scores will be a little late to be pushed because there are some manual (i.e. automated using a custom written script) corrections that have to be made to Q4 for students who got Nur-Sultan as their city.</p>\n<p>Kind regards</p>\n\n---\n**22f2001532** *(created: 2025-02-12T05:32:48.000Z)*\n\n<p>Thanks Carlton. Now the results are visible in the dashboard.</p>\n<p>Thanks<br>\nREVI</p>\n\n---\n**22f2000559** *(created: 2025-02-12T09:43:55.354Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Sir in"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_13", "text": "* *(created: 2025-02-12T09:43:55.354Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Sir in my case, in week 2 it is showing \u201cAbsent\u201d but I have attempted and saved the answers<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/9/1963cbcb144b5c204546563728943940654eaeaf.png\" data-download-href=\"/uploads/short-url/3CBKqzRo17TPmrDYobA9pNFU6pp.png?dl=1\" title=\"Screenshot 2025-02-12 151022\" rel=\"noopener nofollow "}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_14", "text": "l/3CBKqzRo17TPmrDYobA9pNFU6pp.png?dl=1\" title=\"Screenshot 2025-02-12 151022\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-12 151022</span><span class=\"informations\">427\u00d7596 28.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\""}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_15", "text": "=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/2/5/253ef4846824d3c88fbd81c7b5f01310919d4b77.png\" data-download-href=\"/uploads/short-url/5juxVn9gWD8lNgqhH9GED7pFfFB.png?dl=1\" title=\"Screenshot 2025-02-12 151101\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_16", "text": "ta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-12 151101</span><span class=\"informations\">1035\u00d7434 21 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>My email ID is 22f2000559@ds.study.iitm.ac.in.<br>\nThank you.</p>\n\n---\n**carlton** *(created: 2025-02-12T10:04:58.164Z)*\n\n<p>Hi <a class=\"mention\""}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_17", "text": "<br>\nThank you.</p>\n\n---\n**carlton** *(created: 2025-02-12T10:04:58.164Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/22f2000559\">@22f2000559</a></p>\n<p>I can confirm that our server did record your marks as 7, we will make a correction in the dashboard. Thanks for letting us know. My sincere apologies for the error.</p>\n<p>If the marks on the dashboard are not changed within the next 7 days, please let us know. I will follow it up on my end and try to get the correction pushed as soon as possible.</p>\n"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_18", "text": "s know. I will follow it up on my end and try to get the correction pushed as soon as possible.</p>\n<p>Kind regards</p>\n\n---\n**22f2000559** *(created: 2025-02-12T10:06:10.638Z)*\n\n<p>Thank you so much Sir.</p>\n\n---\n**spartacus** *(created: 2025-02-13T06:26:35.949Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/5/8/58731fcaa44326881491cc87ef98e74d64f0bf38.png\" data-download-href=\"/uploads/short-url/cCsFwPgjgbKKauBJ0Y"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_19", "text": "31fcaa44326881491cc87ef98e74d64f0bf38.png\" data-download-href=\"/uploads/short-url/cCsFwPgjgbKKauBJ0YjhWoyZTxC.png?dl=1\" title=\"Screenshot 2025-02-13 105611\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-13 105611</span><span class=\"informations\">251\u00d7317 14.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_20", "text": "4.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nanother embedding</p>\n\n---\n**spartacus** *(created: 2025-02-13T06:28:59.121Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/9/f/9f7fd880739b369030e3fef341f2809d7088c2a2.png\" data-download-href=\"/uploads/short-url/"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_21", "text": "riginal/3X/9/f/9f7fd880739b369030e3fef341f2809d7088c2a2.png\" data-download-href=\"/uploads/short-url/mKZPd2dGyDS9ZJ2OqsaK0ppnGGm.png?dl=1\" title=\"Screenshot 2025-02-13 105835\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-13 105835</span><span class=\"informations\">1140\u00d7737 28.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden="}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_22", "text": "mations\">1140\u00d7737 28.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Sir, In my dashboard i am getting Absent for GA3<br>\nmy email id : 23f3001731@ds.study.iitm.ac.in<br>\ni am not able to submit embeddings more than 1 so i am submitting it in another reply</p>\n\n---\n**AnvithaV** *(created: 2025-02-13T06:46:36.164Z)*\n\n<p>Sir, I have attempted the graded assignment 2 and also saved it but my scor"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_23", "text": "2-13T06:46:36.164Z)*\n\n<p>Sir, I have attempted the graded assignment 2 and also saved it but my score is showing as absent. Please look into the issue sir.<br>\nMy email id is 23f1002071@ds.study.iitm.ac.in</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/8/8/880e6f1a064b5f7939ac0dc075a54762f13c4338.png\" data-download-href=\"/uploads/short-url/jpBRmoigeZCBLlMTJK60IsWXcYU.png?dl=1\" title=\"graded assignment page\" rel=\"n"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_24", "text": "href=\"/uploads/short-url/jpBRmoigeZCBLlMTJK60IsWXcYU.png?dl=1\" title=\"graded assignment page\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">graded assignment page</span><span class=\"informations\">1886\u00d7776 45.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"light"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_25", "text": " aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/9/d/9d583999d28e7f3b710dc0d9e0c4db1019d1c35e.png\" data-download-href=\"/uploads/short-url/mrVZ0IHjkDlFmlYMCgOEtAsmH7M.png?dl=1\" title=\"course dashboard (1)\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"><"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_26", "text": "=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">course dashboard (1)</span><span class=\"informations\">1919\u00d7828 156 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**dshail** *(created: 2025-02-13T12:41:12."}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_27", "text": " <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**dshail** *(created: 2025-02-13T12:41:12.084Z)*\n\n<p>Same issue I\u2019m facing in my dashboard for <strong>week - 3</strong> it shows I\u2019m <strong>absent</strong> although on portal it is showing my marks.</p>\n<p>Please update my dashboard.<br>\nE-mail: 22f2000905@ds.study.iitm.ac.in</p>\n<h1><a name=\"p-594515-tds-2025-jan-ga3-1\" class=\"anchor\" href=\"#p-594515-tds-2025-jan-ga3-1\"></a>TDS 2025 Jan GA3</h1>\n<p><div class=\"lightbox-wrapper\"><a clas"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_28", "text": "ef=\"#p-594515-tds-2025-jan-ga3-1\"></a>TDS 2025 Jan GA3</h1>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/d/5/d5ff9b7b32bb1f8717cb95085fb946c48e781071.png\" data-download-href=\"/uploads/short-url/ux7kV3FLhBDUPvQ9NMzhqWP4jXb.png?dl=1\" title=\"TDS-W3-Results\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"fi"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_29", "text": "con d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">TDS-W3-Results</span><span class=\"informations\">2472\u00d71636 313 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**dshail** *(created: 2025-02-13T12:42:30.391Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_30", "text": "per\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/e/6efe65d7f5cf68ee7ba6a3ffc3c476f35d89a1ca.png\" data-download-href=\"/uploads/short-url/fPTz7VEgJM7ig77ZIl0yLJ6zqNs.png?dl=1\" title=\"TDS 2025 Jan GA3-Dashboard\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">TDS 2025 Jan GA3-Dashboard</span><span class=\"informations\">2750\u00d7132"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_31", "text": "se></svg><span class=\"filename\">TDS 2025 Jan GA3-Dashboard</span><span class=\"informations\">2750\u00d71328 290 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**carlton** *(created: 2025-02-16T02:59:23.470Z)*\n\n<p>Dear Students,</p>\n<p>On the 13th of Feb (3 day ago at the time of this reply) an email was sent to all students with the subject <code>[TDS Jan 2025] Grade Corrections</code>. Please refe"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_32", "text": "was sent to all students with the subject <code>[TDS Jan 2025] Grade Corrections</code>. Please refer to that email.</p>\n<p>Kind regards</p>\n\n---\n**22f3000370** *(created: 2025-02-15T04:32:36.973Z)*\n\n<p>Hello Sir/Mam,<br>\nI had created this thread to inform that my marks for week -2 and week-4 graded assignment have not yet been updated and showing in the dashboard. But I have attended it, Please resolve the issue and do the needful actions.</p>\n<p>Regards,<br>\nSengathirsoorian E T<br>\n(22f30003"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_33", "text": "resolve the issue and do the needful actions.</p>\n<p>Regards,<br>\nSengathirsoorian E T<br>\n(22f3000370@ds.study.iitm.ac.in)</p>\n<p>Week -4<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/7/9/7901577c51f1b3786c79c1857af15f328aaae2df.png\" data-download-href=\"/uploads/short-url/hgsEdbijU2hyTOec8Tz66MeTGHB.png?dl=1\" title=\"Screenshot_20250215-095816\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-ic"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_34", "text": "Screenshot_20250215-095816\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot_20250215-095816</span><span class=\"informations\">1080\u00d71852 263 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>I can\u2019t be able to enclose another screenshot of week-2 ( marks-5) as I was "}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_35", "text": "</div></a></div></p>\n<p>I can\u2019t be able to enclose another screenshot of week-2 ( marks-5) as I was a new user.</p>\n\n---\n**carlton** *(created: 2025-02-16T02:57:22.000Z)*\n\n<p>On the 13th of Feb (3 day ago at the time of this reply) an email was sent to all students with the subject [TDS Jan 2025] Grade Corrections. Please refer to that email.</p>\n<p>Kind regards</p>\n\n---\n**23F3004407_RATANPRIY** *(created: 2025-02-15T20:50:32.496Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"htt"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_36", "text": "(created: 2025-02-15T20:50:32.496Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/4/1/410110dcdcd78d87c2d825c7f2f96f72dfb4b5b1.png\" data-download-href=\"/uploads/short-url/9h3jMZbzNub7WOuHoERffXzjmIV.png?dl=1\" title=\"Screenshot (674)\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot ("}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_37", "text": " svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot (674)</span><span class=\"informations\">1920\u00d71080 273 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<a class=\"mention\" href=\"/u/carlton\">@Carlton</a> D\u2019Silva sir can u please see this why it\u2019s given zero, it should be 8 right n in my dashboard it\u2019s showing absent so what i should do ?</p>\n\n---\n**carl"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_38", "text": "ro, it should be 8 right n in my dashboard it\u2019s showing absent so what i should do ?</p>\n\n---\n**carlton** *(created: 2025-02-16T06:31:56.151Z)*\n\n<p>Please refer to this post</p>\n<aside class=\"quote\" data-post=\"19\" data-topic=\"166816\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    \n    <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/graded-assignment-result-not-showing-kindly-check-on-this/166816/19\">GRADED ASSIGNMENT RESULT NOT SHOWING , kindly check on this</a> <a class="}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_39", "text": "y-check-on-this/166816/19\">GRADED ASSIGNMENT RESULT NOT SHOWING , kindly check on this</a> <a class=\"badge-category__wrapper \" href=\"/c/courses/tds-kb/34\"><span data-category-id=\"34\" style=\"--category-badge-color: #0088CC; --category-badge-text-color: #FFFFFF; --parent-category-badge-color: #3AB54A;\" data-parent-category-id=\"9\" data-drop-close=\"true\" class=\"badge-category --has-parent\" title=\"This category is created to address subject-specific queries related to Tools in Data Science\"><span cla"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_40", "text": " category is created to address subject-specific queries related to Tools in Data Science\"><span class=\"badge-category__name\">Tools in Data Science</span></span></a>\n  </div>\n  <blockquote>\n    On the 13th of Feb (3 day ago at the time of this reply) an email was sent to all students with the subject [TDS Jan 2025] Grade Corrections. Please refer to that email. \nKind regards\n  </blockquote>\n</aside>\n\n\n---\n**23F3004407_RATANPRIY** *(created: 2025-02-16T07:08:03.000Z)*\n\n<p>Okk sir , n sir can u pl"}
{"source": "topics_md/166816.md", "chunk_id": "166816.md_part_41", "text": "e>\n\n\n---\n**23F3004407_RATANPRIY** *(created: 2025-02-16T07:08:03.000Z)*\n\n<p>Okk sir , n sir can u please tell me in which live session u have discussed regarding project becoz till week 3 i have see only n i having confusion in project so i want to see the session of project</p>"}
{"source": "topics_md/169247.md", "chunk_id": "169247.md_part_1", "text": "# Disparity in TDS GA 5 scores\n\n---\n**Pranjal085** *(created: 2025-03-06T06:07:52.489Z)*\n\n<p>My TDS GA score is showing 0,whereas when i open the assignment it is showing last saved score 7.</p>\n\n---\n**carlton** *(created: 2025-03-07T03:03:50.893Z)*\n\n<p>Can you provide your roll no. We can then check your GA5</p>\n\n---\n**carlton** *(created: 2025-03-07T05:05:52.056Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/pranjal085\">@Pranjal085</a></p>\n<p>I have checked your GA5 submission and you have submitted it"}
{"source": "topics_md/169247.md", "chunk_id": "169247.md_part_2", "text": "=\"/u/pranjal085\">@Pranjal085</a></p>\n<p>I have checked your GA5 submission and you have submitted it past the deadline on the 22nd.</p>\n<p>Kind regards</p>"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_1", "text": "# ROE Common Snippets Repo Feb 2025\n\n---\n**22f1000120** *(created: 2025-03-01T21:00:35.056Z)*\n\n<aside class=\"onebox githubrepo\" data-onebox-src=\"https://github.com/ritwiktrivedi/ROE-Master-Snippets-File\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ritwiktrivedi/ROE-Master-Snippets-File\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n  \n\n  <h3><a href=\"https://g"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_2", "text": "ox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n  \n\n  <h3><a href=\"https://github.com/ritwiktrivedi/ROE-Master-Snippets-File\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - ritwiktrivedi/ROE-Master-Snippets-File</a></h3>\n\n    <p><span class=\"github-repo-description\">Contribute to ritwiktrivedi/ROE-Master-Snippets-File development by creating an account on GitHub.</span></p>\n</div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_3", "text": "n></p>\n</div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>This is a repo some of us have been working on. It not complete but we are getting there. PRs are appreciated.</p>\n<p>Thanks to the course team for giving us this idea of having snippets for common operations.</p>\n\n---\n**22f1000120** *(created: 2025-03-01T21:08:47.201Z)*\n\n<p>I am too sleepy to work on it now\u2026 So seriously\u2026 PRs are not only appreciated but needed. Just a"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_4", "text": "\n<p>I am too sleepy to work on it now\u2026 So seriously\u2026 PRs are not only appreciated but needed. Just add the basic parsing code or image manipulation for ga5. I will try and add in the morning but who doesn\u2019t like Good PRs? Also mentioning <a class=\"mention\" href=\"/u/23f2005325\">@23f2005325</a> (Aishik) here for his wonderful PR which I have now merged.</p>\n\n---\n**23f2000573** *(created: 2025-03-01T23:15:51.991Z)*\n\n<p>hi, thanks to you and the other contributors for the effort</p>\n<p>i have added "}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_5", "text": "23:15:51.991Z)*\n\n<p>hi, thanks to you and the other contributors for the effort</p>\n<p>i have added llm week-3 codes through pull request. my code my not be perfect. but when I ran it in my laptop, it worked fine. pls do verify once before ROE</p>\n\n---\n**22f1000120** *(created: 2025-03-02T03:51:09.190Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/4/64c7cdf7626ee50fdc262143cf9484c83a546333.png\" data-download-hre"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_6", "text": "flex013/uploads/iitm/original/3X/6/4/64c7cdf7626ee50fdc262143cf9484c83a546333.png\" data-download-href=\"/uploads/short-url/enxPeq2kQrOaXna3jQIsczPnsI3.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">401\u00d7374 21 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discours"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_7", "text": "span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nThis looks beautiful </p>\n\n---\n**22f1000120** *(created: 2025-03-02T11:27:20.581Z)*\n\n<p>Failure is part of life. My laptop hanged and despite having all the needed resources I panicked and the exam went the way it went. I take this as a lesson. This resource will be refined further. I thank everyone involved. I am glad that many benefitted and were actual"}
{"source": "topics_md/168901.md", "chunk_id": "168901.md_part_8", "text": "e will be refined further. I thank everyone involved. I am glad that many benefitted and were actually able to score well.</p>"}
{"source": "topics_md/162425.md", "chunk_id": "162425.md_part_1", "text": "# TDS calendar link not found\n\n---\n**23f3001764** *(created: 2025-01-12T09:33:00.181Z)*\n\n<p>where we can find tools in data science calendar link I cannot find it in my course tab?</p>\n\n---\n**carlton** *(created: 2025-01-12T12:58:00.008Z)*\n\n<p>Hi Sahil,</p>\n<p>Please find it at the following location.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/b/6/b690d26af607c7a3a2af2f41a6e89d323ac7510c.png\" data-download-hre"}
{"source": "topics_md/162425.md", "chunk_id": "162425.md_part_2", "text": "flex013/uploads/iitm/original/3X/b/6/b690d26af607c7a3a2af2f41a6e89d323ac7510c.png\" data-download-href=\"/uploads/short-url/q33b6S3iI8kC4Lyes75Md4rxNg0.png?dl=1\" title=\"Screenshot 2025-01-12 at 18.25.31\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-01-12 at 18.25.31</span><span class=\"informations\">2474\u00d71306 330 KB</span><svg class=\"fa d-icon d-icon-discour"}
{"source": "topics_md/162425.md", "chunk_id": "162425.md_part_3", "text": "8.25.31</span><span class=\"informations\">2474\u00d71306 330 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Kind regards</p>"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_1", "text": "# --Request for postponing the Project -1 deadline-- Official Response: Extended :)\n\n---\n**vikramjncasr** *(created: 2025-02-12T14:07:52.960Z)*\n\n<p>Hello <a class=\"mention\" href=\"/u/carlton\">@carlton</a> and <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a>   and  <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> sir</p>\n<p>It is becoming quite evident that a lot of us will struggle to get something decent out for the project-1 by saturday and we are struggling here. I request to reconsider the de"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_2", "text": " decent out for the project-1 by saturday and we are struggling here. I request to reconsider the deadline and extend the due date so that it gives slightly more odds of submitting the project.</p>\n<p>Thanks<br>\nVikram</p>\n\n---\n**22f1000376** *(created: 2025-02-13T18:22:49.380Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> Yes Sir please extend the project deadline.</p>\n\n---\n**22f3000276** *(created: 2025-02-13T18:27:23.305Z)*\n\n<p>yes, "}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_3", "text": "extend the project deadline.</p>\n\n---\n**22f3000276** *(created: 2025-02-13T18:27:23.305Z)*\n\n<p>yes, it is quite difficult and also the people who have done this course in previous terms are able to help just because of the difficulty. please extend the deadline or give out some resources.</p>\n\n---\n**23f2004636** *(created: 2025-02-13T18:28:14.505Z)*\n\n<p>Yes <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> , <a class=\"mention\" href=\"/u/carlton\">@carlton</a> ,<br>\nThe project is complex, and an e"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_4", "text": "anand</a> , <a class=\"mention\" href=\"/u/carlton\">@carlton</a> ,<br>\nThe project is complex, and an extension would really help reduce our stress and let us submit better work.<br>\nAdditionally, some extra help sessions would be really helpful to clarify our doubts.</p>\n\n---\n**23f2004563** *(created: 2025-02-13T18:33:03.508Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> yes sir please extend the project deadline.</p>\n\n---\n**sharik4real**"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_5", "text": " href=\"/u/s.anand\">@s.anand</a> yes sir please extend the project deadline.</p>\n\n---\n**sharik4real** *(created: 2025-02-13T18:34:08.893Z)*\n\n<p>Sir please extend the deadline it\u2019s really hard to do we need more time</p>\n\n---\n**Mystic_9803** *(created: 2025-02-13T18:34:27.419Z)*\n\n<p>Yes, it\u2019s too hectic to balance work and this project</p>\n\n---\n**Rishabh2** *(created: 2025-02-13T18:36:17.170Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> "}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_6", "text": "<a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> sir plss extend deadline as it is taking too much time to understand the project and this is completely new for us, we are trying our best but couldn\u2019t able to make it. Some days extension might reduce our stress and we\u2019ll perform better in the project as this is very important for us.</p>\n\n---\n**23f1002279** *(created: 2025-02-13T18:40:18.167Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_7", "text": "f1002279** *(created: 2025-02-13T18:40:18.167Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a>  <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a>  sir pls extend the deadline as the GATE DA exam is also scheduled on Saturday</p>\n\n---\n**varun_parashar** *(created: 2025-02-13T18:46:47.187Z)*\n\n<p>Please extend the deadline </p>\n\n---\n**22f2001175** *(created: 2025-02-13T18:48:25.522Z)*\n\n<p><a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> sir"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_8", "text": "class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> sir pls extend the deadline of project1 as it\u2019s very difficult,  we are spending so much of time still not able to complete the project and the gate exam is also on 15 February. We would be grateful if the deadline could be extended\u2026</p>\n\n---\n**22f3000819** *(created: 2025-02-13T18:52:24.978Z)*\n\n<p>Please at least make it 16 or 17 Feb. The GATE DA exam and project deadline coinciding has already hamp"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_9", "text": "ase at least make it 16 or 17 Feb. The GATE DA exam and project deadline coinciding has already hampered progress on both ends. At least the project will be much better even with the smallest possible extension.</p>\n\n---\n**23f2003413** *(created: 2025-02-13T19:58:12.870Z)*\n\n<p>Kindly consider the request and extend the deadline sir. It would be really helpful as we could atleast work upto our full potential and submit few tasks increasing the odds of our submission. <a class=\"mention\" href=\"/u/c"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_10", "text": " potential and submit few tasks increasing the odds of our submission. <a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a></p>\n\n---\n**AYUSH_SINGH** *(created: 2025-02-13T20:37:40.537Z)*\n\n<p>Indeed, even i am stuck in project parts and a lot of them.<br>\nEXTEND !!!</p>\n\n---\n**Flibon** *(created: 2025-02-13T21:44:36.410Z)*\n\n<p>Kindly consider our request to extend the deadline, as many students have their GATE exam on Saturday. A slight extension wou"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_11", "text": "st to extend the deadline, as many students have their GATE exam on Saturday. A slight extension would be greatly helpful.</p>\n\n---\n**22f3000107** *(created: 2025-02-14T03:44:17.169Z)*\n\n<p>SIr please extend the deadline of project 1 give us  2 to 3 days it was helpful for us.</p>\n\n---\n**carlton** *(created: 2025-02-14T06:44:21.075Z)*\n\n<p><a class=\"mention\" href=\"/u/22f1000376\">@22f1000376</a> <a class=\"mention\" href=\"/u/22f3000276\">@22f3000276</a> <a class=\"mention\" href=\"/u/23f2004636\">@23f2004"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_12", "text": "lass=\"mention\" href=\"/u/22f3000276\">@22f3000276</a> <a class=\"mention\" href=\"/u/23f2004636\">@23f2004636</a> <a class=\"mention\" href=\"/u/23f2004563\">@23f2004563</a> <a class=\"mention\" href=\"/u/sharik4real\">@sharik4real</a> <a class=\"mention\" href=\"/u/mystic_9803\">@Mystic_9803</a> <a class=\"mention\" href=\"/u/rishabh2\">@Rishabh2</a> <a class=\"mention\" href=\"/u/23f1002279\">@23f1002279</a> <a class=\"mention\" href=\"/u/varun_parashar\">@varun_parashar</a> <a class=\"mention\" href=\"/u/22f2001175\">@22f2001"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_13", "text": "ntion\" href=\"/u/varun_parashar\">@varun_parashar</a> <a class=\"mention\" href=\"/u/22f2001175\">@22f2001175</a></p>\n<p>and others\u2026</p>\n<p>I have discussed this with the rest of the TDS team and with Operations on multiple occasions (including today.) Here are the highlights of the discussion:</p>\n<ul>\n<li>We have moved Graded Assignment 5 (GA5) deadline which was due on 16th Feb to 21st Feb next Friday.</li>\n<li>All the material to be able to do Project was available in Module 2 and Module 3, which "}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_14", "text": "y.</li>\n<li>All the material to be able to do Project was available in Module 2 and Module 3, which was released on or before 10th of January (36 days ago)</li>\n<li>Project 1 was released 19th of January (27 days ago)</li>\n<li>We had over 9 hours of sessions exclusively covering Project 1 (of which at least 8 hours are available on YouTube.) This excludes any week 2 and week 3 content which also would have given you the necessary skills to do Project 1. The sessions on YouTube give you a start t"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_15", "text": "ould have given you the necessary skills to do Project 1. The sessions on YouTube give you a start to finish overview of how to approach it.</li>\n</ul>\n<p>All of your concerns were duly noted and mentioned. Considering all the above, including the concerns mentioned by students:</p>\n<p><strong>Project 1 deadline will NOT be changed.</strong></p>\n<p>Please make sure to carefully read the Deliverables and the Evaluation section and do them carefully and watch the intro to Week 3 - Session 1 to get"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_16", "text": "es and the Evaluation section and do them carefully and watch the intro to Week 3 - Session 1 to get an overview of what is absolutely essential and required. Watch Week 5 both sessions to see how we construct these requirements.</p>\n<p>Kind regards<br>\nTDS Team</p>\n\n---\n**ShahbaazSingh** *(created: 2025-02-14T06:50:15.092Z)*\n\n<p>-Yes sir this project 1 is very tough for even 1 question a whole day is used.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_17", "text": "y is used.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> Sir besides this project we have other subject graded assignments and MLP Project and MAD2 project.<br>\nPlease sir it would be very beneficial for everyone, we have talked to other students also we are not able to even complete the 10 A tasks even with the evaluate.py rest aside Task B.<br>\nPlease sir take this into consideration. We are trying very hard for this project even you ca"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_18", "text": "B.<br>\nPlease sir take this into consideration. We are trying very hard for this project even you can see students asking various questions in the discourse, we are struggling but still sir we are trying.</p>\n\n---\n**sha_512_av** *(created: 2025-02-14T10:38:25.088Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a></p>\n<p>We truly appreciate the efforts being put by the TDS team, but not to be r"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_19", "text": "nand\">@s.anand</a></p>\n<p>We truly appreciate the efforts being put by the TDS team, but not to be rude here -</p>\n<ul>\n<li>\n<p>Why is Project 1 deadline is on Saturday and not on Sunday, as many of us are doing the course <strong>not as a full-time</strong> student. (Some have Gate exam on Saturday also). So, extending the timeline to at least Sunday, 16th Feb would be truly appreciated.</p>\n</li>\n<li>\n<p>Week 3 release date timeline is 24 Jan, we need adequate time to go through the weekly mat"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_20", "text": ">\n<li>\n<p>Week 3 release date timeline is 24 Jan, we need adequate time to go through the weekly materials. All the contents are already released, so by the same logic upcoming Project 2 contents are also available but that doesn\u2019t mean that we can complete the upcoming project within a week.</p>\n</li>\n<li>\n<p>Project help sessions came on 11th February(live) and 12th Feb on YouTube, just 4 days before the submission date, though I am not complaining about this and genuinely appreciating the tea"}
{"source": "topics_md/166866.md", "chunk_id": "166866.md_part_21", "text": "efore the submission date, though I am not complaining about this and genuinely appreciating the team\u2019s effort, but this does gives very less time for many of us here.</p>\n</li>\n</ul>\n<p>Thank you.</p>\n\n---\n**HarshJaiswal** *(created: 2025-02-14T11:38:25.143Z)*\n\n<p>sir\u2026please extend the deadline\u2026</p>"}
{"source": "topics_md/168825.md", "chunk_id": "168825.md_part_1", "text": "# Not recieved the roe link mail\n\n---\n**23f2003535** *(created: 2025-03-01T07:37:08.926Z)*\n\n<p>Hello sir, I did not recieve the mail for roe exam Pls look into it.</p>\n\n---\n**Jivraj** *(created: 2025-03-01T10:28:22.396Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/23f2003535\">@23f2003535</a></p>\n<p>Mail was sent 1hour ago, you would have received now.</p>\n\n---\n**21f3001303** *(created: 2025-03-02T06:03:08.910Z)*\n\n<p>sir we have to join the google meet for roe also?? Or its an open book exam?</p>"}
{"source": "topics_md/168825.md", "chunk_id": "168825.md_part_2", "text": ".910Z)*\n\n<p>sir we have to join the google meet for roe also?? Or its an open book exam?</p>"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_1", "text": "# Clarification regarding Mock ROE Timings\n\n---\n**24f2006531** *(created: 2025-02-25T05:11:07.182Z)*\n\n<p>Hello Sir,</p>\n<p>I understand from the email we received that there are three mock ROEs scheduled. I wanted to check if it is mandatory to attempt the mock at 7 PM or if there is flexibility in the timing. As a working professional, I may not be able to attempt the mock at 7 PM.</p>\n<p>Could you please confirm if there is any flexibility in the timings? Additionally, I would appreciate it if"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_2", "text": "ou please confirm if there is any flexibility in the timings? Additionally, I would appreciate it if you could provide details on when and how the mock links will be shared.</p>\n<p>Thanks and Regards<br>\nShalini</p>\n\n---\n**22f3002248** *(created: 2025-02-25T05:34:01.922Z)*\n\n<p>Tag the TAs and instructor. Otherwise, you may not get the answer in time\u2026</p>\n\n---\n**carlton** *(created: 2025-02-25T05:52:51.182Z)*\n\n<p>It is not mandatory to attempt mocks at 7pm. But we will solve it in real time durin"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_3", "text": "2:51.182Z)*\n\n<p>It is not mandatory to attempt mocks at 7pm. But we will solve it in real time during the session. Thats why we are releasing it 1 hour before. We will freeze the form submissions during the solving session and then reopen it later.</p>\n<p>ROE is not like other exams you have done so far in this entire diploma.</p>\n<p>Solving it leisurely will give you a false sense of your capabilities.<br>\nThe truth is everyone can get full marks for ROE given enough time.<br>\n<em>The problem i"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_4", "text": "ities.<br>\nThe truth is everyone can get full marks for ROE given enough time.<br>\n<em>The problem is the lack of time.</em></p>\n<p>So if you want to really check ROE readiness, fix the timer alarm for 45 mins and attempt it genuinely within the 45 mins. Only then will you know where you stand.</p>\n<p>Additionally, each ROE is completely different from the next. If you manage to do good in one is ZERO guarantee that you will do good in the next.</p>\n<p>Thats why do all 4 mock ROEs. ROE is not li"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_5", "text": "ZERO guarantee that you will do good in the next.</p>\n<p>Thats why do all 4 mock ROEs. ROE is not like any other exam. Other exams have the same types of questions. Not with ROE.</p>\n<p>The real ROE will be also something that no one has seen before.<br>\nBut we will help you be as ready as possible for it.</p>\n<p>Kind regards</p>\n\n---\n**23f2003413** *(created: 2025-02-25T10:38:35.694Z)*\n\n<p>hi <a class=\"mention\" href=\"/u/carlton\">@carlton</a><br>\nhow are we supposed to give the mock ROE? where c"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_6", "text": "class=\"mention\" href=\"/u/carlton\">@carlton</a><br>\nhow are we supposed to give the mock ROE? where can I find the link? should i join gmeet while solving mock ROE or is it non-proctored? kindly clarify these doubts. thanks in advance!</p>\n\n---\n**carlton** *(created: 2025-02-25T10:58:33.712Z)*\n\n<p>You will get an email at 7pm with the ROE dataset and the question form.<br>\nI will also add the same in the student seek portal.<br>\nMock ROEs are not proctored (its a mock!) and the actual ROE is not "}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_7", "text": "in the student seek portal.<br>\nMock ROEs are not proctored (its a mock!) and the actual ROE is not proctored either!<br>\nThe gmeet is after the mock ROE where it will be solved live by the TDS team.</p>\n<p>Kind regards</p>\n\n---\n**23f1002382** *(created: 2025-02-25T13:05:15.578Z)*\n\n<p>3 questions:-</p>\n<ul>\n<li>will the questions and dataset be available after time limit?</li>\n<li>will the solutions be available for later reference with the questions?</li>\n<li>will the live solving video lecture"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_8", "text": "ns be available for later reference with the questions?</li>\n<li>will the live solving video lecture be recorded?</li>\n</ul>\n\n---\n**carlton** *(created: 2025-02-25T13:10:30.614Z)*\n\n<aside class=\"quote group-ds-students\" data-username=\"23f1002382\" data-post=\"6\" data-topic=\"168384\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n 23f1002382:</div>\n<blockquote>\n<p>will the questions and dataset be available after time limit?</p>\n</blockquote>\n</aside>\n<p>They will be available after the liv"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_9", "text": "et be available after time limit?</p>\n</blockquote>\n</aside>\n<p>They will be available after the live session has finished.</p>\n<aside class=\"quote group-ds-students\" data-username=\"23f1002382\" data-post=\"6\" data-topic=\"168384\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n 23f1002382:</div>\n<blockquote>\n<p>will the solutions be available for later reference with the questions?</p>\n</blockquote>\n</aside>\n<p>We will provide an answer script for Mock ROE1</p>\n<aside class=\"quote group-ds"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_10", "text": "ckquote>\n</aside>\n<p>We will provide an answer script for Mock ROE1</p>\n<aside class=\"quote group-ds-students\" data-username=\"23f1002382\" data-post=\"6\" data-topic=\"168384\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n 23f1002382:</div>\n<blockquote>\n<p>will the live solving video lecture be recorded?</p>\n</blockquote>\n</aside>\n<p>Yes our live sessions will be recorded.</p>\n\n---\n**23f1002382** *(created: 2025-02-25T13:14:38.360Z)*\n\n<p>thanks for the prompt response! Cheers . Also to my "}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_11", "text": "382** *(created: 2025-02-25T13:14:38.360Z)*\n\n<p>thanks for the prompt response! Cheers . Also to my understanding at sharp 7:00 we get email with form link and questions dataset?</p>\n\n---\n**23f2000573** *(created: 2025-02-25T13:36:56.128Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/carlton\">@carlton</a> , I will not be able to solve the mock in the given time due to other commitments. The grading document says 2 marks bonus for mocks. Will this be a part of that? If yes, is there any other way? As you "}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_12", "text": "t says 2 marks bonus for mocks. Will this be a part of that? If yes, is there any other way? As you have mentioned, I will keep a timer and try to solve it in 45 minutes.</p>\n\n---\n**shubhamatkal** *(created: 2025-02-26T10:21:12.253Z)*\n\n<aside class=\"quote group-ds-students\" data-username=\"carlton\" data-post=\"7\" data-topic=\"168384\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n carlton:</div>\n<blockquote>\n<p>No, we do not provide solutions as a notebook. The ROE will be solved during th"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_13", "text": "div>\n<blockquote>\n<p>No, we do not provide solutions as a notebook. The ROE will be solved during the live session.</p>\n</blockquote>\n</aside>\n<p>yes in live session ROE was solved but while taking reference for Q1 from live session from TAs to see how this question might be solved as i was getting wrong answer, but TA also didnt solved that question in correct manner he got wrong, I think we should have at least 1 standard ref for all the questions of this mock roe to understand our mistakes in"}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_14", "text": "ld have at least 1 standard ref for all the questions of this mock roe to understand our mistakes in solving this questions pls understand thanks,<br>\nalso when i went throught live session recording i can see only 1 screen of 1 ta</p>\n\n---\n**Jivraj** *(created: 2025-02-26T13:58:52.609Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/shubhamatkal\">@shubhamatkal</a> ,</p>\n<p>For question1 provided answer is wrong.<br>\nRegarding yesterday\u2019s ROE we will send out ipynb with snippets of code that\u2019s requried to "}
{"source": "topics_md/168384.md", "chunk_id": "168384.md_part_15", "text": "rong.<br>\nRegarding yesterday\u2019s ROE we will send out ipynb with snippets of code that\u2019s requried to solve questions.</p>\n<p>For Today\u2019s ROE you will be able to check answers immediately</p>\n<p>For Thrusday\u2019s ROE as well there will be some mechanism for checking answers.</p>\n<p>Kind regards.</p>"}
{"source": "topics_md/166651.md", "chunk_id": "166651.md_part_1", "text": "# Tds w4- q3\n\n---\n**22f3003083** *(created: 2025-02-09T15:23:28.169Z)*\n\n<p>By going into inspect, copying the json, pasting into the portal and correcting the errors accordingly with chat gpt. Somehow got it done but very tiresome for just 1 mark.</p>"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_1", "text": "# Project 1 Submission Marked as FAIL Despite Having Dockerfile & Image\n\n---\n**21f3002647** *(created: 2025-02-17T10:07:56.783Z)*\n\n<p>Dear TDS Team,</p>\n<p>I have verified my submission, and my repository <strong>does include a Dockerfile</strong>, and the <strong>Docker image is accessible on DockerHub</strong>. Please find the attached screenshot as proof. Kindly review my submission again and let me know if any further action is needed.</p>\n<p>Looking forward to your confirmation.</p>\n<p>Best"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_2", "text": "et me know if any further action is needed.</p>\n<p>Looking forward to your confirmation.</p>\n<p>Best regards,<br>\nArnav Mehta<br>\n(21f3002647)</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/a/6a4a28aa638840e8d2e4dbf246ca235fd41e5ccb.png\" data-download-href=\"/uploads/short-url/fahuMqTlIDS9GwNGNM399QrBKhJ.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image s"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_3", "text": "title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">250\u00d7534 3.92 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/orig"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_4", "text": "htbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/d/1/d14c53cce65e7ac7f679de75bba301f3ee23f1f0.png\" data-download-href=\"/uploads/short-url/tRxjXpqC5mBAEB7FLLzaX0j5ccg.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">713\u00d7238 11 KB</span><svg class=\"fa d-ico"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_5", "text": "pan class=\"filename\">image</span><span class=\"informations\">713\u00d7238 11 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**21f3002647** *(created: 2025-02-17T12:30:15.244Z)*\n\n<p><a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> sir what should i do?</p>\n\n---\n**Saransh_Saini** *(created: 2025-02-17T15:43:39.614Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Kindly have a loo"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_6", "text": ": 2025-02-17T15:43:39.614Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Kindly have a look into this.</p>\n\n---\n**satviksawhney** *(created: 2025-02-18T00:48:03.881Z)*\n\n<p>Good Morning Sir,<br>\nSir even I am facing a similar issue, even though sanity check for docker image on docker hub was cleared but got a mail saying \u2018dockerfile\u2019 not present in the GitHub repo while it clearly was. Sir please look into it we have given so many days to complete this project.</p>\n<p>Looking forward to"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_7", "text": "r please look into it we have given so many days to complete this project.</p>\n<p>Looking forward to your reply.</p>\n<p>Thank you<br>\nSatvik Sawhney<br>\n23f2003680</p>\n\n---\n**carlton** *(created: 2025-02-18T05:00:31.191Z)*\n\n<p>So the reason for the failure is:</p>\n<p>You had initially put your Dockerfile inside a directory called TDSP-1-main instead of being directly in your repo. (On 15th Feb 1:26AM)</p>\n<p>Then when our automated script checked if students repos met the requirements and yours "}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_8", "text": "6AM)</p>\n<p>Then when our automated script checked if students repos met the requirements and yours did not we immediately sent out a warning email as a opportunity for students to make the necessary corrections.</p>\n<p>Then once you realised your mistake, on <strong>Feb 17th at 9:11 pm IST</strong> i.e <em>yesteday</em>, you changed your repo to put the files in the correct locations.</p>\n<p>Then you finally posted here on Discourse with the image [quote=\u201c21f3002647, post:1, topic:167471\u201d]<br>\n"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_9", "text": " you finally posted here on Discourse with the image [quote=\u201c21f3002647, post:1, topic:167471\u201d]<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/a/6a4a28aa638840e8d2e4dbf246ca235fd41e5ccb.png\" data-download-href=\"/uploads/short-url/fahuMqTlIDS9GwNGNM399QrBKhJ.png?dl=1\" title=\"image\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"fi"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_10", "text": "con d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">250\u00d7534 3.92 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n[/quote]</p>\n<p>showing that your files are in the correct place.</p>\n<p>We do not take into consideration modifications to your repo after the deadline because then we would have to extend tha"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_11", "text": "consideration modifications to your repo after the deadline because then we would have to extend that curtesy to all students.</p>\n<p>Kind regards</p>\n\n---\n**21f3002647** *(created: 2025-02-18T06:35:49.560Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> sir<br>\nYes, I corrected my repo at 9:11 PM IST, but I had actually written and submitted my query much earlier at 4 PM. At that time, I wasn\u2019t entirely sure if this was the actual issue, but it looks like it was.</p>\n<p>I understand tha"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_12", "text": "wasn\u2019t entirely sure if this was the actual issue, but it looks like it was.</p>\n<p>I understand that the deadline had already passed, and I only saw the email later. I had two GATE papers on the 15th and an interview on the 16th, so I was extremely busy and couldn\u2019t check my emails sooner. However, I had raised my concern well before making the correction, so I\u2019d really appreciate it if my submission could still be considered </p>\n<p>Kind regards,<br>\nArnav Mehta<br>\n21f3002647</p>\n\n---\n**satvi"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_13", "text": "sion could still be considered </p>\n<p>Kind regards,<br>\nArnav Mehta<br>\n21f3002647</p>\n\n---\n**satviksawhney** *(created: 2025-02-18T08:28:16.577Z)*\n\n<p>Sir, please consider it we have spent a lot of time, in my case just the d in Dockerfile was small that too on remote repository. On my local repository it was Dockerfile only I even have a published docker image as verified by you autated script only. The name of the file on remote repository did not change even after commit it through my local"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_14", "text": "only. The name of the file on remote repository did not change even after commit it through my local repo, once I read the mail in morning it was only then I realised it wasn\u2019t changed on GitHub repo.</p>\n<p>Sir I understand the deadline has passed and I am not asking for a resubmission, I am just asking to consider the already submitted work, just that. It would be really helpful. I just have one commit on my repo that too \u201cRename dockerfile to Dokerfile\u201d . Sir please attest consider what we ha"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_15", "text": " commit on my repo that too \u201cRename dockerfile to Dokerfile\u201d . Sir please attest consider what we have already submitted. I have made no changes as you can verify it too.</p>\n<p>Sir it is a humble request to please consider it.</p>\n<p>Warm Regards,<br>\nSatvik Sawhney<br>\n23f2003680</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/a/1a5f2ea044383efcb5d248ddb487665e9e65957d.png\" data-download-href=\"/uploads/short-ur"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_16", "text": "/original/3X/1/a/1a5f2ea044383efcb5d248ddb487665e9e65957d.png\" data-download-href=\"/uploads/short-url/3Lil8Qu84E3T6jREDGJRO6bakiN.png?dl=1\" title=\"Screenshot 2025-02-18 at 1.53.10 PM\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-18 at 1.53.10 PM</span><span class=\"informations\">1889\u00d7467 54 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon"}
{"source": "topics_md/167471.md", "chunk_id": "167471.md_part_17", "text": "pan class=\"informations\">1889\u00d7467 54 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_1", "text": "# Q3, GA5 not accepting right answer\n\n---\n**muskan2431** *(created: 2025-02-21T18:32:17.871Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/5/158680f0acc5ef430efd87e8a1cc59a78e6d5e07.png\" data-download-href=\"/uploads/short-url/34qcnwBcLwmxZulqWMVZUZGT9gX.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\">"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_2", "text": "s=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1337\u00d7683 31.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nIt seems that the question in <em>Graded Assignment 5 for TDS</em> is producing incorrect results despite the same logic working correctly for other variations of th"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_3", "text": "> is producing incorrect results despite the same logic working correctly for other variations of the problem. Please check into this question once as I have cross checked with many of the students and chatgpt and all of us faced  this issue in this question. Thanks!<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a></p>\n<p>code to take reference from:</p>\n<pre><code class=\"lang-auto\">import gzip\nimport pandas as pd\nfrom datetime import dateti"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_4", "text": "e from:</p>\n<pre><code class=\"lang-auto\">import gzip\nimport pandas as pd\nfrom datetime import datetime\n\nlog_path = 's-anand.net-May-2024.gz'\nstart_time = datetime.strptime('01:00:00', '%H:%M:%S').time()\nend_time = datetime.strptime('15:00:00', '%H:%M:%S').time()\nlog_data = []\n\ndef parse_log(line):\n    parts = line.split(' ')\n    log_time = datetime.strptime(parts[3][1:], '%d/%b/%Y:%H:%M:%S')\n    method, url, status = parts[5][1:], parts[6], int(parts[8])\n    return log_time, method, url, status\n"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_5", "text": "ethod, url, status = parts[5][1:], parts[6], int(parts[8])\n    return log_time, method, url, status\n\nwith gzip.open(log_path, 'rt') as file:\n    for entry in file:\n        log_time, method, url, status = parse_log(entry)\n        if method == 'GET' and url.startswith('/blog/') and 200 &lt;= status &lt; 300:\n            if log_time.weekday() == 0 and start_time &lt;= log_time.time() &lt; end_time:\n                log_data.append(entry)\n\nprint(f\"Successful GET requests: {len(log_data)}\")\n</code></p"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_6", "text": "               log_data.append(entry)\n\nprint(f\"Successful GET requests: {len(log_data)}\")\n</code></pre>\n<p>ps: I shared code after the deadline hopefully no issues there! </p>\n\n---\n**amitchaurasia** *(created: 2025-02-22T04:08:00.787Z)*\n\n<p>I\u2019m also facing same kind of issue in Q3, GA5, while cross checked answer from different methods getting same result 1603, which is showing incorrect.<br>\nKindly check this issue.<br>\nThanks</p>\n\n---\n**Aryxn** *(created: 2025-02-22T05:52:55.677Z)*\n\n<p>The sam"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_7", "text": "ly check this issue.<br>\nThanks</p>\n\n---\n**Aryxn** *(created: 2025-02-22T05:52:55.677Z)*\n\n<p>The same issue is being faced by many students, not only for this condition, but others as well. Please look into it</p>\n\n---\n**23f2000573** *(created: 2025-02-22T08:28:29.532Z)*\n\n<p>actually i got 130 as answer. but the answer accepted by the portal was 129. i felt like, i have to change one or two numbers front and back, i tried the same before. it worked </p>\n\n---\n**muskan2431** *(created: 2025-02-22T"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_8", "text": "s front and back, i tried the same before. it worked </p>\n\n---\n**muskan2431** *(created: 2025-02-22T09:57:39.167Z)*\n\n<p>For the same question? But it shouldnt be +1 -1 to get the correct answer right.</p>\n\n---\n**carlton** *(created: 2025-02-24T11:48:02.411Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/muskan2431\">@muskan2431</a> we are running some checks.</p>\n<p>Please bear with us,<br>\nKind regards</p>\n\n---\n**carlton** *(created: 2025-02-25T11:13:32.454Z)*\n\n<p>We have determined that some students wer"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_9", "text": "\n---\n**carlton** *(created: 2025-02-25T11:13:32.454Z)*\n\n<p>We have determined that some students were affected by GA5 Q3. Whoever we have identified as having received the incorrect assessment will receive 1 mark for that particular question. These are the students that we have identified as been assessed incorrectly:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>SN</th>\n<th>Email</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>21f1000131@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>2</td>\n<td>"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_10", "text": "\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>21f1000131@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>2</td>\n<td>21f1001484@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>3</td>\n<td>21f1001631@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>4</td>\n<td>21f1001729@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>5</td>\n<td>21f1001890@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>6</td>\n<td>21f1002734@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>7</td>\n<td>21f1002773@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>8</td>\n<td>21f1003135@ds.study.iitm.ac."}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_11", "text": "</td>\n<td>21f1002773@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>8</td>\n<td>21f1003135@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>9</td>\n<td>21f1003475@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>10</td>\n<td>21f1003816@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>11</td>\n<td>21f1005422@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>12</td>\n<td>21f1005510@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>13</td>\n<td>21f1006234@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>14</td>\n<td>21f1006309@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_12", "text": "study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>14</td>\n<td>21f1006309@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>15</td>\n<td>21f1006867@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>16</td>\n<td>21f2000525@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>17</td>\n<td>21f2000913@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>18</td>\n<td>21f2000998@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>19</td>\n<td>21f2001061@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>20</td>\n<td>21f2001080@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>21</td>\n<td>21f2001543"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_13", "text": "</tr>\n<tr>\n<td>20</td>\n<td>21f2001080@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>21</td>\n<td>21f2001543@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>22</td>\n<td>21f3000311@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>23</td>\n<td>21f3000355@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>24</td>\n<td>21f3000512@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>25</td>\n<td>21f3000591@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>26</td>\n<td>21f3000687@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>27</td>\n<td>21f3000813@ds.study.iitm.ac.in</"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_14", "text": "\n<td>21f3000687@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>27</td>\n<td>21f3000813@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>28</td>\n<td>21f3001091@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>29</td>\n<td>21f3001161@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>30</td>\n<td>21f3001936@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>31</td>\n<td>21f3001965@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>32</td>\n<td>21f3002158@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>33</td>\n<td>21f3002431@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>34<"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_15", "text": "dy.iitm.ac.in</td>\n</tr>\n<tr>\n<td>33</td>\n<td>21f3002431@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>34</td>\n<td>21f3002444@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>35</td>\n<td>21f3002647@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>36</td>\n<td>21f3002782@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>37</td>\n<td>21f3003195@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>38</td>\n<td>22ds2000011@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>39</td>\n<td>22f1000376@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>40</td>\n<td>22f1000821@d"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_16", "text": "tr>\n<tr>\n<td>39</td>\n<td>22f1000376@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>40</td>\n<td>22f1000821@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>41</td>\n<td>22f1000902@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>42</td>\n<td>22f1000935@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>43</td>\n<td>22f1000989@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>44</td>\n<td>22f1001095@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>45</td>\n<td>22f1001316@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>46</td>\n<td>22f1001391@ds.study.iitm.ac.in</td"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_17", "text": "td>22f1001316@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>46</td>\n<td>22f1001391@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>47</td>\n<td>22f1001416@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>48</td>\n<td>22f1001438@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>49</td>\n<td>22f1001542@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>50</td>\n<td>22f1001551@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>51</td>\n<td>22f1001552@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>52</td>\n<td>22f1001862@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>53</t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_18", "text": ".iitm.ac.in</td>\n</tr>\n<tr>\n<td>52</td>\n<td>22f1001862@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>53</td>\n<td>22f2000108@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>54</td>\n<td>22f2000113@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>55</td>\n<td>22f2000116@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>56</td>\n<td>22f2000273@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>57</td>\n<td>22f2000467@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>58</td>\n<td>22f2000813@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>59</td>\n<td>22f2000898@ds.s"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_19", "text": "\n<tr>\n<td>58</td>\n<td>22f2000813@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>59</td>\n<td>22f2000898@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>60</td>\n<td>22f2000946@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>61</td>\n<td>22f2001041@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>62</td>\n<td>22f2001336@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>63</td>\n<td>22f2001532@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>64</td>\n<td>22f2001590@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>65</td>\n<td>22f3000275@ds.study.iitm.ac.in</td>\n<"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_20", "text": "22f2001590@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>65</td>\n<td>22f3000275@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>66</td>\n<td>22f3000337@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>67</td>\n<td>22f3000419@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>68</td>\n<td>22f3000422@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>69</td>\n<td>22f3000487@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>70</td>\n<td>22f3000563@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>71</td>\n<td>22f3000694@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>72</td>\n"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_21", "text": "tm.ac.in</td>\n</tr>\n<tr>\n<td>71</td>\n<td>22f3000694@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>72</td>\n<td>22f3000814@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>73</td>\n<td>22f3000819@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>74</td>\n<td>22f3000831@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>75</td>\n<td>22f3000833@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>76</td>\n<td>22f3001050@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>77</td>\n<td>22f3001074@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>78</td>\n<td>22f3001108@ds.stud"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_22", "text": "r>\n<td>77</td>\n<td>22f3001074@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>78</td>\n<td>22f3001108@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>79</td>\n<td>22f3001278@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>80</td>\n<td>22f3001316@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>81</td>\n<td>22f3001675@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>82</td>\n<td>22f3001688@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>83</td>\n<td>22f3001777@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>84</td>\n<td>22f3001834@ds.study.iitm.ac.in</td>\n</tr"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_23", "text": "3001777@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>84</td>\n<td>22f3001834@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>85</td>\n<td>22f3001930@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>86</td>\n<td>22f3001961@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>87</td>\n<td>22f3001967@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>88</td>\n<td>22f3002011@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>89</td>\n<td>22f3002175@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>90</td>\n<td>22f3002184@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>91</td>\n<td"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_24", "text": "ac.in</td>\n</tr>\n<tr>\n<td>90</td>\n<td>22f3002184@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>91</td>\n<td>22f3002236@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>92</td>\n<td>22f3002265@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>93</td>\n<td>22f3002291@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>94</td>\n<td>22f3002307@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>95</td>\n<td>22f3002394@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>96</td>\n<td>22f3002447@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>97</td>\n<td>22f3002498@ds.study.i"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_25", "text": "<td>96</td>\n<td>22f3002447@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>97</td>\n<td>22f3002498@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>98</td>\n<td>22f3002565@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>99</td>\n<td>22f3002634@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>100</td>\n<td>22f3002712@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>101</td>\n<td>22f3002813@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>102</td>\n<td>22f3002844@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>103</td>\n<td>22f3002948@ds.study.iitm.ac.in</td>\n</t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_26", "text": "3002844@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>103</td>\n<td>22f3002948@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>104</td>\n<td>22f3003003@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>105</td>\n<td>22f3003237@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>106</td>\n<td>23ds1000032@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>107</td>\n<td>23ds2000055@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>108</td>\n<td>23ds2000069@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>109</td>\n<td>23ds3000146@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_27", "text": "udy.iitm.ac.in</td>\n</tr>\n<tr>\n<td>109</td>\n<td>23ds3000146@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>110</td>\n<td>23ds3000149@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>111</td>\n<td>23ds3000224@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>112</td>\n<td>23f1000232@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>113</td>\n<td>23f1000257@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>114</td>\n<td>23f1000292@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>115</td>\n<td>23f1000587@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>116</td>\n<td>2"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_28", "text": "n</td>\n</tr>\n<tr>\n<td>115</td>\n<td>23f1000587@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>116</td>\n<td>23f1000776@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>117</td>\n<td>23f1000813@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>118</td>\n<td>23f1000844@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>119</td>\n<td>23f1001472@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>120</td>\n<td>23f1001651@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>121</td>\n<td>23f1001684@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>122</td>\n<td>23f1001788@ds.stu"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_29", "text": ">\n<td>121</td>\n<td>23f1001684@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>122</td>\n<td>23f1001788@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>123</td>\n<td>23f1001861@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>124</td>\n<td>23f1002075@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>125</td>\n<td>23f1002114@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>126</td>\n<td>23f1002279@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>127</td>\n<td>23f1002345@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>128</td>\n<td>23f1002362@ds.study.iitm.ac.in</t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_30", "text": "td>23f1002345@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>128</td>\n<td>23f1002362@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>129</td>\n<td>23f1002535@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>130</td>\n<td>23f1002563@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>131</td>\n<td>23f1002586@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>132</td>\n<td>23f1002630@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>133</td>\n<td>23f1002929@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>134</td>\n<td>23f1003000@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_31", "text": ".study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>134</td>\n<td>23f1003000@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>135</td>\n<td>23f1003115@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>136</td>\n<td>23f2000119@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>137</td>\n<td>23f2000273@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>138</td>\n<td>23f2000762@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>139</td>\n<td>23f2000794@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>140</td>\n<td>23f2000822@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>141</td>\n<td>2"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_32", "text": "n</td>\n</tr>\n<tr>\n<td>140</td>\n<td>23f2000822@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>141</td>\n<td>23f2000926@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>142</td>\n<td>23f2000942@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>143</td>\n<td>23f2001274@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>144</td>\n<td>23f2001347@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>145</td>\n<td>23f2001494@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>146</td>\n<td>23f2001529@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>147</td>\n<td>23f2001539@ds.stu"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_33", "text": ">\n<td>146</td>\n<td>23f2001529@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>147</td>\n<td>23f2001539@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>148</td>\n<td>23f2001661@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>149</td>\n<td>23f2001960@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>150</td>\n<td>23f2001992@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>151</td>\n<td>23f2002034@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>152</td>\n<td>23f2002121@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>153</td>\n<td>23f2002865@ds.study.iitm.ac.in</t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_34", "text": "td>23f2002121@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>153</td>\n<td>23f2002865@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>154</td>\n<td>23f2002939@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>155</td>\n<td>23f2003529@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>156</td>\n<td>23f2003751@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>157</td>\n<td>23f2003893@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>158</td>\n<td>23f2004115@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>159</td>\n<td>23f2004244@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_35", "text": ".study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>159</td>\n<td>23f2004244@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>160</td>\n<td>23f2004366@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>161</td>\n<td>23f2004443@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>162</td>\n<td>23f2004473@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>163</td>\n<td>23f2004510@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>164</td>\n<td>23f2004637@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>165</td>\n<td>23f2004770@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>166</td>\n<td>2"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_36", "text": "n</td>\n</tr>\n<tr>\n<td>165</td>\n<td>23f2004770@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>166</td>\n<td>23f2004793@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>167</td>\n<td>23f2004936@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>168</td>\n<td>23f2004979@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>169</td>\n<td>23f2005010@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>170</td>\n<td>23f2005193@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>171</td>\n<td>23f2005325@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>172</td>\n<td>23f2005398@ds.stu"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_37", "text": ">\n<td>171</td>\n<td>23f2005325@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>172</td>\n<td>23f2005398@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>173</td>\n<td>23f2005474@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>174</td>\n<td>23f2005525@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>175</td>\n<td>23f2005665@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>176</td>\n<td>23f2005701@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>177</td>\n<td>23f2005706@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>178</td>\n<td>23f2005738@ds.study.iitm.ac.in</t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_38", "text": "td>23f2005706@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>178</td>\n<td>23f2005738@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>179</td>\n<td>23f3000975@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>180</td>\n<td>23f3001271@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>181</td>\n<td>23f3001462@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>182</td>\n<td>23f3001572@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>183</td>\n<td>23f3001745@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>184</td>\n<td>23f3001752@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<t"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_39", "text": ".study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>184</td>\n<td>23f3001752@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>185</td>\n<td>23f3001764@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>186</td>\n<td>23f3001848@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>187</td>\n<td>23f3002196@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>188</td>\n<td>23f3002427@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>189</td>\n<td>23f3002537@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>190</td>\n<td>23f3002643@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>191</td>\n<td>2"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_40", "text": "n</td>\n</tr>\n<tr>\n<td>190</td>\n<td>23f3002643@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>191</td>\n<td>23f3003016@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>192</td>\n<td>23f3003027@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>193</td>\n<td>23f3003871@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>194</td>\n<td>23f3004013@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>195</td>\n<td>23f3004024@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>196</td>\n<td>23f3004066@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>197</td>\n<td>23f3004134@ds.stu"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_41", "text": ">\n<td>196</td>\n<td>23f3004066@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>197</td>\n<td>23f3004134@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>198</td>\n<td>23f3004230@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>199</td>\n<td>23f3004238@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>200</td>\n<td>23f3004264@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>201</td>\n<td>23f3004394@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>202</td>\n<td>23f3004444@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>203</td>\n<td>24ds1000079@ds.study.iitm.ac.in</"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_42", "text": "td>23f3004444@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>203</td>\n<td>24ds1000079@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>204</td>\n<td>24ds2000062@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>205</td>\n<td>24ds2000101@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>206</td>\n<td>24ds2000112@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>207</td>\n<td>24ds3000028@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>208</td>\n<td>24ds3000031@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>209</td>\n<td>24ds3000074@ds.study.iitm.ac.in</td>\n</tr>\n"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_43", "text": "031@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>209</td>\n<td>24ds3000074@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>210</td>\n<td>24f1000010@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>211</td>\n<td>24f1000400@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>212</td>\n<td>24f1000784@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>213</td>\n<td>24f1000925@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>214</td>\n<td>24f1001396@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>215</td>\n<td>24f1001439@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>216</td"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_44", "text": "tm.ac.in</td>\n</tr>\n<tr>\n<td>215</td>\n<td>24f1001439@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>216</td>\n<td>24f1001520@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>217</td>\n<td>24f1002390@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>218</td>\n<td>24f1002474@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>219</td>\n<td>24f2000994@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>220</td>\n<td>24f2002746@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>221</td>\n<td>24f2003375@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>222</td>\n<td>24f2004863"}
{"source": "topics_md/168011.md", "chunk_id": "168011.md_part_45", "text": "tr>\n<tr>\n<td>221</td>\n<td>24f2003375@ds.study.iitm.ac.in</td>\n</tr>\n<tr>\n<td>222</td>\n<td>24f2004863@ds.study.iitm.ac.in</td>\n</tr>\n</tbody>\n</table>\n</div><p>Kind regards,<br>\nTDS Team</p>"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_1", "text": "# Create a Question solving groups for ROE\n\n---\n**23f1002382** *(created: 2025-02-26T15:49:28.464Z)*\n\n<p>Whoever wants can participate and then we go into breakout rooms and each group solves a particular question and then we all share the code so we can complete the ROE faster and more effienctly?<br>\n<span class=\"mention\">@all</span></p>\n\n---\n**ItsMeAlex** *(created: 2025-02-26T15:55:03.430Z)*\n\n<p>Are we allowed to do that?</p>\n\n---\n**23f1002382** *(created: 2025-02-26T15:55:53.574Z)*\n\n<p>Yeah"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_2", "text": "<p>Are we allowed to do that?</p>\n\n---\n**23f1002382** *(created: 2025-02-26T15:55:53.574Z)*\n\n<p>Yeah they said you can take help anyway possible even  to ask a cat also or a pet, im not sure</p>\n\n---\n**ItsMeAlex** *(created: 2025-02-26T15:56:39.829Z)*\n\n<p>Alright, works. I am down to collaborate.</p>\n\n---\n**trebhuvansb** *(created: 2025-02-26T15:57:23.258Z)*\n\n<p>Asking help is different from sharing answers in a public forum. I don\u2019t think they will permit this.</p>\n\n---\n**23f1002382** *(created"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_3", "text": "ng answers in a public forum. I don\u2019t think they will permit this.</p>\n\n---\n**23f1002382** *(created: 2025-02-26T15:58:01.998Z)*\n\n<p>Sharing answers is asking for help</p>\n\n---\n**ItsMeAlex** *(created: 2025-02-26T15:58:17.610Z)*\n\n<p>If the ROE is like how it was for MOCK ROE1 then this probably wont work right?<br>\nOnly for today\u2019s ROE(mock 2) we can split  the tasks efficiently and get it done.<br>\nThoughts?</p>\n\n---\n**ItsMeAlex** *(created: 2025-02-26T15:59:11.906Z)*\n\n<aside class=\"quote group"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_4", "text": "r>\nThoughts?</p>\n\n---\n**ItsMeAlex** *(created: 2025-02-26T15:59:11.906Z)*\n\n<aside class=\"quote group-ds-students\" data-username=\"trebhuvansb\" data-post=\"5\" data-topic=\"168567\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n trebhuvansb:</div>\n<blockquote>\n<p>Asking help is different from sharing answers in a public forum. I don\u2019t think they will permit this.</p>\n</blockquote>\n</aside>\n<p>this is valid. should we just ask them? Could u message a TA?</p>\n\n---\n**23f1002382"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_5", "text": "ote>\n</aside>\n<p>this is valid. should we just ask them? Could u message a TA?</p>\n\n---\n**23f1002382** *(created: 2025-02-26T15:59:14.516Z)*\n\n<p>Yeah thats the idea\u2026</p>\n\n---\n**23f1002382** *(created: 2025-02-26T15:59:28.646Z)*\n\n<aside class=\"quote quote-modified\" data-post=\"2\" data-topic=\"99838\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    \n    <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/whats-the-actual-purpose-of-impossible-roe-exam/99838/2\">What's the actual pur"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_6", "text": "nedegree.iitm.ac.in/t/whats-the-actual-purpose-of-impossible-roe-exam/99838/2\">What's the actual purpose of impossible ROE exam?</a> <a class=\"badge-category__wrapper \" href=\"/c/courses/tds-kb/34\"><span data-category-id=\"34\" style=\"--category-badge-color: #0088CC; --category-badge-text-color: #FFFFFF; --parent-category-badge-color: #3AB54A;\" data-parent-category-id=\"9\" data-drop-close=\"true\" class=\"badge-category --has-parent\" title=\"This category is created to address subject-specific queries r"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_7", "text": "=\"badge-category --has-parent\" title=\"This category is created to address subject-specific queries related to Tools in Data Science\"><span class=\"badge-category__name\">Tools in Data Science</span></span></a>\n  </div>\n  <blockquote>\n    <a class=\"mention\" href=\"/u/ankit.jain\">@ankit.jain</a> \u2013 I\u2019m the culprit behind this RoE structure. Thanks for the opportunity to share my thought process. \nWhat does this RoE evaluate? Implicit learning. \n\nImplicit learning is \u201cHow much can they answer if woken "}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_8", "text": "oes this RoE evaluate? Implicit learning. \n\nImplicit learning is \u201cHow much can they answer if woken up from sleep?\u201d\nExplicit learning is \u201cHow much can they answer given time and Internet?\u201d\n\nSome may know 10% implicitly. Some know 50%. They\u2019ll answer those in a few seconds. \nSome, they can FIND out. with Google, StackOverflow, ChatGPT. That\u2019s explicit learning. But it takes time\u2026\n  </blockquote>\n</aside>\n\n\n---\n**trebhuvansb** *(created: 2025-02-26T16:01:28.501Z)*\n\n<p>Their whole concept of implic"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_9", "text": "aside>\n\n\n---\n**trebhuvansb** *(created: 2025-02-26T16:01:28.501Z)*\n\n<p>Their whole concept of implicit learning disappears when people start sharing answers in a public forum.</p>\n\n---\n**23f1002382** *(created: 2025-02-26T16:03:20.750Z)*\n\n<aside class=\"quote no-group\" data-username=\"What's the actual purpose of impossible ROE exam?\" data-post=\"2\" data-topic=\"99838\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<a href=\"/t/99838/2\">On another topic</a></div>\n<blockquote>\n<p>et?</p>\n</bl"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_10", "text": "\"quote-controls\"></div>\n<a href=\"/t/99838/2\">On another topic</a></div>\n<blockquote>\n<p>et?</p>\n</blockquote>\n</aside>\n<p>read the post, its about explicit learning xD<br>\nEDIT its implicit my bad !</p>\n\n---\n**trebhuvansb** *(created: 2025-02-26T16:05:01.591Z)*\n\n<p>off topic, how do you dm people on discourse?</p>\n\n---\n**23f1002279** *(created: 2025-02-26T16:05:14.381Z)*\n\n<p>So, are we using this thread, or should we make a Google space or something?</p>\n\n---\n**23f1002382** *(created: 2025-02-26"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_11", "text": "thread, or should we make a Google space or something?</p>\n\n---\n**23f1002382** *(created: 2025-02-26T16:06:06.736Z)*\n\n<p>I created a discord</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://discord.com/invite/vFTqFMw6\">\n  <header class=\"source\">\n      \n\n      <a href=\"https://discord.com/invite/vFTqFMw6\" target=\"_blank\" rel=\"noopener nofollow ugc\">Discord</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://discord.com/invite/vFTqFMw6\" target=\"_blank\" r"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_12", "text": "ticle class=\"onebox-body\">\n    \n\n<h3><a href=\"https://discord.com/invite/vFTqFMw6\" target=\"_blank\" rel=\"noopener nofollow ugc\">Join the ACING ROE 1 Discord Server!</a></h3>\n\n  <p>Check out the ACING ROE 1 community on Discord \u2013 hang out with 1 other members and enjoy free voice and text chat.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n<p><span class=\"mention\">@all</span></p>"}
{"source": "topics_md/168567.md", "chunk_id": "168567.md_part_13", "text": "</aside>\n<p><span class=\"mention\">@all</span></p>"}
{"source": "topics_md/166593.md", "chunk_id": "166593.md_part_1", "text": "# For project 1\n\n---\n**Sakshi6479** *(created: 2025-02-08T17:32:11.546Z)*\n\n<p>Sir,<br>\nI have facing lots of difficulties in assignments and it was taking alot of time to solve a single assignment, so please extend the deadline for project 1 as it contains more weightage and it required more time to solve it.<br>\nPlease kindly consider my request, as I am from non-technical background it is taking most of the time of a week because of which other Courses are suffering.<br>\n<a class=\"mention\" hre"}
{"source": "topics_md/166593.md", "chunk_id": "166593.md_part_2", "text": " most of the time of a week because of which other Courses are suffering.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> , <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> , <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a></p>\n\n---\n**21f3000745** *(created: 2025-02-09T05:54:18.931Z)*\n\n<p>yes sir , most of the time goes in solving assignment as it takes a lot of time. o please extend the date of project1.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-10T19:48:36.686Z)*\n\n<p>Sir , k"}
{"source": "topics_md/166593.md", "chunk_id": "166593.md_part_3", "text": "tend the date of project1.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-10T19:48:36.686Z)*\n\n<p>Sir , kindly extend the deadline for project 1 .<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> , <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> , <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a></p>\n\n---\n**jkmadathil** *(created: 2025-02-17T19:01:57.809Z)*"}
{"source": "topics_md/168506.md", "chunk_id": "168506.md_part_1", "text": "# Revised dates [TDS Jan 2025]\n\n---\n**s.anand** *(created: 2025-02-26T05:11:28.936Z)*\n\n<p>A few updates on dates. Hope this eases pressure a little.</p>\n<ul>\n<li>Graded Assignment 6 moved from 14 Feb to 28 Feb 2025. Submission date moved from 9 Mar to 16 Mar 2025.</li>\n<li>Project 2 moved from 21 Feb to 3 Mar 2025. Submission date moved from 17 Mar to 31 Mar 2025.</li>\n<li>Graded Assignment 7 moved from 28 Feb to 7 Mar 2025. Submission date moved from 16 Mar to 26 Mar 2025.</li>\n<li>Project 1 re"}
{"source": "topics_md/168506.md", "chunk_id": "168506.md_part_2", "text": "d from 28 Feb to 7 Mar 2025. Submission date moved from 16 Mar to 26 Mar 2025.</li>\n<li>Project 1 results will be released by 16 Mar 2025.</li>\n</ul>\n<p>The <a href=\"https://tds.s-anand.net/\">TDS course page</a> now reflects these dates.</p>\n\n---\n**carlton** *(created: 2025-02-26T05:23:17.350Z)*\n\n\n\n---\n**Yogesh1** *(created: 2025-03-02T09:03:36.547Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> I don\u2019t see the link to GA6 on the course "}
{"source": "topics_md/168506.md", "chunk_id": "168506.md_part_3", "text": "ton</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> I don\u2019t see the link to GA6 on the course page.</p>\n\n---\n**carlton** *(created: 2025-03-02T10:18:30.587Z)*\n\n<p>Its in seek portal. Please login to your Dashboard and check.</p>\n\n---\n**Jivraj** *(created: 2025-03-11T22:37:17.459Z)*\n\n<p>A post was merged into an existing topic: <a href=\"/t/graded-assignment-6/169283/11\">Graded assignment 6</a></p>"}
{"source": "topics_md/168506.md", "chunk_id": "168506.md_part_4", "text": "></p>"}
{"source": "topics_md/166891.md", "chunk_id": "166891.md_part_1", "text": "# Regarding Github Mail For Project\n\n---\n**23f1001236** *(created: 2025-02-13T02:19:53.249Z)*\n\n<p>Is it important to use an IITM mail ID in GitHub for the project?<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**carlton** *(created: 2025-02-14T05:12:27.093Z)*\n\n<p>Currently we do not have any explicit policy regarding requiring IITM email as the github profile name or the github repo owner.</p>\n<p>We DO however require you to use your IITM email when submitting the project submis"}
{"source": "topics_md/166891.md", "chunk_id": "166891.md_part_2", "text": "po owner.</p>\n<p>We DO however require you to use your IITM email when submitting the project submission form.</p>\n<p>We are clarifying with operations at the moment if this arrangement satisfies their requirements. If it changes we will make a general announcement via email, portal and discourse.</p>\n<p>(we do not expect the current requirements of github to change)</p>\n<p>Kind regards</p>"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_1", "text": "# GA5 - Data Preparation - Discussion Thread [TDS Jan 2025]\n\n---\n**s.anand** *(created: 2025-02-08T14:39:41.571Z)*\n\n<p>Please post any questions related to <a href=\"https://exam.sanand.workers.dev/tds-2025-01-ga5\">Graded Assignment 5 - Data Preparation</a>.</p>\n<p>Please use markdown code formatting (fenced code blocks) when sharing code (rather than screenshots). It\u2019s easier for us to copy-paste and test.</p>\n<p>Deadline:  <span class=\"discourse-local-date\" data-date=\"2025-02-16\" data-email-pre"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_2", "text": "and test.</p>\n<p>Deadline:  <span class=\"discourse-local-date\" data-date=\"2025-02-16\" data-email-preview=\"2025-02-15T18:30:00Z UTC\" data-timezone=\"Asia/Calcutta\">2025-02-15T18:30:00Z</span></p>\n<p><a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**s.anand** *(created: 2025-02-08T14:40:01.609Z)*\n\n\n\n---\n**23f1002630** *(created: 2025-02-10T06:17:22.155Z)*\n\n<p><div class=\"lightbox"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_3", "text": "14:40:01.609Z)*\n\n\n\n---\n**23f1002630** *(created: 2025-02-10T06:17:22.155Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/2/7/2760b6a798c8d242c17b057acd6cf686ab1bc2fe.png\" data-download-href=\"/uploads/short-url/5ClPoSUu6WI9tx3XEnXSPzDCAQS.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span c"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_4", "text": "=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1448\u00d7623 16.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\ni can\u2019t load my questions</p>\n\n---\n**s.anand** *(created: 2025-02-10T07:29:12.849Z)*\n\n<p><a class=\"mention\" href=\"/u/23f1002630\">@23f1002630</a> - thanks for raising this. It\u2019s fixed a"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_5", "text": "\n\n<p><a class=\"mention\" href=\"/u/23f1002630\">@23f1002630</a> - thanks for raising this. It\u2019s fixed and won\u2019t re-occur for anyone.</p>\n<p><strong>What happened?</strong> I picked random duration from the video of 10-40 seconds, but forgot to ensure that the end time should not exceed the video length. That\u2019s what I fixed.</p>\n\n---\n**23f1002630** *(created: 2025-02-10T11:25:56.044Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_6", "text": "\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/d/0/d00d9bc84126cc644cd4a75cea1db8ab4d4bf0a6.png\" data-download-href=\"/uploads/short-url/tGwt8BYvMyrkx9YbTQiQdIhqciq.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1158\u00d7466 11.8 KB</span><svg class=\"f"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_7", "text": "g><span class=\"filename\">image</span><span class=\"informations\">1158\u00d7466 11.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nIt was solved but again I\u2019m facing the same issue</p>\n\n---\n**23f1002630** *(created: 2025-02-10T18:54:19.804Z)*\n\n<p><a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a>  I\u2019m still facing the issue.</p>\n\n---\n**nilaychugh** *(create"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_8", "text": "\"mention\" href=\"/u/jivraj\">@Jivraj</a>  I\u2019m still facing the issue.</p>\n\n---\n**nilaychugh** *(created: 2025-02-11T16:21:34.546Z)*\n\n<p>i guess there\u2019s some issue in 5th question as i have correctly filtered the data in OpenRefine 2-3 times but still getting incorrect in the portal.</p>\n\n---\n**carlton** *(created: 2025-02-12T12:52:01.867Z)*\n\n<p>OpenRefine question has historically been a tricky question to get right. Check out some past TA sessions in previous term for solving it, or previous disc"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_9", "text": "tion to get right. Check out some past TA sessions in previous term for solving it, or previous discourse posts.</p>\n<p>Kind regards</p>\n\n---\n**22f3001315** *(created: 2025-02-13T08:51:51.360Z)*\n\n<p>DOUBT IN -Q 9 Sir <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n<pre><code class=\"lang-auto\">Miranda followed the elusive figure.  In the dim corridor,......................\n</code></pre>\n<p>I listened it ,every words and spellings are matching still this error:</p>\n<p><strong>Error: Words ar"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_10", "text": "listened it ,every words and spellings are matching still this error:</p>\n<p><strong>Error: Words are too different</strong></p>\n\n---\n**Nelson** *(created: 2025-02-13T13:56:56.738Z)*\n\n<h2><a name=\"p-594585-cleaning-data-with-openrefine-1\" class=\"anchor\" href=\"#p-594585-cleaning-data-with-openrefine-1\"></a>Cleaning Data with OpenRefine</h2>\n<p>Kindly check the question and the answer. I found below cities for S\u00e3o Paulo.</p>\n<p>However, it says my answer is incorrect.</p>\n<blockquote>\n<p>How many "}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_11", "text": " cities for S\u00e3o Paulo.</p>\n<p>However, it says my answer is incorrect.</p>\n<blockquote>\n<p>How many units of Bacon were sold in S\u00e3o Paulo on transactions with at least 151 units?</p>\n</blockquote>\n<pre><code class=\"lang-auto\">city\nSao Paolo\nSao Paoulo\nSao Paulo\nSao Pualo\nSau Paulo\nS\u00e3o Paulo\n\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/0/2/02dbdb81b1a8befd5172bf0cb16e25c59b8038b2.png\" data-download-hre"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_12", "text": "flex013/uploads/iitm/original/3X/0/2/02dbdb81b1a8befd5172bf0cb16e25c59b8038b2.png\" data-download-href=\"/uploads/short-url/phZPOtY4a8VJ0RNQDMmtsh2Jdo.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">318\u00d7183 5.46 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discour"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_13", "text": "/span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**23f1003186** *(created: 2025-02-14T16:15:42.519Z)*\n\n<p>Wrong / Confusing question Prof</p>\n<p>The top line mentions \u201cSaturdays\u201d whereas the bottom line mentions \u201cSundays\u201d</p>\n<p>Please clarify \u201cSUNDAY\u201d or \u201cSATURDAY\u201d?</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/9/"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_14", "text": "per\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/9/7/979374c3f5507f373bae753017ab4235a420e1b2.jpeg\" data-download-href=\"/uploads/short-url/lCU1jU8E89JBWoznNnS71PMwjNE.jpeg?dl=1\" title=\"grab-IIT-Madras--Microsoft Edge_at_21.44.39_on__14-02-2025__003253\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">grab-IIT-Madras--Microsoft"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_15", "text": "a-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">grab-IIT-Madras--Microsoft Edge_at_21.44.39_on__14-02-2025__003253</span><span class=\"informations\">1920\u00d71816 271 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**23f1003186** *(created: 2025-02-14T16:19:36.462Z)*\n\n<p>Update: I tried for both (thank god for filters in Excel) and Sunday is what the question is asking for"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_16", "text": "ate: I tried for both (thank god for filters in Excel) and Sunday is what the question is asking for. The Instruction above for \u201cSaturday\u201d is incorrect- maybe the logic generating different questions for different students can be tweaked-</p>\n<p>Thank you</p>\n\n---\n**23f1003186** *(created: 2025-02-14T17:47:55.912Z)*\n\n<p>I\u2019ve attempted this question several times and I\u2019m fairly certain that the answer to this question is incorrect. I\u2019d be grateful if the answer to this question was re-checked. I "}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_17", "text": "wer to this question is incorrect. I\u2019d be grateful if the answer to this question was re-checked. I can share the answer I\u2019m certain about here, however I do not think it would be prudent to do so given this is a public forum.</p>\n<p>Please consider my request and double check-</p>\n<p><a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a>, <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n<p>Thank you</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/f"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_18", "text": "u</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/7/5/754b8cb67790be42f3cb034ef920509a08820ad8.jpeg\" data-download-href=\"/uploads/short-url/gJDJa7RNLNn4jWHVozm5XJJt7WE.jpeg?dl=1\" title=\"grab-IIT-Madras--Microsoft Edge_at_23.15.25_on__14-02-2025__003255\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"fi"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_19", "text": "con d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">grab-IIT-Madras--Microsoft Edge_at_23.15.25_on__14-02-2025__003255</span><span class=\"informations\">1920\u00d71317 210 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**23f2003717** *(created: 2025-02-15T16:24:23.831Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europ"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_20", "text": "2025-02-15T16:24:23.831Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/b/f/bf1a8f36cc99be3a4d7b2d5552a90c431b227a85.png\" data-download-href=\"/uploads/short-url/rgA6d3McedAPIPkot41aLfre1GR.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informat"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_21", "text": "n=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">817\u00d7458 29.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nthis is my data before date filter - for question 1 please conform am i doing correct. and tell how to do the date filtering as some are in mm-dd-yyyy or yyyy-mm-dd format.</p>\n<p>as this data is less i did it manually</p>\n<div class="}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_22", "text": "re in mm-dd-yyyy or yyyy-mm-dd format.</p>\n<p>as this data is less i did it manually</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>SUM OF COST</th>\n<th>14891.00</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SUM OF SALES</td>\n<td>31004.00</td>\n</tr>\n<tr>\n<td>TOTAL</td>\n<td>45895.00</td>\n</tr>\n<tr>\n<td>TOTAL MARGIN</td>\n<td>0.351083996</td>\n</tr>\n</tbody>\n</table>\n</div><p>but this is not correct please guide</p>\n\n---\n**s.anand** *(created: 2025-02-15T16:45:07.123Z)*\n\n<p><a class=\"mention\" href=\"/u/2"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_23", "text": "e guide</p>\n\n---\n**s.anand** *(created: 2025-02-15T16:45:07.123Z)*\n\n<p><a class=\"mention\" href=\"/u/23f1003186\">@23f1003186</a> \u2013 thanks for flagging this. You\u2019re right. I\u2019ve fixed this error. </p>\n\n---\n**23f1003186** *(created: 2025-02-15T17:05:24.887Z)*\n\n<p>Any signal for this question?</p>\n<p><a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**s.anand** *(created: 2025-02-15T17:13:23.480Z)*\n\n<p><a class=\"mention\" href=\"/u/23f1003186\">@"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_24", "text": "\n---\n**s.anand** *(created: 2025-02-15T17:13:23.480Z)*\n\n<p><a class=\"mention\" href=\"/u/23f1003186\">@23f1003186</a> thanks again for flagging this. This is fixed, too. </p>\n\n---\n**23f2003717** *(created: 2025-02-15T17:19:27.591Z)*\n\n<p>tried google sheets - it autoformatted my date data, also i realized later i was applying the formula the wrong way.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/4/7/47ef4373ecd39e5"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_25", "text": "ghtbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/4/7/47ef4373ecd39e516752ad3ac49bbdbbb62ac79e.png\" data-download-href=\"/uploads/short-url/agmwf6QvAh9KaDXo2bSehEAfeqi.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">987\u00d7176 14.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_26", "text": "/span><span class=\"informations\">987\u00d7176 14.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nDate formatted and filtered successfully</p>\n\n---\n**23f2004752** *(created: 2025-02-15T23:22:12.712Z)*\n\n<p>Can you provide the link for that session.</p>\n\n---\n**23f2003717** *(created: 2025-02-16T04:42:44.483Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/f"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_27", "text": "3Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/7/5/7511167a7f94b1b19c98af4d835318552532ce75.png\" data-download-href=\"/uploads/short-url/gHCtpYw1cDhjRv3XqZZUpNul3p3.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">441\u00d7323 4.22 KB<"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_28", "text": "ar-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">441\u00d7323 4.22 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>How many units of Computer were sold in London on transactions with at least 39 units?<br>\nplease check my answer is not correct - (6193)</p>\n<p>please guide</p>"}
{"source": "topics_md/166576.md", "chunk_id": "166576.md_part_29", "text": "uide</p>"}
{"source": "topics_md/168515.md", "chunk_id": "168515.md_part_1", "text": "# Opening previous ga just for practise\n\n---\n**22f3001011** *(created: 2025-02-26T06:09:42.287Z)*\n\n<p>Good morning sir,</p>\n<p>I want to request that you open the previous GAs to solve the questions and check for the answers. I don\u2019t wish for them to be graded, but I would like to work with the portal and validate my answers for the questions stated in the GA itself. This would be of great help and could help prepare the upcoming ROE.<br>\nThank you for considering my request.</p>\n<p>Regards.</p>"}
{"source": "topics_md/168515.md", "chunk_id": "168515.md_part_2", "text": "d could help prepare the upcoming ROE.<br>\nThank you for considering my request.</p>\n<p>Regards.</p>\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jeevesh\">@Jeevesh</a></p>\n\n---\n**Jivraj** *(created: 2025-02-26T14:09:34.899Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/22f3001011\">@22f3001011</a></p>\n<p>You can access questions by just enabling input boxes, and check answers button.</p>\n<p>Kind regrads</p>\n\n---\n**22f3001011** *(created: 2025-02-26T17:11:47.647Z)*\n\n<p>T"}
{"source": "topics_md/168515.md", "chunk_id": "168515.md_part_3", "text": "wers button.</p>\n<p>Kind regrads</p>\n\n---\n**22f3001011** *(created: 2025-02-26T17:11:47.647Z)*\n\n<p>Thank you sir. Will try it out.</p>"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_1", "text": "# GA2 - Deployment Tools - Discussion Thread [TDS Jan 2025]\n\n---\n**s.anand** *(created: 2025-01-03T07:12:14.469Z)*\n\n<p>Please post any questions related to <a href=\"https://exam.sanand.workers.dev/tds-2025-01-ga2\">Graded Assignment 2 - Deployment Tools</a>.</p>\n<hr>\n<h2><a name=\"p-575521-important-instruction-1\" class=\"anchor\" href=\"#p-575521-important-instruction-1\"></a>Important Instruction</h2>\n<p>Please use markdown code formatting (fenced code blocks) when sharing code in Discourse posts. T"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_2", "text": "\n<p>Please use markdown code formatting (fenced code blocks) when sharing code in Discourse posts. This makes the code much easier to read and differentiate from non-code text. It also makes it easier for people to copy code snippets and run it themselves. Visit this link for more details: <a href=\"https://www.markdownguide.org/extended-syntax/#fenced-code-blocks\" class=\"inline-onebox\">Extended Syntax | Markdown Guide</a>.</p>\n<p>A friendly suggestion: kindly go through <a class=\"hashtag-cooked\""}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_3", "text": "ntax | Markdown Guide</a>.</p>\n<p>A friendly suggestion: kindly go through <a class=\"hashtag-cooked\" href=\"/c/docs-discourse/45\" data-type=\"category\" data-slug=\"docs-discourse\" data-id=\"45\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>Discourse Docs</span></a>! </p>\n<hr>\n<p>Deadline: <span class=\"discourse-local-date\" data-date=\"2025-02-02\" data-email-preview=\"2025-02-02T18:29:00Z UTC\" data-fo"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_4", "text": "=\"discourse-local-date\" data-date=\"2025-02-02\" data-email-preview=\"2025-02-02T18:29:00Z UTC\" data-format=\"LLLL\" data-time=\"23:59:00\" data-timezone=\"Asia/Calcutta\">Sunday, February 2, 2025 6:29 PM</span></p>\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**carlton** *(created: 2025-01-08T03:10:51.093Z)*\n\n\n\n---\n**22f3001315** *(created: 2025-01-12T17:08:02.850Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europ"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_5", "text": "2025-01-12T17:08:02.850Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/f/2/f2485af8a009f815219a3df4bbdf15db1322608e.png\" data-download-href=\"/uploads/short-url/yzkzffKPrDxvLKTc2cwCglLYUy2.png?dl=1\" title=\"Screenshot 2025-01-12 223630\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_6", "text": "ge svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-01-12 223630</span><span class=\"informations\">1727\u00d7195 27.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\ni have included the email address still its giving error</p>\n\n---\n**22f3001315** *(created: 2025-01-12T17:12:33.282Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_7", "text": "ted: 2025-01-12T17:12:33.282Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/e/f/ef0c6289076549898612976667c10de3886cc953.png\" data-download-href=\"/uploads/short-url/y6IEiua4zSsQpJPTUtUk77zEKQP.png?dl=1\" title=\"Screenshot 2025-01-12 223956\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Scree"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_8", "text": "r-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-01-12 223956</span><span class=\"informations\">1674\u00d7158 12.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nthat website is working fine . just  write the parameters after /api</p>\n\n---\n**Jivraj** *(created: 2025-01-12T21:38:16.588Z)*\n\n<p>Hi Guddu,</p>\n<p>Can you share your GitHub repo. Fo"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_9", "text": "vraj** *(created: 2025-01-12T21:38:16.588Z)*\n\n<p>Hi Guddu,</p>\n<p>Can you share your GitHub repo. For GitHub pages question.</p>\n\n---\n**Jivraj** *(created: 2025-01-12T21:39:45.792Z)*\n\n<p>Check your browser console most probably CORS is causing problem.</p>\n<p>Try adding CORS to your code it might work.</p>\n<p>Kind regards<br>\nJivraj</p>\n\n---\n**22f3001315** *(created: 2025-01-13T04:10:58.317Z)*\n\n<aside class=\"onebox githubrepo\" data-onebox-src=\"https://github.com/gkmfrombs/dolfacts\">\n  <header cl"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_10", "text": "side class=\"onebox githubrepo\" data-onebox-src=\"https://github.com/gkmfrombs/dolfacts\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/gkmfrombs/dolfacts\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n  \n\n  <h3><a href=\"https://github.com/gkmfrombs/dolfacts\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - gkmfrombs/dolfacts</a></h3>\n\n    <p><span class=\"githu"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_11", "text": "\"_blank\" rel=\"noopener nofollow ugc\">GitHub - gkmfrombs/dolfacts</a></h3>\n\n    <p><span class=\"github-repo-description\">Contribute to gkmfrombs/dolfacts development by creating an account on GitHub.</span></p>\n</div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>I have added email in body two times in different ways.</p>\n\n---\n**23F300327** *(created: 2025-01-13T20:23:32.007Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_12", "text": "F300327** *(created: 2025-01-13T20:23:32.007Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/2/4/243cab0b6d8a65099dfe8b13b242dd816a4f3205.jpeg\" data-download-href=\"/uploads/short-url/5azawQ2BB3XGDe8UVJ3QGH3G5Vz.jpeg?dl=1\" title=\"Screenshot 2025-01-14 at 1.39.39 AM\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><sp"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_13", "text": "lass=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-01-14 at 1.39.39 AM</span><span class=\"informations\">1440\u00d7900 154 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> can you please tell me what is wrong in this because I am getting \u201cError: Response undefined does not"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_14", "text": "an you please tell me what is wrong in this because I am getting \u201cError: Response undefined does not match expected\u201d to my answer</p>\n\n---\n**22f2001640** *(created: 2025-01-14T08:16:40.821Z)*\n\n<p>Facing Issue in GA 2 Question 10 LLM ngrok<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/e/2/e2d34a628bc87d88e8e28cbb9a08254c16f6ba76.png\" data-download-href=\"/uploads/short-url/wmAAY4gaAeOiTPvGoYgoFFq7j6K.png?dl=1\" title=\""}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_15", "text": "4c16f6ba76.png\" data-download-href=\"/uploads/short-url/wmAAY4gaAeOiTPvGoYgoFFq7j6K.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1920\u00d7886 45.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nI tired multiple time"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_16", "text": "a-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nI tired multiple times but issue is still there.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> Kindly help me out.</p>\n\n---\n**carlton** *(created: 2025-01-14T08:51:38.605Z)*\n\n<p>Hi Mishkat,</p>\n<p>Please use  triple backticks to encapsulate code, so that we can debug your code more easily.</p>\n<p>eg</p>\n<pre><code"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_17", "text": " backticks to encapsulate code, so that we can debug your code more easily.</p>\n<p>eg</p>\n<pre><code class=\"lang-auto\">if __name__ == \"__main__\":\n   print (\"Hello\")\n</code></pre>\n<p>Please use this discourse etiquette to share code.</p>\n<p>Thanks and kind regards</p>\n\n---\n**22f3001315** *(created: 2025-01-14T09:20:15.143Z)*\n\n<p>sir did you check yet what is the problem in this one?</p>\n\n---\n**23F300327** *(created: 2025-01-14T10:12:42.463Z)*\n\n<pre data-code-wrap=\"python\"><code class=\"lang-python"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_18", "text": "00327** *(created: 2025-01-14T10:12:42.463Z)*\n\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">from fastapi import FastAPI, Query\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom typing import List, Optional\nimport csv\n\napp = FastAPI()\n\n# Enable CORS\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # Allow all origins\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Allow all methods\n    allow_headers=[\"*\"],  # Allow all headers\n)\n\n# Load student data from t"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_19", "text": "\"],  # Allow all methods\n    allow_headers=[\"*\"],  # Allow all headers\n)\n\n# Load student data from the specified CSV file\nstudents = []\nwith open('/Users/mish/Downloads/q-fastapi.csv', mode='r') as file:\n    reader = csv.DictReader(file)\n    for row in reader:\n        students.append({\n            \"studentId\": int(row[\"studentId\"]),\n            \"class\": row[\"class\"]\n        })\n\n@app.get(\"/api\")\nasync def get_students(class_: Optional[List[str]] = Query(None)):\n    print(f\"Requested classes: {cla"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_20", "text": "ync def get_students(class_: Optional[List[str]] = Query(None)):\n    print(f\"Requested classes: {class_}\")  # Debugging line\n    if class_:\n        filtered_students = [student for student in students if student[\"class\"] in class_]\n        print(f\"Filtered students: {filtered_students}\")  # Debugging line\n        return {\"students\": filtered_students}\n    return {\"students\": students}\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"127.0.0.1\", port=8000)\n</code></pre>\n\n"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_21", "text": " == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"127.0.0.1\", port=8000)\n</code></pre>\n\n---\n**Jivraj** *(created: 2025-01-14T10:30:40.928Z)*\n\n<p>Hi Mishkat,</p>\n<p>This error is because you are filtering on <code>class_</code> instead of <code>class</code></p>\n<p>So if you send a request on <code>http://127.0.0.1/api?class_=1S</code> you will see response for that <code>1S</code> class only.</p>\n<p>kind regards</p>\n\n---\n**23F300327** *(created: 2025-01-14T10:38:20.276Z)*\n\n<p>thank yo"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_22", "text": " only.</p>\n<p>kind regards</p>\n\n---\n**23F300327** *(created: 2025-01-14T10:38:20.276Z)*\n\n<p>thank you so much after modifying the code it got accepted</p>\n\n---\n**Jivraj** *(created: 2025-01-14T11:17:13.952Z)*\n\n<p>Hi Guddu,</p>\n<p>Inside <code>index.html</code> file of your repo, don\u2019t put html code just put your email in the file nothing else.</p>\n<p>This issue is because when you deploy on github pages it encrypts any email that\u2019s on page.</p>\n<p>kind regards.</p>\n\n---\n**Nelson** *(created: 202"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_23", "text": " pages it encrypts any email that\u2019s on page.</p>\n<p>kind regards.</p>\n\n---\n**Nelson** *(created: 2025-01-14T11:23:37.066Z)*\n\n<p>I am facing an issue with Docker Desktop.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/d/7/d7bcf7a2f709561b98fa8bde031ab5d1e81a4a0d.png\" data-download-href=\"/uploads/short-url/uMvw2wgM24cbS1zmqK5Uy1pjnT7.png?dl=1\" title=\"Docker Desktop Error\" rel=\"noopener nofollow ugc\"><div class=\"meta"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_24", "text": "bS1zmqK5Uy1pjnT7.png?dl=1\" title=\"Docker Desktop Error\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Docker Desktop Error</span><span class=\"informations\">558\u00d7377 27 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>I have uninstalled and installed Docker (run as administr"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_25", "text": "xpand\"></use></svg></div></a></div></p>\n<p>I have uninstalled and installed Docker (run as administrator).</p>\n<p>wsl --version</p>\n<pre><code class=\"lang-auto\">WSL version: 2.3.26.0\nKernel version: 5.15.167.4-1\nWSLg version: 1.0.65\nMSRDC version: 1.2.5620\nDirect3D version: 1.611.1-81528511\nDXCore version: 10.0.26100.1-240331-1435.ge-release\nWindows version: 10.0.19045.5011\n</code></pre>\n<p>Tried many solutions after googling for the issue.<br>\nSo far no solution. Anyone else faced this issue an"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_26", "text": "many solutions after googling for the issue.<br>\nSo far no solution. Anyone else faced this issue and found a solution?</p>\n\n---\n**Jivraj** *(created: 2025-01-14T11:26:08.672Z)*\n\n<p>Hi Telvin,</p>\n<p>Try opening <code>localhost:8080</code> in browser if that works, if it opens in browser then issue might be with some network configurations.</p>\n<p>I solved this question in github codespace, which didn\u2019t require me to make any changes in network.</p>\n<p>kind regards</p>\n<p>kind regards</p>\n\n---\n*"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_27", "text": "didn\u2019t require me to make any changes in network.</p>\n<p>kind regards</p>\n<p>kind regards</p>\n\n---\n**s.anand** *(created: 2025-01-14T11:43:33.780Z)*\n\n<p><a class=\"mention\" href=\"/u/nelson\">@Nelson</a> I would recommend <a href=\"https://podman.io/\">Podman</a> or <a href=\"https://docs.docker.com/engine/install/ubuntu/\">Docker CE</a> rather than <a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a>.</p>\n<p>Docker Desktop is <a href=\"https://docs.docker.com/subscription/deskto"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_28", "text": "/\">Docker Desktop</a>.</p>\n<p>Docker Desktop is <a href=\"https://docs.docker.com/subscription/desktop-license/\">not free for organizations over 250 people</a> and many organizations have therefore moved away from it.</p>\n\n---\n**22f2001640** *(created: 2025-01-14T12:26:01.055Z)*\n\n<p><a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> I tired , in browser localhost:8080 is working fine but ngrok is not "}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_29", "text": "\" href=\"/u/jivraj\">@Jivraj</a> I tired , in browser localhost:8080 is working fine but ngrok is not working. Is there any other tools for tunneling that can be used.</p>\n\n---\n**s.anand** *(created: 2025-01-14T12:52:41.809Z)*\n\n<p><a class=\"mention\" href=\"/u/22f2001640\">@22f2001640</a> in that case</p>\n<ul>\n<li>a firewall or local security settings might block access to port 8080, or</li>\n<li>a network restriction is blocking access to port 8080</li>\n</ul>\n<p>Please try one of these:</p>\n<ul>\n<li>"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_30", "text": "ork restriction is blocking access to port 8080</li>\n</ul>\n<p>Please try one of these:</p>\n<ul>\n<li>Try the same on a personal laptop on a public / home network</li>\n<li>GitHub codespaces, as <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> suggested</li>\n</ul>\n<p>You <em>could</em> try an ngrok alternative like <a href=\"https://localtunnel.github.io/www/\">localtunnel</a> but I don\u2019t think that\u2019ll work.</p>"}
{"source": "topics_md/161120.md", "chunk_id": "161120.md_part_31", "text": "work.</p>"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_1", "text": "# Mock ROE 1, 2, 3, 4 [TDS Jan 2025]\n\n---\n**carlton** *(created: 2025-02-25T13:32:03.835Z)*\n\n<p>Dear Learner,</p>\n<h3><a name=\"p-599595-update-6-1\" class=\"anchor\" href=\"#p-599595-update-6-1\"></a>Update 6</h3>\n<p>Here is link to roe checklist file used in Friday(28 feb) session: <a href=\"https://docs.google.com/document/d/1WqycKoNlV_lh40mxlTUo4w9Eh4gvjcQ9/edit?usp=drivesdk&amp;ouid=110677822449295284223&amp;rtpof=true&amp;sd=true\" class=\"inline-onebox\">ROE Checklist.docx - Google Docs</a></p>\n<p>"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_2", "text": "84223&amp;rtpof=true&amp;sd=true\" class=\"inline-onebox\">ROE Checklist.docx - Google Docs</a></p>\n<p>All the best<br>\nTds team</p>\n<h3><a name=\"p-599595-update-5-2\" class=\"anchor\" href=\"#p-599595-update-5-2\"></a>Update 5</h3>\n<h4><a name=\"p-599595-h-28022025-105-pm-3\" class=\"anchor\" href=\"#p-599595-h-28022025-105-pm-3\"></a>28/02/2025 1:05 pm</h4>\n<p>Dear Learner,</p>\n<p>Please find the link to Mock ROE 4. This is the final Mock before actual ROE.</p>\n<aside class=\"onebox googledrive\" data-onebox-"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_3", "text": " ROE 4. This is the final Mock before actual ROE.</p>\n<aside class=\"onebox googledrive\" data-onebox-src=\"https://drive.google.com/file/d/1Qg_KPFup6Tu49RP5qGRVnU13j1QKiilq/edit\">\n  <header class=\"source\">\n\n      <a href=\"https://drive.google.com/file/d/1Qg_KPFup6Tu49RP5qGRVnU13j1QKiilq/edit\" target=\"_blank\" rel=\"noopener\">drive.google.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n      <a href=\"https://drive.google.com/file/d/1Qg_KPFup6Tu49RP5qGRVnU13j1QKiilq/edit\" target=\"_blank\" rel=\"noo"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_4", "text": "ef=\"https://drive.google.com/file/d/1Qg_KPFup6Tu49RP5qGRVnU13j1QKiilq/edit\" target=\"_blank\" rel=\"noopener\"><span class=\"googledocs-onebox-logo g-drive-logo\"></span></a>\n\n\n\n<h3><a href=\"https://drive.google.com/file/d/1Qg_KPFup6Tu49RP5qGRVnU13j1QKiilq/edit\" target=\"_blank\" rel=\"noopener\">mock_roe_4.pdf</a></h3>\n\n<p>Google Drive file.</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>We have a <strong>special</strong> session sche"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_5", "text": "div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>We have a <strong>special</strong> session scheduled for tonight from 8pm to 10pm. We will be sharing some important information during that session which will help you for your ROE. It is available in your google calendar.</p>\n<p>The meet link for that session is:</p>\n<p>ROE Preparation - TDS</p>\n<p>Friday, February 28 \u00b7 8:00 \u2013 10:00pm</p>\n<p>Time zone: Asia/Kolkata</p>\n<p>Video call link: <a href=\"https://meet.google.com/nnq-sxqh-ryw\">https:"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_6", "text": "ime zone: Asia/Kolkata</p>\n<p>Video call link: <a href=\"https://meet.google.com/nnq-sxqh-ryw\">https://meet.google.com/nnq-sxqh-ryw</a></p>\n<p>The session will be recorded and live streamed on YouTube.<br>\nIt will be available on the TDS YouTube Playlist later.</p>\n<h2><a name=\"p-599595-kind-regards-tds-team-4\" class=\"anchor\" href=\"#p-599595-kind-regards-tds-team-4\"></a>Kind regards,<br>\nTDS Team</h2>\n<h3><a name=\"p-599595-update-4-5\" class=\"anchor\" href=\"#p-599595-update-4-5\"></a>Update 4</h3>\n<"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_7", "text": "h2>\n<h3><a name=\"p-599595-update-4-5\" class=\"anchor\" href=\"#p-599595-update-4-5\"></a>Update 4</h3>\n<h4><a name=\"p-599595-h-27022025-718pm-6\" class=\"anchor\" href=\"#p-599595-h-27022025-718pm-6\"></a>27/02/2025 7:18pm</h4>\n<p>Dear Learner,</p>\n<p>Please find the link to Mock ROE 3 below. Note the datasets links are present inside the given document (there are more than 1):</p>\n<aside class=\"onebox googledrive\" data-onebox-src=\"https://drive.google.com/file/d/1kQKiBccRn6sUV_dvjk3ROZQKrc50oHfq/edit\">\n"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_8", "text": "gledrive\" data-onebox-src=\"https://drive.google.com/file/d/1kQKiBccRn6sUV_dvjk3ROZQKrc50oHfq/edit\">\n  <header class=\"source\">\n\n      <a href=\"https://drive.google.com/file/d/1kQKiBccRn6sUV_dvjk3ROZQKrc50oHfq/edit\" target=\"_blank\" rel=\"noopener\">drive.google.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n      <a href=\"https://drive.google.com/file/d/1kQKiBccRn6sUV_dvjk3ROZQKrc50oHfq/edit\" target=\"_blank\" rel=\"noopener\"><span class=\"googledocs-onebox-logo g-drive-logo\"></span></a>\n\n\n\n<h3><a"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_9", "text": "rget=\"_blank\" rel=\"noopener\"><span class=\"googledocs-onebox-logo g-drive-logo\"></span></a>\n\n\n\n<h3><a href=\"https://drive.google.com/file/d/1kQKiBccRn6sUV_dvjk3ROZQKrc50oHfq/edit\" target=\"_blank\" rel=\"noopener\">MOCK ROE 3.pdf</a></h3>\n\n<p>Google Drive file.</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>The estimated time for this Mock ROE 3 is 45 mins.</p>\n<h2><a name=\"p-599595-all-the-best-tds-team-7\" class=\"anchor\" href=\"#p"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_10", "text": "is Mock ROE 3 is 45 mins.</p>\n<h2><a name=\"p-599595-all-the-best-tds-team-7\" class=\"anchor\" href=\"#p-599595-all-the-best-tds-team-7\"></a>All the best,<br>\nTDS Team</h2>\n<h3><a name=\"p-599595-update-3-8\" class=\"anchor\" href=\"#p-599595-update-3-8\"></a>Update 3</h3>\n<h4><a name=\"p-599595-h-26022025-811-pm-9\" class=\"anchor\" href=\"#p-599595-h-26022025-811-pm-9\"></a>26/02/2025 8:11 pm</h4>\n<p>Dear Learner</p>\n<p>Please access the Mock ROE 2 at this link:</p>\n<aside class=\"onebox allowlistedgeneric\" da"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_11", "text": "er</p>\n<p>Please access the Mock ROE 2 at this link:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://exam.sanand.workers.dev/tds-2024-sep-roe1\">\n  <header class=\"source\">\n      \n\n      <a href=\"https://exam.sanand.workers.dev/tds-2024-sep-roe1\" target=\"_blank\" rel=\"noopener\">exam.sanand.workers.dev</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://exam.sanand.workers.dev/tds-2024-sep-roe1\" target=\"_blank\" rel=\"noopener\">Technical Assessment</a></h3"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_12", "text": "am.sanand.workers.dev/tds-2024-sep-roe1\" target=\"_blank\" rel=\"noopener\">Technical Assessment</a></h3>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>There is no time limit for this Mock. The expected time to solve this ROE is 45 mins. Set an alarm and try it.<br>\nAfter the session at 9pm there will be a session where we will show you the solutions step by step (not like the previous session which was a demo of ROE).<br>\nTo chec"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_13", "text": " you the solutions step by step (not like the previous session which was a demo of ROE).<br>\nTo check your answers you will need to run the following script in the console.</p>\n<pre data-code-wrap=\"Javascript\"><code class=\"lang-Javascript\">inputs = document.querySelectorAll('input')\ntextboxes = document.querySelectorAll(\"textarea\")\nbuttons = document.querySelectorAll(\"button\")\ninputs.forEach(input =&gt; input.removeAttribute('disabled'));\nbuttons.forEach(input =&gt; input.removeAttribute('disabl"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_14", "text": " =&gt; input.removeAttribute('disabled'));\nbuttons.forEach(input =&gt; input.removeAttribute('disabled'));\ntextboxes.forEach(input =&gt; input.removeAttribute('disabled'));\n</code></pre>\n<p>Do not submit or save your answers.</p>\n<p>All the best!<br>\nKind regards<br>\nTDS Team</p>\n<h3><a name=\"p-599595-update-2-10\" class=\"anchor\" href=\"#p-599595-update-2-10\"></a>Update 2</h3>\n<h4><a name=\"p-599595-h-26022025-1100-am-11\" class=\"anchor\" href=\"#p-599595-h-26022025-1100-am-11\"></a>26/02/2025 11:00 am"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_15", "text": "h-26022025-1100-am-11\" class=\"anchor\" href=\"#p-599595-h-26022025-1100-am-11\"></a>26/02/2025 11:00 am</h4>\n<p>We will be releasing Mock 2 tonight on an exam portal at 8pm (no time limit).<br>\nThe link for the Mock 2 will be available in this post as well as in the Seek Portal. An email will also be sent with the link to Mock 2.</p>\n<p>We will be conducting a solving session at 9pm. This will be a regular teaching session (not like the first session on Tuesday 25/02/25 which was a real preview of "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_16", "text": "egular teaching session (not like the first session on Tuesday 25/02/25 which was a real preview of what ROE looks like).</p>\n<p>Kind regards,<br>\nTDS Team</p>\n<hr>\n<h3><a name=\"p-599595-update-1-12\" class=\"anchor\" href=\"#p-599595-update-1-12\"></a>Update 1</h3>\n<h4><a name=\"p-599595-h-25022025-746pm-13\" class=\"anchor\" href=\"#p-599595-h-25022025-746pm-13\"></a>25/02/2025 7:46pm</h4>\n<p>We have now closed the mock submissions.<br>\nBoth the dataset and the form submissions will reopen after tonights"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_17", "text": "losed the mock submissions.<br>\nBoth the dataset and the form submissions will reopen after tonights live session.</p>\n<hr>\n<h3><a name=\"p-599595-announcement-14\" class=\"anchor\" href=\"#p-599595-announcement-14\"></a>Announcement</h3>\n<h4><a name=\"p-599595-h-25022025-15\" class=\"anchor\" href=\"#p-599595-h-25022025-15\"></a>25/02/2025</h4>\n<p>This same information is available in the seek portal as well.</p>\n<p>The data for Mock ROE 1 is available at this link:</p>\n<p><a href=\"https://github.com/Jivra"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_18", "text": ".</p>\n<p>The data for Mock ROE 1 is available at this link:</p>\n<p><a href=\"https://github.com/Jivraj-18/tds-jan-2025-mock-roe-1\">Jivraj-18/tds-jan-2025-mock-roe-1</a></p>\n<p>The questions for Mock ROE 1 is available at this link:</p>\n<p><a href=\"https://forms.gle/UWhvLQvjrJmnvMSn6\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://forms.gle/UWhvLQvjrJmnvMSn6</a></p>\n<p>IMPORTANT: We will accept only a single submission of the Mock Question Form. Solve all the questions first, and then fill "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_19", "text": "pt only a single submission of the Mock Question Form. Solve all the questions first, and then fill the form and make a single submission at the end.</p>\n<p>The form submission will be temporarily closed after 8pm.</p>\n<p>We have provided this for you to test yourself. The expected time to complete this Mock ROE is 45 mins.</p>\n<p>We will allow access to the Mock ROE and the question form after the live solving session tonight.</p>\n<p>All the best!</p>\n\n---\n**carlton** *(created: 2025-02-25T13:3"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_20", "text": "e live solving session tonight.</p>\n<p>All the best!</p>\n\n---\n**carlton** *(created: 2025-02-25T13:32:15.454Z)*\n\n\n\n---\n**22f2001640** *(created: 2025-02-25T13:39:40.411Z)*\n\n<p>Should we use data mentioned in headline of form or mail data. ?</p>\n\n---\n**24ds3000028** *(created: 2025-02-25T13:58:19.934Z)*\n\n<p>From where can I get today\u2019s live sessions link</p>\n\n---\n**carlton** *(created: 2025-02-25T14:09:41.427Z)*\n\n<p>either is fine. Both have the same data but slightly different presentations</p>\n"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_21", "text": "4:09:41.427Z)*\n\n<p>either is fine. Both have the same data but slightly different presentations</p>\n\n---\n**carlton** *(created: 2025-02-25T14:10:15.004Z)*\n\n<p>From google calendar</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://workspace.google.com/intl/en-US/products/calendar/\">\n  <header class=\"source\">\n      \n\n      <a href=\"https://workspace.google.com/intl/en-US/products/calendar/\" target=\"_blank\" rel=\"noopener\">Google Workspace</a>\n  </header>\n\n  <article class=\"onebox"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_22", "text": "calendar/\" target=\"_blank\" rel=\"noopener\">Google Workspace</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/362;\"></div>\n\n<h3><a href=\"https://workspace.google.com/intl/en-US/products/calendar/\" target=\"_blank\" rel=\"noopener\">Shareable Online Calendar and Scheduling - Google Calendar</a></h3>\n\n  <p>Use Google Calendar to share meetings and schedule appointments, for managing what matters in your business and personal life, with Google Works"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_23", "text": "hedule appointments, for managing what matters in your business and personal life, with Google Workspace.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>You should subscribe to tds calendar. Its available in the TDS Portal</p>\n<p><a href=\"http://meet.google.com/odh-ycbm-ahj\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">meet.google.com/odh-ycbm-ahj</a></p>\n\n---\n**22f2001640** *(created: 2025-02-25T14:18:08.670Z)*\n\n<p>form li"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_24", "text": "oogle.com/odh-ycbm-ahj</a></p>\n\n---\n**22f2001640** *(created: 2025-02-25T14:18:08.670Z)*\n\n<p>form link not working</p>\n\n---\n**carlton** *(created: 2025-02-25T14:18:50.402Z)*\n\n<p>Yes we close it at 7:45pm</p>\n<p>We will reopen after live session tonight.<br>\nIts a timed mock.</p>\n\n---\n**22f2001640** *(created: 2025-02-25T14:19:32.437Z)*\n\n<p>atleast close 5 mins early I would have copied the questions</p>\n\n---\n**shubhamatkal** *(created: 2025-02-25T14:31:01.026Z)*\n\n<p>live session gmeet link is no"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_25", "text": "ns</p>\n\n---\n**shubhamatkal** *(created: 2025-02-25T14:31:01.026Z)*\n\n<p>live session gmeet link is not available?</p>\n\n---\n**Sagan** *(created: 2025-02-25T14:44:59.458Z)*\n\n<p>After seeing the Mock, I have to say, please give more time for ROE exam, anything less than 1 hour seems extremely difficult.</p>\n\n---\n**shubhamatkal** *(created: 2025-02-25T16:41:32.061Z)*\n\n<p>where can we find link for recording of live session which happened after this mock roe ?<br>\nthanks</p>\n\n---\n**Sagan** *(created: "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_26", "text": "rding of live session which happened after this mock roe ?<br>\nthanks</p>\n\n---\n**Sagan** *(created: 2025-02-25T17:02:29.814Z)*\n\n<p>When will it reopen?</p>\n\n---\n**23f2003413** *(created: 2025-02-26T03:30:22.514Z)*\n\n<p>dear <a class=\"mention\" href=\"/u/carlton\">@carlton</a><br>\nwhen will yesterday\u2019s recorded session on mock ROE 1 be uploaded on YouTube?</p>\n\n---\n**carlton** *(created: 2025-02-26T03:58:19.216Z)*\n\n<p><a class=\"mention\" href=\"/u/23f2003413\">@23f2003413</a></p>\n<p>We will have it uplo"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_27", "text": "58:19.216Z)*\n\n<p><a class=\"mention\" href=\"/u/23f2003413\">@23f2003413</a></p>\n<p>We will have it uploaded sometime this morning.</p>\n<p>It has two parts to it. The first part is the TAs solving the Mock in real time (however this is not a solutions session). The purpose of it is to get you to realise some key things:</p>\n<ol>\n<li>The chaos of ROE.</li>\n<li>The adrenaline, speed of thought, the need to be very familiar with your tools.</li>\n<li>The limited time you have to use GPT effectively. It "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_28", "text": " to be very familiar with your tools.</li>\n<li>The limited time you have to use GPT effectively. It will help you with minor work flows, but not with complex tasks. (watch the session debrief to hear a clear articulation about this).</li>\n<li>The value of efficient and effective collaboration. A hodgepodge of many people will not make an effective solutions team.</li>\n<li><strong>The ABSOLUTE importance of creating your own cheat sheet with code snippets that will help you solve ROE quickly</str"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_29", "text": "rtance of creating your own cheat sheet with code snippets that will help you solve ROE quickly</strong></li>\n<li>Workflow of ROE: Data Extraction \u2192 Data Cleaning \u2192 Data Transformation \u2192 Data Analyisis \u2192 Information to answer questions</li>\n<li>The pitfalls of getting fixated on a question (a very common mistake and you can see it happen in the real time solving session as well).</li>\n<li>How limited the time is.</li>\n</ol>\n<p>The second part of the session was a debrief for the sheer shock that"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_30", "text": "ted the time is.</li>\n</ol>\n<p>The second part of the session was a debrief for the sheer shock that students felt. The goal of the mock was to acclimatise you to the shock of ROE.<br>\nPast terms never had this benefit. We thought to take the shock factor out so that you can be better prepared than any term before. Emotions were raw. But this is normal. What is unusual is to have a preview of it before ROE. So the discussions were very intense even for us.</p>\n<p>Today\u2019s Mock ROE will be more li"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_31", "text": "efore ROE. So the discussions were very intense even for us.</p>\n<p>Today\u2019s Mock ROE will be more like a traditional solving session and deal with new aspects. It has the added bonus of being hosted on an exam server (without a time limit).</p>\n<p>I would still STRONGLY advise setting a horrible sounding alarm to acclimatise to the pressure cooker of ROE. You will make stupid mistakes under pressure. The TAs did yesterday as well. So best to reduce this factor by getting used to the clock.</p>\n<"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_32", "text": "re. The TAs did yesterday as well. So best to reduce this factor by getting used to the clock.</p>\n<p>Kind regards</p>\n\n---\n**carlton** *(created: 2025-02-26T03:58:46.473Z)*\n\n\n\n---\n**23f2003413** *(created: 2025-02-26T04:02:53.908Z)*\n\n<p>Thank you! will check out the session today</p>\n\n---\n**shubhamatkal** *(created: 2025-02-26T09:16:29.955Z)*\n\n<p>Hello <a class=\"mention\" href=\"/u/carlton\">@carlton</a> sir , for me given constituency was <code>\"SRI GOBINDPUR\"</code><br>\nand in the dataset there "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_33", "text": "n</a> sir , for me given constituency was <code>\"SRI GOBINDPUR\"</code><br>\nand in the dataset there are multiple names for this constituency i think over the period names were changed of this constituency<br>\ni have filtered constituencies from punjab using below code in colab</p>\n<pre><code class=\"lang-auto\">df_gobindpur = df[df[\"AC\"].str.contains(\"SRI GOBINDPUR|SRIHARGOBINDPUR|SRI HARGOBINDPUR\", case=False, na=False)]\n</code></pre>\n<p>is this correct approach or i have to consider only SRI GOB"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_34", "text": " case=False, na=False)]\n</code></pre>\n<p>is this correct approach or i have to consider only SRI GOBINDPUR name only? but then this constituency is not availble after 1957</p>\n<p>using above filtering i got below data for SRI GOBINDPUR</p><aside class=\"onebox googledrive\" data-onebox-src=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/view?usp=sharing\">\n  <header class=\"source\">\n\n      <a href=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/view?usp=sharing\""}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_35", "text": "\n\n      <a href=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/view?usp=sharing\" target=\"_blank\" rel=\"noopener nofollow ugc\">drive.google.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n      <a href=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/view?usp=sharing\" target=\"_blank\" rel=\"noopener nofollow ugc\"><span class=\"googledocs-onebox-logo g-drive-logo\"></span></a>\n\n\n\n<h3><a href=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/vi"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_36", "text": "go\"></span></a>\n\n\n\n<h3><a href=\"https://drive.google.com/file/d/1PHMvoD16Mqino-9SC8uaUtVU3bVuxkD7/view?usp=sharing\" target=\"_blank\" rel=\"noopener nofollow ugc\">df_gobindpur.csv</a></h3>\n\n<p>Google Drive file.</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>then i used margin formula as</p>\n<pre><code class=\"lang-auto\">margin_percentage = ((winner_votes - runner_up_votes) / total_votes) * 100\n</code></pre>\n<p>using this i got a"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_37", "text": "centage = ((winner_votes - runner_up_votes) / total_votes) * 100\n</code></pre>\n<p>using this i got answer for 1st question as</p>\n<pre><code class=\"lang-auto\">YEAR                              1992\nAC                   4 SRIHARGOBINDPUR\nWINNER                  1 GURNAM SINGH\nWINNER_PARTY                       CPI\nWINNER_VOTES                    5000.0\nRUNNER_UP               2 MUSTAK MASIH\nRUNNER_UP_PARTY                    INC\nRUNNER_UP_VOTES                 1115.0\nMARGIN_PERCENTAGE            "}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_38", "text": "UP_PARTY                    INC\nRUNNER_UP_VOTES                 1115.0\nMARGIN_PERCENTAGE            50.599114\n</code></pre>\n<p>which is 50.60 , but answer is 62.64<br>\npls guide where i might be wrong, thanks</p>\n\n---\n**Jivraj** *(created: 2025-02-26T11:23:42.616Z)*\n\n<aside class=\"quote group-ds-students\" data-username=\"shubhamatkal\" data-post=\"19\" data-topic=\"168449\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n shubhamatkal:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">df_gobindp"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_39", "text": "ss=\"quote-controls\"></div>\n shubhamatkal:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">df_gobindpur = df[df[\"AC\"].str.contains(\"SRI GOBINDPUR|SRIHARGOBINDPUR|SRI HARGOBINDPUR\", case=False, na=False)]\n</code></pre>\n</blockquote>\n</aside>\n<p>For this kind of name difference you can use Openrefine software</p>\n<aside class=\"quote group-ds-students\" data-username=\"shubhamatkal\" data-post=\"19\" data-topic=\"168449\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n shubhamatkal:</div>\n<blockqu"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_40", "text": "topic=\"168449\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n shubhamatkal:</div>\n<blockquote>\n<p>which is 50.60 , but answer is 62.64</p>\n</blockquote>\n</aside>\n<p>That answer is wrong, we will be releasing a script with correct python snippets.<br>\nKind regards.</p>\n\n---\n**23f2005138** *(created: 2025-02-26T12:47:56.303Z)*\n\n<p><a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a><br>\n\u201cSATHUPALLE\u201d and \u201cNILANGA\u201d were two of the four constitue"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_41", "text": "ention\" href=\"/u/carlton\">@carlton</a><br>\n\u201cSATHUPALLE\u201d and \u201cNILANGA\u201d were two of the four constituencies which were assigned to me. However, even with phonetic match, I couldn\u2019t find any data for these.  Closest I could find to SATHUPALLE is \u201cSattenapalle\u201d, however, two are different locations 150km+ apart as per google maps. Are these really in the dataset?</p>\n<div class=\"maps-onebox\"><iframe src=\"https://maps.google.com/maps?ll=16.7429406,79.8396716&amp;z=9&amp;output=embed&amp;dg=ntvb\" widt"}
{"source": "topics_md/168449.md", "chunk_id": "168449.md_part_42", "text": "rc=\"https://maps.google.com/maps?ll=16.7429406,79.8396716&amp;z=9&amp;output=embed&amp;dg=ntvb\" width=\"690\" height=\"400\" frameborder=\"0\" style=\"border:0\" seamless=\"seamless\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation\"></iframe></div>"}
{"source": "topics_md/168537.md", "chunk_id": "168537.md_part_1", "text": "# ROE timing overlaps with Java OPPE\n\n---\n**Nelson** *(created: 2025-02-26T11:45:53.368Z)*\n\n<p>On 2nd March, I have both Java OPPE and TDS ROE.<br>\nMy Java OPPE timing is: 9:30 to 11:00 AM<br>\nMY TDS ROE timing is: 10:30 to 11:15 AM</p>\n<p>A minimum gap of one hour is recommended.</p>\n<p>I have written to support.</p>\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Please look into this.</p>\n\n---\n**23f2004752** *(created: 2025-02-26T13:09:32.246Z)*\n\n<p>I guess roe time is 13:00 to 13:45 and"}
{"source": "topics_md/168537.md", "chunk_id": "168537.md_part_2", "text": "\n---\n**23f2004752** *(created: 2025-02-26T13:09:32.246Z)*\n\n<p>I guess roe time is 13:00 to 13:45 and it is same for all , also check calender for the same.</p>\n\n---\n**carlton** *(created: 2025-02-26T13:27:47.811Z)*\n\n<p><a class=\"mention\" href=\"/u/nelson\">@Nelson</a><br>\nTDS ROE is at 1pm in the afternoon for everyone.</p>\n\n---\n**Nelson** *(created: 2025-03-03T07:27:48.677Z)*\n\n<p>Apologies for the confusion. I realized that the issue was due to different time zones\u2014Java OPPE displayed IST (GMT +5"}
{"source": "topics_md/168537.md", "chunk_id": "168537.md_part_3", "text": "confusion. I realized that the issue was due to different time zones\u2014Java OPPE displayed IST (GMT +5:30), while TDS ROE showed AST (GMT +3). On the same day, I intended to delete my post on Discourse but couldn\u2019t find it, as it was still in draft mode. So, I deleted it. However, I was surprised to see the post today.</p>\n<p>I regret any inconvenience caused.</p>"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_1", "text": "# Remote Online Exam [TDS Jan 2025]\n\n---\n**carlton** *(created: 2025-03-01T08:54:26.517Z)*\n\n<p>This is the official page for discussing anything related to the ROE itself. Please limit posts on this thread to technical questions or doubts regarding the ROE itself.</p>\n<p>The Remote Online Exam has been scheduled for</p>\n<p>Sunday, 2nd March 2025 (<strong>02/03/2025</strong> ) at <strong>1:00pm</strong></p>\n<p>The exam link will become available at the below mentioned site, 1 hour before the star"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_2", "text": "rong></p>\n<p>The exam link will become available at the below mentioned site, 1 hour before the start time:</p>\n<p><a href=\"http://study.iitm.ac.in/ds/exam.html\">https://study.iitm.ac.in/ds/exam.html</a></p>\n<p>[EDIT]</p>\n<ul>\n<li>There will be a <a href=\"https://meet.google.com/bah-uytq-osu\">Gmeet manned by the course team</a> from <span class=\"discourse-local-date\" data-date=\"2025-03-02\" data-email-preview=\"2025-03-02T07:20:00Z UTC\" data-format=\"LLLL\" data-range=\"from\" data-time=\"12:50:00\" dat"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_3", "text": "ail-preview=\"2025-03-02T07:20:00Z UTC\" data-format=\"LLLL\" data-range=\"from\" data-time=\"12:50:00\" data-timezone=\"Asia/Calcutta\" data-timezones=\"Asia/Kolkata\">Sunday, March 2, 2025 7:20 AM</span>\u2192<span class=\"discourse-local-date\" data-date=\"2025-03-02\" data-email-preview=\"2025-03-02T08:20:00Z UTC\" data-format=\"LLLL\" data-range=\"to\" data-time=\"13:50:00\" data-timezone=\"Asia/Calcutta\" data-timezones=\"Asia/Kolkata\">Sunday, March 2, 2025 8:20 AM</span> to solve your technical issues (timeouts, questio"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_4", "text": "Asia/Kolkata\">Sunday, March 2, 2025 8:20 AM</span> to solve your technical issues (timeouts, question not visible etc).</li>\n<li>Please do not ask concept related questions in this meet. Use this only for clarifying technical issues. <strong>If your issue is resolved, PLEASE EXIT THE MEET.</strong> Lurkers will be penalized </li>\n<li>There is a bonus provided for <a href=\"https://forms.gle/TXxz1yr5fpcz5bh89\">student feedback</a> on the ROE exam preparation and attempt. This will be available til"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_5", "text": "5fpcz5bh89\">student feedback</a> on the ROE exam preparation and attempt. This will be available till <span class=\"discourse-local-date\" data-date=\"2025-03-02\" data-email-preview=\"2025-03-02T11:30:00Z UTC\" data-format=\"LLLL\" data-time=\"17:00:00\" data-timezone=\"Asia/Calcutta\" data-timezones=\"Asia/Kolkata\">Sunday, March 2, 2025 11:30 AM</span></li>\n</ul>\n<p>All the best,<br>\nTDS Team</p>\n\n---\n**carlton** *(created: 2025-03-01T08:55:17.920Z)*\n\n\n\n---\n**bhashwar_sengupta** *(created: 2025-03-01T08:59"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_6", "text": "ton** *(created: 2025-03-01T08:55:17.920Z)*\n\n\n\n---\n**bhashwar_sengupta** *(created: 2025-03-01T08:59:36.183Z)*\n\n<p>Would we be able to start work on the questions 1 hour before the exam start time?</p>\n\n---\n**carlton** *(created: 2025-03-01T09:01:56.407Z)*\n\n<p><a class=\"mention\" href=\"/u/bhashwar_sengupta\">@bhashwar_sengupta</a> No that will not be possible. It will go live only at 1 pm.</p>\n\n---\n**bhashwar_sengupta** *(created: 2025-03-01T09:40:09.245Z)*\n\n<p>Got it. Thank you. Also, are there a"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_7", "text": "**bhashwar_sengupta** *(created: 2025-03-01T09:40:09.245Z)*\n\n<p>Got it. Thank you. Also, are there any standard set of instructions that we need to follow during the ROE, like in OPPEs?</p>\n\n---\n**Yogesh1** *(created: 2025-03-01T11:19:35.700Z)*\n\n<p>Is it 45 minutes long?</p>\n\n---\n**23f2004837** *(created: 2025-03-01T15:16:32.904Z)*\n\n<p>No, it is 45 minutes \u2018short\u2019</p>\n\n---\n**23f2004636** *(created: 2025-03-01T16:34:53.754Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> will exam take pl"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_8", "text": ": 2025-03-01T16:34:53.754Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> will exam take place on the IITM Exam Portal (like other JAVA, Python OPPE) or will it take place on the TDS course portal like we had for Weekly GA?</p>\n\n---\n**Muthupalaniappan** *(created: 2025-03-01T16:45:45.614Z)*\n\n<p>Hello <a class=\"mention\" href=\"/u/carlton\">@carlton</a> sir, I could only find one live session of ROE in youtube. Can you please point out where are the other recordings?</p>\n\n---\n**carlton** *("}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_9", "text": " of ROE in youtube. Can you please point out where are the other recordings?</p>\n\n---\n**carlton** *(created: 2025-03-02T02:43:00.880Z)*\n\n<p>All week 7 sessions are ROE mock solving questions. Only the 4th session was a special session and was labelled as such, but it also has a mock solving component. These are all available on the Youtube channel</p>\n\n---\n**21f3001303** *(created: 2025-03-02T06:03:47.027Z)*\n\n<p>Sir we have to join the google meet for ROE or it\u2019s an open book exam?</p>\n\n---\n**24"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_10", "text": "3:47.027Z)*\n\n<p>Sir we have to join the google meet for ROE or it\u2019s an open book exam?</p>\n\n---\n**24f2007378** *(created: 2025-03-02T06:09:45.769Z)*\n\n<p>Is there a google meet that we have to join for proctoring?</p>\n\n---\n**lakshaygarg654** *(created: 2025-03-02T06:27:21.092Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n<p>I hope the Remote Online Exam (ROE) is ready to be uploaded to the portal. Is there any update regarding the additional time request? Can we expect any consider"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_11", "text": "to the portal. Is there any update regarding the additional time request? Can we expect any consideration on this?</p>\n<p>I submitted my request at the following link:<br>\n<a href=\"https://discourse.onlinedegree.iitm.ac.in/t/mock-roe-1-2-3-4-tds-jan-2025/168449/66\">Request for additional time for roe</a></p>\n\n---\n**23f2005138** *(created: 2025-03-02T06:37:21.495Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> Is the exam link enabled yet? Not able to see TDS in the table given at <a hre"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_12", "text": "carlton\">@carlton</a> Is the exam link enabled yet? Not able to see TDS in the table given at <a href=\"http://study.iitm.ac.in/ds/exam.html\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Exam</a></p>\n\n---\n**23f2002562** *(created: 2025-03-02T06:40:08.093Z)*\n\n<p>I am not being able to see the ROE link on the website where it is supposed to appear i.e. <a href=\"http://url237.study.iitm.ac.in/ls/click?upn=u001.MSZz9dweuQKJW5SH8JFO0zVRC9abYa2H370vulgnqCEB0rb2JRDpdYmZAeWnLDFA8gyP_TaYffKNLhcpM10MC"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_13", "text": "click?upn=u001.MSZz9dweuQKJW5SH8JFO0zVRC9abYa2H370vulgnqCEB0rb2JRDpdYmZAeWnLDFA8gyP_TaYffKNLhcpM10MCY1PnqDJT-2FNuZ61KkdeQdP748DgJIHBveqWN7MW2nmp9Bjx3db0V90vnVF9WnUpGJGlsZN6MwgywOkzb3puCTwzELfNnojc907IGFhG9ML64oysTn-2BlcDdSHGC1MGGt4QK6j8a8WFZ7VDO0bxrABDpAMFrnmSgZ-2F96-2F-2F1uAWfuwcNW3oD566TaT-2FDDiskBrP4u0QaQXDO95Y59Flo6u2QCzEhb8k-3D\" rel=\"noopener nofollow ugc\">https://study.iitm.ac.in/ds/exam.html</a><br>\nCan someone please inform if it is available for them ?</p>\n\n---\n**23f1003066** *(created:"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_14", "text": "l</a><br>\nCan someone please inform if it is available for them ?</p>\n\n---\n**23f1003066** *(created: 2025-03-02T06:41:16.706Z)*\n\n<p>no it\u2019s not available</p>\n\n---\n**23f2003853** *(created: 2025-03-02T06:42:23.367Z)*\n\n<p>Awaiting link<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/d/1d924906c7ec5da0a28f312565842402743638be.png\" data-download-href=\"/uploads/short-url/4dBgcGXtRto4DHOekFbLuYnUNwa.png?dl=1\" title=\"image"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_15", "text": "638be.png\" data-download-href=\"/uploads/short-url/4dBgcGXtRto4DHOekFbLuYnUNwa.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1920\u00d71080 277 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**Lokkiii** *(created"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_16", "text": "den=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**Lokkiii** *(created: 2025-03-02T06:42:56.799Z)*\n\n<p>Not available yet at the exam portal</p>\n\n---\n**Vishnuprasad** *(created: 2025-03-02T06:46:23.314Z)*\n\n<p>I still couldn\u2019t see the link being displayed in the link you mentioned?</p>\n\n---\n**Kabir1203** *(created: 2025-03-02T06:49:08.144Z)*\n\n<p>Exam link is available now on the portal.</p>"}
{"source": "topics_md/168832.md", "chunk_id": "168832.md_part_17", "text": "ow on the portal.</p>"}
{"source": "topics_md/167878.md", "chunk_id": "167878.md_part_1", "text": "# About TDS Course\n\n---\n**22f2000635** *(created: 2025-02-21T06:45:31.229Z)*\n\n<p>I have not receive week 6 assignment.Please help</p>\n\n---\n**Yogesh1** *(created: 2025-02-21T09:41:40.382Z)*\n\n<p>Yes. Week 6 and Project 2 should be released as soon as possible.</p>\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**carlton** *(created: 2025-02-21T10:18:09.293Z)*\n\n<p>Not ready yet. We will release it soon.</p>"}
{"source": "topics_md/167878.md", "chunk_id": "167878.md_part_2", "text": "l release it soon.</p>"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_1", "text": "# IMPORTANT: Dockerfile submitted as dockerfile rest everything is working fine\n\n---\n**nayonika** *(created: 2025-02-16T15:34:00.030Z)*\n\n<p><a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a><br>\nI got a mail saying my Dockerfile is missing. However I have a dockerfile already in my github repository. Is it an issue with the spelling of dockerfile since I have submitted it in all small cas"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_2", "text": "epository. Is it an issue with the spelling of dockerfile since I have submitted it in all small case as \u2018dockerfile\u2019. It was showing the score when I checked with the evaluate.py that was provided by iitm.</p>\n<p>Shall I just change the name of the file from \u2018dockerfile\u2019 to \u2018Dockerfile\u2019 in github repository of mine or is there anything else that is needed to detect the Dockerfile?</p>\n\n---\n**Saransh_Saini** *(created: 2025-02-16T16:22:25.231Z)*\n\n<p>The name of the Dockerfile should be \u201cDockerfi"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_3", "text": "nsh_Saini** *(created: 2025-02-16T16:22:25.231Z)*\n\n<p>The name of the Dockerfile should be \u201cDockerfile\u201d indeed, more over check other sections of your submission like</p>\n<ul>\n<li>Is the GitHub repo public?</li>\n<li>Does it have an MIT license?</li>\n<li>Does it have a DockerFile?</li>\n<li>Is the Docker image accessible?</li>\n</ul>\n\n---\n**nayonika** *(created: 2025-02-16T16:23:55.760Z)*\n\n<p>Oh ok made the changes in Github. I hope submitting again is not required since the links and names are sam"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_4", "text": "ade the changes in Github. I hope submitting again is not required since the links and names are same.</p>\n\n---\n**22f3000585** *(created: 2025-02-17T07:34:13.842Z)*\n\n<p><br>\nSir, i got this mail. I have checked that the repo is public and already has a Dockerfile.<br>\nI have renamed the \u2018LICENSE\u2019 file as \u2018MIT LICENSE\u2019.</p>\n\n---\n**satviksawhney** *(created: 2025-02-18T08:30:13.921Z)*\n\n<p>Sir, please consider it we have spent a lot of time, in my case just the d in Dockerfile was small that too on"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_5", "text": "e consider it we have spent a lot of time, in my case just the d in Dockerfile was small that too on remote repository. On my local repository it was Dockerfile only I even have a published docker image as verified by you autated script only. The name of the file on remote repository did not change even after commit it through my local repo, once I read the mail in morning it was only then I realised it wasn\u2019t changed on GitHub repo.</p>\n<p>Sir I understand the deadline has passed and I am not a"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_6", "text": "sed it wasn\u2019t changed on GitHub repo.</p>\n<p>Sir I understand the deadline has passed and I am not asking for a resubmission, I am just asking to consider the already submitted work, just that. It would be really helpful. I just have one commit on my repo that too \u201cRename dockerfile to Dokerfile\u201d . Sir please attest consider what we have already submitted. I have made no changes as you can verify it too.</p>\n<p>Sir it is a humble request to please consider it.</p>\n<p>Warm Regards,<br>\nSatvik Saw"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_7", "text": "it too.</p>\n<p>Sir it is a humble request to please consider it.</p>\n<p>Warm Regards,<br>\nSatvik Sawhney<br>\n23f2003680</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/a/1a5f2ea044383efcb5d248ddb487665e9e65957d.png\" data-download-href=\"/uploads/short-url/3Lil8Qu84E3T6jREDGJRO6bakiN.png?dl=1\" title=\"Screenshot 2025-02-18 at 1.53.10 PM\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_8", "text": "02-18 at 1.53.10 PM\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-18 at 1.53.10 PM</span><span class=\"informations\">1889\u00d7467 54 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>"}
{"source": "topics_md/167415.md", "chunk_id": "167415.md_part_9", "text": "</div></a></div></p>"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_1", "text": "# Regarding project1 for file not detecting after sending post request\n\n---\n**Sakshi6479** *(created: 2025-02-14T12:38:47.883Z)*\n\n<p>sir i am getting an error in this function calling which you have demonstrate yesterday , i am attaching my code also the error with it. Please take a look and provide the solution as the deadline is close please help me as soon as possible.<br>\nis there anything to do with dockerfile or anything else please explain it how to do it step by step.</p>\n<pre><code clas"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_2", "text": "do with dockerfile or anything else please explain it how to do it step by step.</p>\n<pre><code class=\"lang-auto\">import os\nfrom dotenv import load_dotenv\nimport json\nimport requests\nfrom fastapi import FastAPI, HTTPException\nfrom fastapi.middleware.cors import CORSMiddleware\nimport pandas as pd\nfrom fastapi.responses import StreamingResponse, JSONResponse\nfrom typing import Dict, Any, List\nimport subprocess\nimport datetime\nfrom pathlib import Path\nimport sqlite3\n\napp = FastAPI()\n\napp.add_middle"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_3", "text": " subprocess\nimport datetime\nfrom pathlib import Path\nimport sqlite3\n\napp = FastAPI()\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],\n    allow_credentials=True,\n    allow_methods=[\"GET\", \"POST\"],\n    allow_headers=[\"*\"],\n)\n\n#AIPROXY_TOKEN = os.getenv(\"AIPROXY_TOKEN\")\nload_dotenv()\nAIPROXY_TOKEN = os.getenv(\"AIPROXY_TOKEN\", \"enter your token here\")\n\n\ndef sort_contacts(contacts_file_path: str, output_file_path: str):\n    try:\n        contacts = pd.read_json(contacts_file_path)\n  "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_4", "text": "e_path: str, output_file_path: str):\n    try:\n        contacts = pd.read_json(contacts_file_path)\n        contacts.sort_values([\"last_name\", \"first_name\"]).to_json(output_file_path, orient=\"records\")\n        return {\"message\": f\"Contacts sorted and saved to {output_file_path}\"}\n    except Exception as e:\n        return {\"error\": f\"Failed to sort contacts: {str(e)}\"}\n\n\na4_tool = {\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"sort_contacts\",\n        \"description\": \"This function take"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_5", "text": "tion\",\n    \"function\": {\n        \"name\": \"sort_contacts\",\n        \"description\": \"This function takes data from a json file and sorts the data first by last name and then by first name, then it stores it inside the speicfied location.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"contacts_file_path\": {\n                    \"type\": \"string\",\n                    \"description\": \"The relative path to the input JSON file containing the contacts.\"\n"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_6", "text": "                 \"description\": \"The relative path to the input JSON file containing the contacts.\"\n                },\n                \"output_file_path\": {\n                    \"type\": \"string\",\n                    \"description\": \"The relative path to the output JSON file to store the sorted contacts.\"\n                }\n            },\n            \"required\": [\"contacts_file_path\", \"output_file_path\"],\n            \"additionalProperties\": False\n        },\n        \"strict\": True\n    },\n}\n\n\ntools = "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_7", "text": "h\"],\n            \"additionalProperties\": False\n        },\n        \"strict\": True\n    },\n}\n\n\ntools = [bakecake, a1_tool, a2_tool, a3_tool, a4_tool, a5_tool, a6_tool, a7_tool, a8_tool, a9_tool, a10_tool]\n\n\n\ndef query_gpt(user_input: str, tools: list[dict] = tools) -&gt; dict:\n    response = requests.post(\n        url=\"https://aiproxy.sanand.workers.dev/openai/v1/chat/completions\",\n        headers={\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {AIPROXY_TOKEN"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_8", "text": "            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {AIPROXY_TOKEN}\"\n        },\n        json={\n            \"model\": \"gpt-4o-mini\",\n            \"messages\": [\n                {\n                    \"role\": \"user\",\n                    \"content\": user_input\n                }\n            ],\n            \"tools\": tools,\n            \"tool_choice\": \"auto\"\n        }\n    )\n    return response.json()\n\n@app.get(\"/\")\ndef home():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/read\")"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_9", "text": "  return response.json()\n\n@app.get(\"/\")\ndef home():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/read\")\ndef read_file(path: str):\n    try:\n        with open(path, \"r\") as f:\n            return f.read()\n    except Exception as e:\n        raise HTTPException(status_code=404, detail=\"File does not exist\")\n\n@app.post(\"/run\")\nasync def run(task: str):\n    query = query_gpt(task)\n    print(query)  # Print the full response to inspect it.\n    \n    if 'choices' not in query:\n        raise HTTPException(sta"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_10", "text": "the full response to inspect it.\n    \n    if 'choices' not in query:\n        raise HTTPException(status_code=500, detail=\"Invalid response format from GPT API\")\n    \n    try:\n        tool_calls = query['choices'][0]['message'].get('tool_calls', [])\n        if tool_calls:\n            func_name = tool_calls[0]['function']['name']\n            args = json.loads(tool_calls[0]['function']['arguments'])\n            \n            # Map function names to their respective functions\n            function_map"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_11", "text": "            \n            # Map function names to their respective functions\n            function_map = {\n                \"cakebake\": cakebake,\n                \"install_uv_and_run_datagen\": install_uv_and_run_datagen,\n                \"format_markdown_file\": format_markdown_file,\n                \"count_wednesdays\": count_wednesdays,\n                \"sort_contacts\": sort_contacts,\n                \"extract_recent_logs\": extract_recent_logs,\n                \"create_markdown_index\": create_markdown_in"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_12", "text": "tract_recent_logs\": extract_recent_logs,\n                \"create_markdown_index\": create_markdown_index,\n                \"extract_sender_email\": extract_sender_email,\n                \"extract_credit_card_number\": extract_credit_card_number,\n                \"find_similar_comments\": find_similar_comments,\n                \"calculate_gold_ticket_sales\": calculate_gold_ticket_sales,\n            }\n            \n            if func_name in function_map:\n                output = function_map[func_name](*"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_13", "text": "       \n            if func_name in function_map:\n                output = function_map[func_name](**args)\n            else:\n                raise HTTPException(status_code=500, detail=\"Unknown function called\")\n        else:\n            raise HTTPException(status_code=500, detail=\"No function call found in response\")\n    except KeyError as e:\n        raise HTTPException(status_code=500, detail=f\"KeyError: Missing key in response - {str(e)}\")\n    except Exception as e:\n        raise HTTPExceptio"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_14", "text": "KeyError: Missing key in response - {str(e)}\")\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error processing the request: {str(e)}\")\n    \n    return output\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/2/5/255972d284f089960091b482f45a9c8f83919195.png\" data-download-href=\"/up"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_15", "text": "3/uploads/iitm/original/3X/2/5/255972d284f089960091b482f45a9c8f83919195.png\" data-download-href=\"/uploads/short-url/5kpj9Kh1zIaAJZmIig1SCQTXOtL.png?dl=1\" title=\"Screenshot 2025-02-14 171217\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-14 171217</span><span class=\"informations\">2075\u00d71343 176 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-ic"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_16", "text": "pan class=\"informations\">2075\u00d71343 176 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> , <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> , <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**carlton** *(created: 2025-02-14T13:01:08.797Z)*\n\n<p>Hi Sakshi,</p>\n<p>The error is quite clear, it cannot find the file /data/contacts.j"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_17", "text": "1:08.797Z)*\n\n<p>Hi Sakshi,</p>\n<p>The error is quite clear, it cannot find the file /data/contacts.json</p>\n<p>Question: What creates the /data/contacts.json file?</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T13:30:26.445Z)*\n\n<p>so how to do it sir that the thing i am not able to understand.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T13:59:34.581Z)*\n\n<p>sir kindly help me with this the time is running and i am still at the starting stage of project.<br>\n<a class=\"mention\" href=\"/u/carlton\">@"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_18", "text": " running and i am still at the starting stage of project.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**Saransh_Saini** *(created: 2025-02-14T14:16:24.088Z)*\n\n<p>Sakshi as the error says it\u2019s unable to find your file. Try adding a . (dot) before the location.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T14:32:12.846Z)*\n\n<p>sir i have used the dot(.) while sending the request to postman in the query which i provided to the task. Is the dot(.) should be added somewhere else?</p"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_19", "text": " postman in the query which i provided to the task. Is the dot(.) should be added somewhere else?</p>\n\n---\n**Saransh_Saini** *(created: 2025-02-14T15:07:26.713Z)*\n\n<p>If you have added that dot as a prefix to your locations then, you would have to structure your query_gpt in such a way that it takes these dots into consideration.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T17:48:35.347Z)*\n\n<p>sir i have tried that by putting by doing this</p>\n<pre><code class=\"lang-auto\">import os\nfrom dotenv "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_20", "text": "r i have tried that by putting by doing this</p>\n<pre><code class=\"lang-auto\">import os\nfrom dotenv import load_dotenv\nimport json\nimport requests\nfrom dateutil import parser as date_parser\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom fastapi import FastAPI, HTTPException\nfrom fastapi.middleware.cors import CORSMiddleware\nimport pandas as pd\nfrom fastapi.responses import StreamingResponse, JSONResponse\nfrom typing import Dict, Any, List\nimport subprocess\nimport datetime\nfrom pathl"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_21", "text": "sponse, JSONResponse\nfrom typing import Dict, Any, List\nimport subprocess\nimport datetime\nfrom pathlib import Path\nimport sqlite3\nimport base64\nimport mimetypes\nimport numpy as np\n\n\napp = FastAPI()\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],\n    allow_credentials=True,\n    allow_methods=[\"GET\", \"POST\"],\n    allow_headers=[\"*\"],\n)\n\n#AIPROXY_TOKEN = os.getenv(\"AIPROXY_TOKEN\")\nAIPROXY_TOKEN = os.getenv(\"AIPROXY_TOKEN\")\ndef cakebake(no_people: int, flavor: str):\n    return {\"me"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_22", "text": "IPROXY_TOKEN = os.getenv(\"AIPROXY_TOKEN\")\ndef cakebake(no_people: int, flavor: str):\n    return {\"message\": f\"Making a {flavor} cake for {no_people} people\"}\n\nbakecake = {\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"cakebake\",\n        \"description\": \"Make a cake for all iitm students contain its emailids\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"no_people\": {\n                    \"type\": \"integer\",\n                    \"desc"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_23", "text": "\": {\n                \"no_people\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Number of people\"\n                },\n                \"flavor\": {\n                    \"type\": \"string\",\n                    \"description\": \"Flavor of the cake\"\n                }\n            },\n            \"required\": [\"no_people\", \"flavor\"],\n            \"additionalProperties\": False\n        },\n        \"strict\": True\n    }\n}\n\ndef sort_contacts(contacts_file_path: str, output_file_path: st"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_24", "text": "  },\n        \"strict\": True\n    }\n}\n\ndef sort_contacts(contacts_file_path: str, output_file_path: str):\n    try:\n        contacts = pd.read_json(contacts_file_path)\n        contacts.sort_values([\"last_name\", \"first_name\"]).to_json(output_file_path, orient=\"records\")\n        return {\"message\": f\"Contacts sorted and saved to {output_file_path}\"}\n    except Exception as e:\n        return {\"error\": f\"Failed to sort contacts: {str(e)}\"}\n\ntools = [bakecake, a1_tool, a2_tool, a3_tool, a4_tool, a5_tool,"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_25", "text": "Failed to sort contacts: {str(e)}\"}\n\ntools = [bakecake, a1_tool, a2_tool, a3_tool, a4_tool, a5_tool, a6_tool, a7_tool, a8_tool, a9_tool, a10_tool]\n\n\n\ndef query_gpt(user_input: str, tools: list[dict] = tools) -&gt; dict[str, Any]:\n    response = requests.post(\n        url=\"https://aiproxy.sanand.workers.dev/openai/v1/chat/completions\",\n        headers={\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {AIPROXY_TOKEN}\"\n        },\n        json={\n            \"mod"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_26", "text": "\",\n            \"Authorization\": f\"Bearer {AIPROXY_TOKEN}\"\n        },\n        json={\n            \"model\": \"gpt-4o-mini\",\n            \"messages\": [\n                {\n                    \"role\": \"system\",\n                    \"content\": \"\"\"\n                        Whenever you receive a system directory location, always make it into a realtive path, for example adding a . before it would make it relative path, rest is on you to manage, I just want the relative path\"\"\"\n                },\n            "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_27", "text": "ive path, rest is on you to manage, I just want the relative path\"\"\"\n                },\n                {\n                    \"role\": \"user\",\n                    \"content\": user_input\n                }\n            ],\n            \"tools\": tools,\n            \"tool_choice\": \"auto\"\n        }\n    )\n    return response.json()\n\n@app.get(\"/\")\ndef home():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/read\")\ndef read_file(path: str):\n    try:\n        with open(path, \"r\") as f:\n            return f.read()\n    "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_28", "text": "f read_file(path: str):\n    try:\n        with open(path, \"r\") as f:\n            return f.read()\n    except Exception as e:\n        raise HTTPException(status_code=404, detail=\"File does not exist\")\n\n@app.post(\"/run\")\nasync def run(task: str):\n    query = query_gpt(task)\n    print(query)  # Print the full response to inspect it.\n    \n    if 'choices' not in query:\n        raise HTTPException(status_code=500, detail=\"Invalid response format from GPT API\")\n    \n    try:\n        tool_calls = query['"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_29", "text": "_code=500, detail=\"Invalid response format from GPT API\")\n    \n    try:\n        tool_calls = query['choices'][0]['message'].get('tool_calls', [])\n        if tool_calls:\n            func_name = tool_calls[0]['function']['name']\n            args = json.loads(tool_calls[0]['function']['arguments'])\n            \n            # Map function names to their respective functions\n            function_map = {\n                \"cakebake\": cakebake,\n                \"install_uv_and_run_datagen\": install_uv_and"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_30", "text": "{\n                \"cakebake\": cakebake,\n                \"install_uv_and_run_datagen\": install_uv_and_run_datagen,\n                \"format_markdown_file\": format_markdown_file,\n                \"count_wednesdays\": count_wednesdays,\n                \"sort_contacts\": sort_contacts,\n                \"extract_recent_logs\": extract_recent_logs,\n                \"create_markdown_index\": create_markdown_index,\n                \"extract_sender_email\": extract_sender_email,\n                \"extract_credit_card"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_31", "text": ",\n                \"extract_sender_email\": extract_sender_email,\n                \"extract_credit_card_number\": extract_credit_card_number,\n                \"find_similar_comments\": find_similar_comments,\n                \"calculate_gold_ticket_sales\": calculate_gold_ticket_sales,\n            }\n            \n            if func_name in function_map:\n                output = function_map[func_name](**args)\n            else:\n                raise HTTPException(status_code=500, detail=\"Unknown function "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_32", "text": "gs)\n            else:\n                raise HTTPException(status_code=500, detail=\"Unknown function called\")\n        else:\n            raise HTTPException(status_code=500, detail=\"No function call found in response\")\n    except KeyError as e:\n        raise HTTPException(status_code=500, detail=f\"KeyError: Missing key in response - {str(e)}\")\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error processing the request: {str(e)}\")\n    \n    return output\n\nif __name_"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_33", "text": "tatus_code=500, detail=f\"Error processing the request: {str(e)}\")\n    \n    return output\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n</code></pre>\n<p>and also i am sending postman request as <a href=\"http://localhost:8000/run?task=The\" rel=\"noopener nofollow ugc\">http://localhost:8000/run?task=The</a> file ./data/dates.txt contains a list of dates, one per line. Count the number of Wednesdays in the list, and write just the number to ./data/date"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_34", "text": ", one per line. Count the number of Wednesdays in the list, and write just the number to ./data/dates-wednesdays.txt<br>\ndo I need to use dockerfile for this? i am still getting the same error as<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/3/c/3c786f00a8e4f37db2c31ff21edffb3e68396b59.png\" data-download-href=\"/uploads/short-url/8CWFUFCn1rd2HZakNRDmzHnnKmR.png?dl=1\" title=\"Screenshot 2025-02-14 231752\" rel=\"noopener"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_35", "text": "s/short-url/8CWFUFCn1rd2HZakNRDmzHnnKmR.png?dl=1\" title=\"Screenshot 2025-02-14 231752\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-14 231752</span><span class=\"informations\">1786\u00d71065 74.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<a class=\"mention"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_36", "text": " aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> , <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> , <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**23f2004752** *(created: 2025-02-14T17:55:28.433Z)*\n\n<p>have you first post a request for task A1 as it creates the data folder along with  all the other files .</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T18:19:59.123Z)*\n\n<p>no actually do "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_37", "text": " the other files .</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T18:19:59.123Z)*\n\n<p>no actually do we have to create another file for that or we have to request post in this one ? can you guide me for that step wise . it would be very helpful.</p>\n\n---\n**23f2004752** *(created: 2025-02-14T18:22:49.379Z)*\n\n<p>by running task A1 , it automatically creates a data folder along with all the files in it. Without running task A1 you can\u2019t do rest of A tasks</p>\n\n---\n**Sakshi6479** *(created: 2025-02-1"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_38", "text": "t. Without running task A1 you can\u2019t do rest of A tasks</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T18:38:09.127Z)*\n\n<p>how can i run A1 task can elaborate a little bit. do i have to create data folder manually or  using this code by giving query taskA1 it will generate that folder ?</p>\n\n---\n**23f2004752** *(created: 2025-02-14T18:39:57.491Z)*\n\n<p>simply give task=\u201ctask\u201d<br>\ntask: copy the task a_1 from project document</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T18:44:30.274Z)*\n\n<p>it is s"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_39", "text": " a_1 from project document</p>\n\n---\n**Sakshi6479** *(created: 2025-02-14T18:44:30.274Z)*\n\n<p>it is showing</p>\n<pre><code class=\"lang-auto\">INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\n{'id': 'chatcmpl-B0uvU556EOCy6HOPHV9ni7YJY403i', 'object': 'chat.completion', 'created': 1739558524, 'model': 'gpt-4o-mini-2024-07-18', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': None, 'tool_calls': [{'id': 'call_JXkfp14QEEo6M2zdgBXKduqi', 'type': 'function', 'f"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_40", "text": "ant', 'content': None, 'tool_calls': [{'id': 'call_JXkfp14QEEo6M2zdgBXKduqi', 'type': 'function', 'function': {'name': 'install_uv_and_run_datagen', 'arguments': '{\"email\":\"24f2006749@ds.study.iitm.ac.in\"}'}}], 'refusal': None}, 'logprobs': None, 'finish_reason': 'tool_calls'}], 'usage': {'prompt_tokens': 732, 'completion_tokens': 30, 'total_tokens': 762, 'prompt_tokens_details': {'cached_tokens': 0, 'audio_tokens': 0}, 'completion_tokens_details': {'reasoning_tokens': 0, 'audio_tokens': 0, 'acc"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_41", "text": " 0, 'audio_tokens': 0}, 'completion_tokens_details': {'reasoning_tokens': 0, 'audio_tokens': 0, 'accepted_prediction_tokens': 0, 'rejected_prediction_tokens': 0}}, 'service_tier': 'default', 'system_fingerprint': 'fp_00428b782a', 'monthlyCost': 0.09109908, 'cost': 0.002376, 'monthlyRequests': 137}\nCollecting uv\n  Downloading uv-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nDownloading uv-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.3 MB)\n   \u2501"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_42", "text": " (11 kB)\nDownloading uv-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 16.3/16.3 MB 3.2 MB/s eta 0:00:00\nInstalling collected packages: uv\nSuccessfully installed uv-0.6.0\npython: can't open file '/home/sakshi-tds/tds_project1/https://raw.githubusercontent.com/sanand0/tools-in-data-science-public/tds-2025-01/project-1/datagen.py': [Errno 2] No such file or directory\nINFO:     127.0.0.1:34758 - \"POST /run?task=Install%20uv%20(if%"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_43", "text": " [Errno 2] No such file or directory\nINFO:     127.0.0.1:34758 - \"POST /run?task=Install%20uv%20(if%20required)%20and%20run%20https://raw.githubusercontent.com/sanand0/tools-in-data-science-public/tds-2025-01/project-1/datagen.py%20with%2024f2006749@ds.study.iitm.ac.in%20as%20the%20only%20argument. HTTP/1.1\" 200 OK\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/3/8/38616e70dfbf04366baf4c5690da45032982aa4"}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_44", "text": "rope1.discourse-cdn.com/flex013/uploads/iitm/original/3X/3/8/38616e70dfbf04366baf4c5690da45032982aa4f.png\" data-download-href=\"/uploads/short-url/82Lu1bafOSoTOnWb3DcmC7NgXWD.png?dl=1\" title=\"Screenshot 2025-02-15 001314\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-15 001314</span><span class=\"informations\">1759\u00d71645 228 KB</span><svg class=\"fa d-icon "}
{"source": "topics_md/167172.md", "chunk_id": "167172.md_part_45", "text": "hot 2025-02-15 001314</span><span class=\"informations\">1759\u00d71645 228 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>"}
{"source": "topics_md/168482.md", "chunk_id": "168482.md_part_1", "text": "# TDS Module 6\n\n---\n**24ds1000012** *(created: 2025-02-25T17:57:30.751Z)*\n\n<p>I am not able to see Module 6 or Module 7 in my TDS curriculum. Please let me know whether it is released already.</p>\n\n---\n**carlton** *(created: 2025-02-26T02:35:12.373Z)*\n\n<p><a class=\"mention\" href=\"/u/24ds1000012\">@24ds1000012</a> Both Module 6 and Module 7 have been available from the start of the course. All modules were released before the 10th of Jan on the TDS course site.</p>\n<p><a href=\"https://tds.s-anand."}
{"source": "topics_md/168482.md", "chunk_id": "168482.md_part_2", "text": "es were released before the 10th of Jan on the TDS course site.</p>\n<p><a href=\"https://tds.s-anand.net/#/\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://tds.s-anand.net/#/</a></p>\n<p>Module 6:</p>\n<p><a href=\"https://tds.s-anand.net/#/data-analysis\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://tds.s-anand.net/#/data-analysis</a></p>\n<p>Module 7:</p>\n<p><a href=\"https://tds.s-anand.net/#/data-visualization\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://tds.s-anand.net/#/"}
{"source": "topics_md/168482.md", "chunk_id": "168482.md_part_3", "text": "d.net/#/data-visualization\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://tds.s-anand.net/#/data-visualization</a></p>\n<p>GA 6 will become available sometime this week.</p>\n<p><s>We do not currently have an ETA on GA 7 and Project 2.</s></p>\n<p>Please refer to pinned post at the top of TDS page for new dates.</p>\n<p>Kind regards</p>"}
{"source": "topics_md/164737.md", "chunk_id": "164737.md_part_1", "text": "# Drop Course window for TDS\n\n---\n**23f1001511** *(created: 2025-01-22T15:46:41.520Z)*\n\n<p>I found that TDS is so much time engaging along with office work and also new comer in coding.<br>\nShould i drop the course as of now?<br>\nif Yes, then when will be the drop course window start?</p>"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_1", "text": "# GA4 - Data Sourcing - Discussion Thread [TDS Jan 2025]\n\n---\n**s.anand** *(created: 2025-01-31T16:13:36.640Z)*\n\n<p>Please post any questions related to <a href=\"https://exam.sanand.workers.dev/tds-2025-01-ga4\">Graded Assignment 4 - Data Sourcing</a>.</p>\n<p>Please use markdown code formatting (fenced code blocks) when sharing code (rather than screenshots). It\u2019s easier for us to copy-paste and test.</p>\n<p>Deadline: <span class=\"discourse-local-date\" data-date=\"2025-02-09\" data-email-preview=\"2"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_2", "text": "st.</p>\n<p>Deadline: <span class=\"discourse-local-date\" data-date=\"2025-02-09\" data-email-preview=\"2025-02-09T18:29:00Z UTC\" data-format=\"LLLL\" data-time=\"23:59:00\" data-timezone=\"Asia/Calcutta\">Sunday, February 9, 2025 6:29 PM</span></p>\n<p><a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a></p>\n\n---\n**s.anand** *(created: 2025-01-31T16:14:00.363Z)*\n\n\n\n---\n**22f3001315** *(created: 2025-0"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_3", "text": "></p>\n\n---\n**s.anand** *(created: 2025-01-31T16:14:00.363Z)*\n\n\n\n---\n**22f3001315** *(created: 2025-02-01T07:54:31.100Z)*\n\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/0/0/0007976ca3410205e4fa403a71b9a1ac79bf5192.png\" data-download-href=\"/uploads/short-url/ggpzqp3czDnsuhiswpKRL1wZ4.png?dl=1\" title=\"Screenshot 2025-02-01 132301\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-i"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_4", "text": "1 132301\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-02-01 132301</span><span class=\"informations\">331\u00d7314 12.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nwhat is the error here?? sir <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**24ds2000"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_5", "text": "br>\nwhat is the error here?? sir <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n\n---\n**24ds2000024** *(created: 2025-02-01T18:26:06.664Z)*\n\n<p>I have the Same doubt.</p>\n\n---\n**s.anand** *(created: 2025-02-02T05:30:16.417Z)*\n\n<p><a class=\"mention\" href=\"/u/22f3001315\">@22f3001315</a> <a class=\"mention\" href=\"/u/21f3002277\">@21f3002277</a> <a class=\"mention\" href=\"/u/24ds2000024\">@24ds2000024</a> \u2013 please try again after reloading the page. The new error message will be clearer, like this:</"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_6", "text": "/a> \u2013 please try again after reloading the page. The new error message will be clearer, like this:</p>\n<pre><code class=\"lang-plaintext\">Error: At [0].rating: Values don't match. Expected: \"7.4\". Actual: 7.4\n</code></pre>\n<p>FYI, we expect all values as strings, not numbers. That\u2019s because the year can sometimes be a range for a TV series (e.g. 2021 - 2024) and the rating can sometimes be missing.</p>\n\n---\n**23f2000237** *(created: 2025-02-02T05:41:42.494Z)*\n\n<p>In Question 2, it is specifically"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_7", "text": "</p>\n\n---\n**23f2000237** *(created: 2025-02-02T05:41:42.494Z)*\n\n<p>In Question 2, it is specifically said to filter the movies however, the evaluator is expecting a TV show there. Should we also include TV shows now?</p>\n<p>edit:  This is an everchanging dataset, so will our answers be saved, as, this json might not be in this order tomorrow?</p>\n\n---\n**s.anand** *(created: 2025-02-02T05:45:48.804Z)*\n\n<p><a class=\"mention\" href=\"/u/23f2000237\">@23f2000237</a> A good point. Yes, please include <e"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_8", "text": "Z)*\n\n<p><a class=\"mention\" href=\"/u/23f2000237\">@23f2000237</a> A good point. Yes, please include <em>all</em> titles. I\u2019ve reworded the question accordingly. Thanks.</p>\n\n---\n**21f3002277** *(created: 2025-02-02T06:31:48.149Z)*\n\n<p>Q3. How to handle the error ? <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n<p>TypeError: Cannot read properties of null (reading \u20180\u2019)</p>\n<pre><code class=\"lang-auto\">http://127.0.0.1:8000/api/outline?country=Russia\n\n{\"outline\":\"## Contents\\n# Russia\\n## Etymo"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_9", "text": "-auto\">http://127.0.0.1:8000/api/outline?country=Russia\n\n{\"outline\":\"## Contents\\n# Russia\\n## Etymology\\n## History\\n### Early history\\n### Kievan Rus'\\n### Grand Duchy of Moscow\\n### Tsardom of Russia\\n### Imperial Russia\\n#### Great power and development of society, sciences, and arts\\n#### Great liberal reforms and capitalism\\n#### Constitutional monarchy and World War\\n### Revolution and civil war\\n### Soviet Union\\n#### Command economy and Soviet society\\n#### Stalinism and modernisation\\n"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_10", "text": "l war\\n### Soviet Union\\n#### Command economy and Soviet society\\n#### Stalinism and modernisation\\n#### World War II and United Nations\\n#### Superpower and Cold War\\n#### Khrushchev Thaw reforms and economic development\\n#### Period of developed socialism or Era of Stagnation\\n#### Perestroika, democratisation and Russian sovereignty\\n### Independent Russian Federation\\n#### Transition to a market economy and political crises\\n#### Modern liberal constitution, international cooperation and eco"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_11", "text": "et economy and political crises\\n#### Modern liberal constitution, international cooperation and economic stabilisation\\n#### Movement towards a modernised economy, political centralisation and democratic backsliding\\n#### Invasion of Ukraine\\n## Geography\\n### Climate\\n### Biodiversity\\n## Government and politics\\n### Political divisions\\n### Foreign relations\\n### Military\\n### Human rights\\n### Corruption\\n### Law and crime\\n## Economy\\n### Transport and energy\\n### Agriculture and fishery\\n#"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_12", "text": " Corruption\\n### Law and crime\\n## Economy\\n### Transport and energy\\n### Agriculture and fishery\\n### Science and technology\\n#### Space exploration\\n### Tourism\\n## Demographics\\n### Language\\n### Religion\\n### Education\\n### Health\\n## Culture\\n### Holidays\\n### Art and architecture\\n### Music\\n### Literature and philosophy\\n### Cuisine\\n### Mass media and cinema\\n### Sports\\n## See also\\n## Notes\\n## References\\n## Sources\\n## Further reading\\n## External links\"}\n\n</code></pre>\n<p>error reso"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_13", "text": "tes\\n## References\\n## Sources\\n## Further reading\\n## External links\"}\n\n</code></pre>\n<p>error resolved</p>\n\n---\n**22f3001315** *(created: 2025-02-02T10:06:04.746Z)*\n\n<p>in my output which is correct<br>\nthere are two \\n instead of one .</p>\n\n---\n**21f3002277** *(created: 2025-02-02T10:38:33.945Z)*\n\n<p>it should one(for newline), my code is working now</p>\n\n---\n**24ds2000024** *(created: 2025-02-02T11:54:35.123Z)*\n\n<p>Dear Sir,<br>\nI was at 2/10 yesterday. After pasting JSON file of IMDB &amp; "}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_14", "text": "02T11:54:35.123Z)*\n\n<p>Dear Sir,<br>\nI was at 2/10 yesterday. After pasting JSON file of IMDB &amp; reloading as suggested My marks updated to 3/10. Kindly confirm if I have got whole of IMDB question.</p>\n\n---\n**21f3002277** *(created: 2025-02-02T13:00:36.181Z)*\n\n<p>Q4. How to handle the error ? <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n<p>Error: At 2025-02-05: Values don\u2019t match</p>\n\n---\n**23f2003853** *(created: 2025-02-03T00:37:01.721Z)*\n\n<p>There is no submit button is available i"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_15", "text": "--\n**23f2003853** *(created: 2025-02-03T00:37:01.721Z)*\n\n<p>There is no submit button is available in below screen. Is it fine to save the link url only. Please clarify (unless we click submit button the log of Graded Assignment 4 remains red)<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/6/9/699d94f19d189a93a67fb813a5eeed3d1f73abf3.png\" data-download-href=\"/uploads/short-url/f4jKCc51NQ8kgisT4CLVBDjbqQX.png?dl=1\" ti"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_16", "text": "5eeed3d1f73abf3.png\" data-download-href=\"/uploads/short-url/f4jKCc51NQ8kgisT4CLVBDjbqQX.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1920\u00d71080 337 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**23f200023"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_17", "text": "\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**23f2000237** *(created: 2025-02-03T10:06:13.753Z)*\n\n<p>I have a doubt regarding the bonus mark. Suppose someone were to get 10/10 in the assignment, would their mark be recored as 11/10 or just 10?<br>\n(Assuming they have interacted in this thread)</p>\n\n---\n**s.anand** *(created: 2025-02-03T11:16:46.279Z)*\n\n<p>Anyone scoring 10/10 on GA4 and replying with a <em>relevant</em> message on this thread will get"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_18", "text": "<p>Anyone scoring 10/10 on GA4 and replying with a <em>relevant</em> message on this thread will get 11/10 </p>\n\n---\n**23f2003853** *(created: 2025-02-03T11:38:10.970Z)*\n\n<p>For me I just made filter of rating between 2 and 7 in site and typed in console as per  video. with that data got in console worked fine.<br>\ncopy the coding and save in place use it for data extract when finally submit</p>\n\n---\n**22f2000113** *(created: 2025-02-03T16:46:46.395Z)*\n\n<p>For question 2 getting Error: At [8].ti"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_19", "text": "---\n**22f2000113** *(created: 2025-02-03T16:46:46.395Z)*\n\n<p>For question 2 getting Error: At [8].title: Values don\u2019t match. Expected: \u201c9. Un matrimonio di troppo\u201d. Actual: \u201c9. You\u2019re Cordially Invited\u201d But this movie is not found when searched by name<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/1/b/1b7f2ec2868a09d8b4ed3fc50afa02f8416dad93.png\" data-download-href=\"/uploads/short-url/3VfnvYjfbsyz42oQr2cjvr4iJCr.png"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_20", "text": "b4ed3fc50afa02f8416dad93.png\" data-download-href=\"/uploads/short-url/3VfnvYjfbsyz42oQr2cjvr4iJCr.png?dl=1\" title=\"image\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1414\u00d7295 19 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**ni"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_21", "text": "vg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**nilaychugh** *(created: 2025-02-04T03:28:57.489Z)*\n\n<p>how to get the BBC weather API key?</p>\n\n---\n**JoelJeffrey** *(created: 2025-02-04T05:47:12.930Z)*\n\n<p>Just a quick query on the Bonus mark.</p>\n<p>Would this be added to the final grade? Say for example, Someone get a full score in the first 4 assignments. So the total comes up to 39.5/39.5, and would be converted to 0.15 or 15 marks. Would the"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_22", "text": "signments. So the total comes up to 39.5/39.5, and would be converted to 0.15 or 15 marks. Would the bonus mark be additional to that 15 or would the score change to 40.5/39.5 and then get normalised to 15?</p>\n\n---\n**s.anand** *(created: 2025-02-04T06:15:20.501Z)*\n\n<p><a class=\"mention\" href=\"/u/joeljeffrey\">@JoelJeffrey</a> It will be added to the GA4 marks, not the final grade. So, it\u2019s roughly worth 0.15% on the total - not a full 1% on the total.</p>"}
{"source": "topics_md/165959.md", "chunk_id": "165959.md_part_23", "text": " worth 0.15% on the total - not a full 1% on the total.</p>"}
{"source": "topics_md/165830.md", "chunk_id": "165830.md_part_1", "text": "# Live Session Agenda - 30/01/2025\n\n---\n**carlton** *(created: 2025-01-30T09:31:29.813Z)*\n\n<p>Hi All,</p>\n<p>The agenda items for the live session 30/01/2025 are:</p>\n<ol>\n<li>What is Rest API?</li>\n<li>The FAST API library</li>\n<li>Basic Intro to CORS</li>\n<li>Creating JSON schema</li>\n<li>Function calling</li>\n</ol>\n<p>GMeet: </p>\n<p>Join with Google Meet</p>\n<p><a href=\"http://meet.google.com/brz-ksac-evo\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">meet.google.com/brz-ksac-evo"}
{"source": "topics_md/165830.md", "chunk_id": "165830.md_part_2", "text": "rz-ksac-evo\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">meet.google.com/brz-ksac-evo</a></p>\n<p>Kind regards,<br>\nTDS Team</p>"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_1", "text": "# Project 1 - Casual banter\n\n---\n**TheVishal** *(created: 2025-02-15T16:55:08.372Z)*\n\n<p><a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a></p>\n<h1>Please extend the deadline please.</h1> \n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/flex013/uploads/iitm/original/3X/7/7/7742d688f4b033b15ac1a4af0c1f2eda19c31093.jpeg\" data-download-href=\"/uploads/short-ur"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_2", "text": "original/3X/7/7/7742d688f4b033b15ac1a4af0c1f2eda19c31093.jpeg\" data-download-href=\"/uploads/short-url/h121afIIBiw80GQnTpkJE1e94LF.jpeg?dl=1\" title=\"88394c0c2e80a1326cfffe020684be4a\" rel=\"noopener nofollow ugc\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">88394c0c2e80a1326cfffe020684be4a</span><span class=\"informations\">480\u00d7270 10.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" ar"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_3", "text": "lass=\"informations\">480\u00d7270 10.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n\n---\n**carlton** *(created: 2025-02-15T16:56:02.051Z)*\n\n<p>Done </p>\n<p>Kind regards<br>\nCant say no to a fuzzy wuzzy cat </p>\n\n---\n**AyushTiwari** *(created: 2025-02-15T16:59:12.129Z)*\n\n<p>Thank you very much you do not know but your 1 reply made my heart feels good<br>\n(literally)</p>\n\n---\n**Rishabh2** *(created: 202"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_4", "text": " know but your 1 reply made my heart feels good<br>\n(literally)</p>\n\n---\n**Rishabh2** *(created: 2025-02-15T16:59:38.060Z)*\n\n<p>What\u2019s the new date sir</p>\n\n---\n**22f3000639** *(created: 2025-02-15T16:59:47.595Z)*\n\n<p>Now I can definitely say that a cat saved me today.</p>\n\n---\n**23f1002382** *(created: 2025-02-15T17:00:50.465Z)*\n\n<p>??? You are joking? BUT really maybe 11:59 + 2 hours </p>\n\n---\n**AyushTiwari** *(created: 2025-02-15T17:03:30.032Z)*\n\n<p>This project is due on 16 Feb 2025 EoD IST."}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_5", "text": "*AyushTiwari** *(created: 2025-02-15T17:03:30.032Z)*\n\n<p>This project is due on 16 Feb 2025 EoD IST. Results will be announced by 26 Feb 2025.</p>\n\n---\n**carlton** *(created: 2025-02-15T17:04:20.111Z)*\n\n<p>Sunday 16/02/2025 23:59 IST</p>\n\n---\n**23f2003751** *(created: 2025-02-15T17:07:57.722Z)*\n\n<p>bro is obsessed with this  </p>\n\n---\n**23f3004114** *(created: 2025-02-15T18:34:57.076Z)*\n\n<p>reading this at 12:01 after submitting A1 to A7 .  okay sleeping now. lets see if what i can finish tomorr"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_6", "text": "g this at 12:01 after submitting A1 to A7 .  okay sleeping now. lets see if what i can finish tomorrow.</p>\n\n---\n**rohitgarg** *(created: 2025-02-15T20:20:01.955Z)*\n\n<p>yes Ayush, you mentioned about your <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/project-1-llm-based-automation-agent-discussion-thread-tds-jan-2025/164277/460\">heart and liver problems.</a><br>\nits necessary that your heart feels good</p>\n<p>(just kidding bro )</p>\n\n---\n**namanshyamsukha** *(created: 2025-02-16T18:50:57."}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_7", "text": "t feels good</p>\n<p>(just kidding bro )</p>\n\n---\n**namanshyamsukha** *(created: 2025-02-16T18:50:57.362Z)*\n\n<p>It is good that the practical elements are core in the course though more time should be given for balanced approach between projects and graded assignments.</p>\n<p>There were some issues I faced. For example, the GitHub link of the datagen.py was incorrect and I was confused due to the code not generating the expected outcome.</p>\n<p>The LLM was giving creative answers which did not fo"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_8", "text": "ode not generating the expected outcome.</p>\n<p>The LLM was giving creative answers which did not follow the strict evaluation guidelines. So, the case was not passed. For example, extracting credit card number from the image is a sensitive information.</p>\n<p>I am alright with it since the evaluation will be different.</p>\n<p>Now, I am really well versed with the tools taught in these weeks. Thanking the whole TDS Team for this project which was very well designed. </p>\n\n---\n**Jivraj** *(create"}
{"source": "topics_md/167344.md", "chunk_id": "167344.md_part_9", "text": "king the whole TDS Team for this project which was very well designed. </p>\n\n---\n**Jivraj** *(created: 2025-02-19T11:01:00.149Z)*\n\n<p>A post was split to a new topic: <a href=\"/t/just-some-background-test/167699\">Just some background test</a></p>"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_1", "text": "# Concerns Regarding TDS Course Difficulty and Grading Fairness\n\n---\n**A_LAKSHMI** *(created: 2025-02-25T17:21:11.919Z)*\n\n<p>Dear <a class=\"mention\" href=\"/u/jkmadathil\">@jkmadathil</a> <a class=\"mention\" href=\"/u/anand\">@Anand</a> <a class=\"mention\" href=\"/u/bharathi\">@Bharathi</a></p>\n<p>First and foremost, we sincerely appreciate the efforts of the <strong>TDS team</strong> in supporting us throughout this course. The <strong>live sessions and guidance</strong> have been helpful, and we recog"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_2", "text": "oughout this course. The <strong>live sessions and guidance</strong> have been helpful, and we recognize the intent to make this a valuable learning experience.</p>\n<p>However, despite these efforts, many of us have faced significant challenges in keeping up with the course expectations.</p>\n<h2><a name=\"p-599766-key-challenges-faced-1\" class=\"anchor\" href=\"#p-599766-key-challenges-faced-1\"></a><strong>Key Challenges Faced</strong></h2>\n<h3><a name=\"p-599766-lack-of-prerequisites-2\" class=\"ancho"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_3", "text": "trong>Key Challenges Faced</strong></h2>\n<h3><a name=\"p-599766-lack-of-prerequisites-2\" class=\"anchor\" href=\"#p-599766-lack-of-prerequisites-2\"></a> <strong>Lack of Prerequisites</strong></h3>\n<p>This course did not list any <strong>prerequisites</strong>, leading many students\u2014including those from <strong>non-technical backgrounds</strong>\u2014to enroll with the expectation that they could keep up. However, the reality is that the <strong>course content, assignments, and projects</strong> have been"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_4", "text": "owever, the reality is that the <strong>course content, assignments, and projects</strong> have been far more complex than anticipated, making it difficult to manage.</p>\n<h3><a name=\"p-599766-project-complexity-deadline-pressure-3\" class=\"anchor\" href=\"#p-599766-project-complexity-deadline-pressure-3\"></a> <strong>Project Complexity &amp; Deadline Pressure</strong></h3>\n<p>The <strong>difficulty of the projects</strong> has been overwhelming, requiring most of us to <strong>rely heavily on peer"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_5", "text": "of the projects</strong> has been overwhelming, requiring most of us to <strong>rely heavily on peer support</strong> just to meet the deadlines. Despite putting in our best efforts, many of us struggled to complete them successfully.</p>\n<h3><a name=\"p-599766-course-structure-changes-misleading-past-feedback-4\" class=\"anchor\" href=\"#p-599766-course-structure-changes-misleading-past-feedback-4\"></a> <strong>Course Structure Changes &amp; Misleading Past Feedback</strong></h3>\n<p>Many students jo"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_6", "text": "a> <strong>Course Structure Changes &amp; Misleading Past Feedback</strong></h3>\n<p>Many students joined <strong>TDS</strong> based on past <strong>Discourse posts and feedback</strong>, which suggested a different course structure. With the recent changes, it has been a tough transition\u2014especially for <strong>working professionals</strong> and students without prior experience.</p>\n<h3><a name=\"p-599766-remote-open-exam-roe-graded-assignments-gas-5\" class=\"anchor\" href=\"#p-599766-remote-open-ex"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_7", "text": "-599766-remote-open-exam-roe-graded-assignments-gas-5\" class=\"anchor\" href=\"#p-599766-remote-open-exam-roe-graded-assignments-gas-5\"></a> <strong>Remote Open Exam (RoE) &amp; Graded Assignments (GAs)</strong></h3>\n<p>While we have put in significant effort\u2014spending <strong>2-3 days on Graded Assignments (GAs)</strong> to secure good scores\u2014we still find ourselves <strong>struggling to meet expectations</strong> for the <strong>projects and RoE</strong>, which are significantly harder than antici"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_8", "text": "tions</strong> for the <strong>projects and RoE</strong>, which are significantly harder than anticipated.</p>\n<p>We completely understand the need to maintain academic standards, but we also hope fairness is considered. Since many of us are putting in our best efforts but still finding it hard to meet the course demands, we kindly request a revision of the grading pattern. Increasing the weightage of Graded Assignments (GAs) would help ensure that the dedication and hard work of students are fa"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_9", "text": "e of Graded Assignments (GAs) would help ensure that the dedication and hard work of students are fairly reflected in their grades. This would allow students to pass with a reasonable grade while still maintaining the integrity of the course.</p>\n<p>We truly respect the effort that has gone into designing this course, and we are all here because we genuinely want to learn and grow. We only ask that the grading structure consider the diverse backgrounds of students so that everyone has a fair cha"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_10", "text": "t the grading structure consider the diverse backgrounds of students so that everyone has a fair chance to succeed.</p>\n<p>Thank you for your time and understanding. We appreciate your consideration and hope to find a way forward that benefits both students and the course objectives.</p>\n\n---\n**mahi.13** *(created: 2025-02-25T17:23:19.102Z)*\n\n<p>Yes sir please look into this</p>\n\n---\n**22f1000376** *(created: 2025-02-25T17:25:59.673Z)*\n\n<p><a class=\"mention\" href=\"/u/anand\">@Anand</a> <a class=\""}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_11", "text": "* *(created: 2025-02-25T17:25:59.673Z)*\n\n<p><a class=\"mention\" href=\"/u/anand\">@Anand</a> <a class=\"mention\" href=\"/u/bharathi\">@Bharathi</a> Yes ma\u2019am please pay attention to our concern.</p>\n\n---\n**Sakshi6479** *(created: 2025-02-25T17:27:50.727Z)*\n\n<p>Yes sir, even it is tough for tech background students, just think about that how non-tech background students are handling the pressure for this course. Please consider this request.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> , <a cl"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_12", "text": " course. Please consider this request.<br>\n<a class=\"mention\" href=\"/u/carlton\">@carlton</a> , <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a> , <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> , <a class=\"mention\" href=\"/u/anand\">@Anand</a></p>\n\n---\n**Rishabh2** *(created: 2025-02-25T17:31:26.262Z)*\n\n<p>Yes <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> sir <a class=\"mention\" href=\"/u/jkmadathil\">@jkmadathil</a>  sir <a class=\"mention\" href=\"/u/bharathi\">@Bharathi</a> Mam,<br>\nP"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_13", "text": "=\"/u/jkmadathil\">@jkmadathil</a>  sir <a class=\"mention\" href=\"/u/bharathi\">@Bharathi</a> Mam,<br>\nPlss look into this as this is becoming too too hectic ans stressful now Mam.</p>\n\n---\n**Sagan** *(created: 2025-02-25T17:45:42.047Z)*\n\n<p>Right,<br>\nI put 3 to 4 days on a GA. I still am not able to fully grasp the concept.</p>\n<p>I tried to attempt today\u2019s mock roe, it was a disaster. I hope I can do better on next mock.</p>\n<p>I completed my project but due to some issue I failed to submit it. T"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_14", "text": "do better on next mock.</p>\n<p>I completed my project but due to some issue I failed to submit it. That\u2019s was my mistake, and I highly regret it. I lost 20 marks because of it despite working so hard.</p>\n\n---\n**22f2001640** *(created: 2025-02-25T17:49:47.969Z)*\n\n<p>Hi <a class=\"mention\" href=\"/u/s.anand\">@s.anand</a> <a class=\"mention\" href=\"/u/jkmadathil\">@jkmadathil</a> <a class=\"mention\" href=\"/u/bharathi\">@Bharathi</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" hre"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_15", "text": "\"/u/bharathi\">@Bharathi</a> <a class=\"mention\" href=\"/u/carlton\">@carlton</a> <a class=\"mention\" href=\"/u/jivraj\">@Jivraj</a> <a class=\"mention\" href=\"/u/saransh_saini\">@Saransh_Saini</a><br>\nCould you please look into the above issue?</p>\n<p>Additionally, I\u2019d like to highlight a concern regarding the current grading pattern ( JAN 2025 Term ) and overall course structuring:</p>\n<h3><a name=\"p-599787-grading-concerns-1\" class=\"anchor\" href=\"#p-599787-grading-concerns-1\"></a><strong>Grading Concer"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_16", "text": "87-grading-concerns-1\" class=\"anchor\" href=\"#p-599787-grading-concerns-1\"></a><strong>Grading Concerns</strong></h3>\n<p><strong>Final Course Score:</strong><br>\nT = 0.15GAA + 0.2 ROE1 + 0.2 P1 + 0.2 P2 + 0.25 F<br>\n(The weightage of Projects + ROE accounts for 60% of the total score.)</p>\n<p>From the following Discourse post, it appears that the ROE exam is extremely difficult to the point of being considered \u201cimpossible\u201d by students:<br>\n<a href=\"https://discourse.onlinedegree.iitm.ac.in/t/what"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_17", "text": "g considered \u201cimpossible\u201d by students:<br>\n<a href=\"https://discourse.onlinedegree.iitm.ac.in/t/whats-the-actual-purpose-of-impossible-roe-exam/99838\">What\u2019s the actual purpose of impossible ROE exam?</a>.<br>\nGiven this, many students may directly lose 20 marks due to ROE, significantly impacting their overall scores.</p>\n<p>Furthermore, for Project 1 (<strong>deadline: 16th Feb 2025</strong>), guidance was provided only in the week of the deadline. This was highly inconvenient, as the live ses"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_18", "text": "uidance was provided only in the week of the deadline. This was highly inconvenient, as the live session did not effectively address all student concerns. As a result, many students are at risk of losing a valuable 20 marks for Project 1.</p>\n<h3><a name=\"p-599787-course-structuring-scheduling-issues-2\" class=\"anchor\" href=\"#p-599787-course-structuring-scheduling-issues-2\"></a><strong>Course Structuring &amp; Scheduling Issues</strong></h3>\n<ul>\n<li>Many students pursuing this course are <strong"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_19", "text": "turing &amp; Scheduling Issues</strong></h3>\n<ul>\n<li>Many students pursuing this course are <strong>dual-degree students or working professionals</strong>, making it challenging to keep up with live sessions and deadlines.</li>\n<li>The <strong>last-minute guidance</strong> for projects adds unnecessary pressure, especially for those juggling work or other academic commitments.</li>\n<li>The <strong>structuring and scheduling of sessions</strong> feel inappropriate, with crucial guidance sessions"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_20", "text": "g>structuring and scheduling of sessions</strong> feel inappropriate, with crucial guidance sessions being held too late, making it difficult to implement feedback or clarify doubts in time.</li>\n</ul>\n<h3><a name=\"p-599787-request-for-improvement-3\" class=\"anchor\" href=\"#p-599787-request-for-improvement-3\"></a><strong>Request for Improvement</strong></h3>\n<p>To ensure a smoother learning experience, I request:</p>\n<ol>\n<li><strong>Early guidance and detailed instructions for Project 2</strong>,"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_21", "text": "ce, I request:</p>\n<ol>\n<li><strong>Early guidance and detailed instructions for Project 2</strong>, well in advance of the deadline.</li>\n<li><strong>More structured and accessible support</strong>, considering the diverse student base, including working professionals.</li>\n<li><strong>Better management of exam difficulty levels</strong>, ensuring that assessments are fair and reflect actual learning rather than being unnecessarily tough.</li>\n</ol>\n<p>I hope these concerns can be taken into ac"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_22", "text": "ning rather than being unnecessarily tough.</li>\n</ol>\n<p>I hope these concerns can be taken into account, and necessary improvements can be made. Looking forward to your response.</p>\n\n---\n**23f1002909** *(created: 2025-02-25T17:55:29.035Z)*\n\n<p>Please look into it sir.</p>\n\n---\n**jkmadathil** *(created: 2025-02-25T18:34:40.325Z)*\n\n<p>Thank you <a class=\"mention\" href=\"/u/a_lakshmi\">@A_LAKSHMI</a> for the detailed post. This is much appreciated. Thought of quickly stepping in before Anand or ot"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_23", "text": "> for the detailed post. This is much appreciated. Thought of quickly stepping in before Anand or other members from the course team gives a more detailed response.</p>\n<p>Let me be Open and Blunt to all in saying that the <strong>grading pattern will not be changed</strong>.  And the points below are some of quick things that came to my mind while reading the detailed listing of the challenges that have been put in the OP.</p>\n<ol>\n<li>TDS team have been tinkering with the course structure for "}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_24", "text": "at have been put in the OP.</p>\n<ol>\n<li>TDS team have been tinkering with the course structure for the past 3 terms. You can check this <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/diploma-course-feedback-t32024-and-course-selection-t12025-thread/160032/84\">Discourse thread</a> where students have unanimously said that this is not an easy subject. In fact the <a href=\"https://tds.s-anand.net/#/\">first page of the TDS course</a> GA1 itself should have given everyone an indication of what"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_25", "text": "net/#/\">first page of the TDS course</a> GA1 itself should have given everyone an indication of what lies ahead. Anand has explicitly written down the below words:</li>\n</ol>\n<blockquote>\n<p><strong>This course is quite hard</strong></p>\n<p>Here\u2019s students\u2019 feedback:</p>\n<ul>\n<li>It <em>used</em> to be an easy course until 2024. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/difficulty-rating-for-diploma-subjects-based-on-students-opinion/61194\">#</a> <a href=\"https://discourse.onlinedegre"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_26", "text": "g-for-diploma-subjects-based-on-students-opinion/61194\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/difficulty-rating-for-diploma-subjects-2-0-based-on-student-ratings-and-my-experience/85681\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/what-should-i-take-next/44291/6\">#</a></li>\n<li>Now it\u2019s hard and covers more. Take it in your last semester if possible. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/diploma-course-feedback-t32024-and-course-selection-t12025"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_27", "text": "tps://discourse.onlinedegree.iitm.ac.in/t/diploma-course-feedback-t32024-and-course-selection-t12025-thread/160032/45\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/2024-t1-diploma-level-feedback-and-course-selection-for-may-2024-term/127856/60\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/2024-t2-diploma-level-feedback-and-course-selection-for-september-2024-term/144976/62\">#</a></li>\n<li>Plan extra time. It takes more time than typical 3-credit courses. <a href=\"http"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_28", "text": "/62\">#</a></li>\n<li>Plan extra time. It takes more time than typical 3-credit courses. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/concerns-regarding-unfair-grading-practices-for-tds-project-2/160611/11\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/diploma-level-course-combo-suggestion/158460/4\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/diploma-level-course-combo-suggestion/158460/7\">#</a></li>\n<li>LLMs grade you \u2013 unpredictably. <a href=\"https://discourse"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_29", "text": "combo-suggestion/158460/7\">#</a></li>\n<li>LLMs grade you \u2013 unpredictably. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/concerns-regarding-unfair-grading-practices-for-tds-project-2/160611/10\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/wrong-marks-in-project-2/160355/9\">#</a></li>\n<li>The ROE is hard. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/is-it-fair-to-consider-20-weightage-of-such-exam-which-is-impossible-to-solve-in-given-time-i-e-roe/141413/10\">#</a></li>"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_30", "text": "r-20-weightage-of-such-exam-which-is-impossible-to-solve-in-given-time-i-e-roe/141413/10\">#</a></li>\n</ul>\n<p><strong><a href=\"https://exam.sanand.workers.dev/tds-2025-01-ga1\">Take Graded assignment 1</a> to check if you\u2019re ready for this course.</strong> Please drop this course (do it in a later term) if you score low. It\u2019ll be too tough for you now.</p>\n</blockquote>\n<ol start=\"2\">\n<li>TDS (or for that matter any course in this Degree program) is not supposed to be a single person effort. You "}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_31", "text": "or that matter any course in this Degree program) is not supposed to be a single person effort. You should be realizing this even in your real life. A significant part of our learning process is social by nature. The only difference in this course is that we we explicitly encourage you to collaborate. If there is one main life lesson that we want you to learn out of this course then it is just this - <em>Surviving tough situations require support all around us, and there is no shame in asking fo"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_32", "text": "s - <em>Surviving tough situations require support all around us, and there is no shame in asking for help</em><br>\nAgain to quote Anand:</li>\n</ol>\n<blockquote>\n<p><strong>We encourage learning by sharing</strong></p>\n<p>You <em>CAN</em> copy from friends. You can work in groups. You can share code. Even in projects, assignments, and exams (except the final end-term exam).</p>\n<p><strong>Why should you copy?</strong> Because in real life, there\u2019s no time to re-invent the wheel. You\u2019ll be workin"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_33", "text": "ld you copy?</strong> Because in real life, there\u2019s no time to re-invent the wheel. You\u2019ll be working in teams on the shoulders of giants. It\u2019s important to learn how to do that well.</p>\n<p><strong>To learn well, understand</strong> what you\u2019re copying. If you\u2019re short of time, prioritize.</p>\n<p><strong>To learn better, teach</strong> what you\u2019ve learnt.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Now will be a good point to reflect on the optimization problem of Grades versus Learning. The larger qu"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_34", "text": "will be a good point to reflect on the optimization problem of Grades versus Learning. The larger question for each of you is to consider the short-term advantage of better grades versus the long term advantage of improving the fundamentals related to tools usage (not just for Data Science, but in every day life itself).<br>\nOnce again Anand has a <a href=\"https://www.s-anand.net/blog/should-courses-be-hard-or-easy/\">nice blog</a> where [I think] he is trying to explain that neither do we know n"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_35", "text": "es-be-hard-or-easy/\">nice blog</a> where [I think] he is trying to explain that neither do we know nor do students realize what is going to ultimately benefit us. This is a journey that all of us are taking together, and we hope such open interactions along with the course will make the learning (or teaching) experience enjoyable  and internally make us more humble.</li>\n<li>Whether you like it or not, life is becoming more complex day by day. And unless you figure out your optimization strategy"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_36", "text": " not, life is becoming more complex day by day. And unless you figure out your optimization strategy, it is going to be a bumpy ride. And this is true even for the TDS course team members. Each of us are also juggling multiple responsibilities (some even doing 4 projects in this term) while ensuring that needed support can be provided to the learners. This is not lighten the issues that any of you have highlighted here, but just to point out that there is no flowery path for anyone here.</li>\n<l"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_37", "text": " have highlighted here, but just to point out that there is no flowery path for anyone here.</li>\n<li>Then the major question will be, why are all of doing this crazy business of learning tools in this way. The simplest answer is - <em>Tools are evolving day by day, and unless we realize that they are just \u201ctools\u201d, it is going to consume us an eternity to master them</em> The point of all the exercises and assessments, is for you to understand the fundamental aspects related to a tool and figure"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_38", "text": "cises and assessments, is for you to understand the fundamental aspects related to a tool and figure out your own strategies for getting a grip on them.</li>\n<li><a class=\"mention\" href=\"/u/22f2001640\">@22f2001640</a> Management of time and difficulty levels are a shared responsibility. All of you have been sufficiently warned that the learning process wont be easy. In fact we have released all major content well in advance, so that learners can benefit from early access. And from our side, we a"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_39", "text": "jor content well in advance, so that learners can benefit from early access. And from our side, we also have realized the supporting learners wouldn\u2019t be easy. But I see that the TDS course team members have been putting their heart and soul in this course (and support), and even in this week they have prepared 3 sets of ROEs in order to ensure that all of you get enough practice opportunity.</li>\n</ol>\n\n---\n**23f1002698** *(created: 2025-02-25T21:19:52.440Z)*\n\n<p>Regarding your point of the sho"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_40", "text": "\n</ol>\n\n---\n**23f1002698** *(created: 2025-02-25T21:19:52.440Z)*\n\n<p>Regarding your point of the short term benefits of grades vs the long term benefits of learning, I think I\u2019m speaking for a lot of my peers that we\u2019re not concerned about grades at this point, we just at least want to pass this course.</p>\n<p>I\u2019m a standalone degree potential student and while I have learned a lot from the modules and do not condone dumbing it down, but at least after all this hard work I should be able to pass"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_41", "text": "s and do not condone dumbing it down, but at least after all this hard work I should be able to pass the course.</p>\n<p>While grades don\u2019t matter in front of learning things but when passing the course itself is on the line then the learnings are overshadowed by the lack of marks. I want to invest myself in the ROE and the remaining project, but at this point I\u2019m so frustrated about getting at least 40 that rather than a valuable learning experience, this course seems like a burden to me.</p>\n<p"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_42", "text": "st 40 that rather than a valuable learning experience, this course seems like a burden to me.</p>\n<p>I understand that the grading can\u2019t be changed. All I hope and request that project 2 and end term turn out to be more approachable than project 1 and ROE so that after all this hard work, students like me at least get the privilege to pass.</p>\n\n---\n**Rrishit** *(created: 2025-02-26T09:28:00.959Z)*\n\n<p>Nicely highlighted the concern of all students.<br>\nTDS as a course has been really tedious th"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_43", "text": "*\n\n<p>Nicely highlighted the concern of all students.<br>\nTDS as a course has been really tedious this term. It\u2019s a headache for those with non-technical background.<br>\nIITM Management please look into this matter on urgent basis.</p>\n\n---\n**22f3002811** *(created: 2025-02-26T19:19:58.232Z)*\n\n<p>Dam\u2026 Even when I have finished the course (with a B ) I\u2019m still getting dragged into this   \u2026</p>\n\n---\n**22f3002811** *(created: 2025-02-26T19:22:11.465Z)*\n\n<p>But still this is a huge Problem \u2026 </p>\n<a"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_44", "text": "\n**22f3002811** *(created: 2025-02-26T19:22:11.465Z)*\n\n<p>But still this is a huge Problem \u2026 </p>\n<aside class=\"quote group-ds-students\" data-username=\"jkmadathil\" data-post=\"9\" data-topic=\"168476\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n jkmadathil:</div>\n<blockquote>\n<p>LLMs grade you \u2013 unpredictably. <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/concerns-regarding-unfair-grading-practices-for-tds-project-2/160611/10\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_45", "text": "grading-practices-for-tds-project-2/160611/10\">#</a> <a href=\"https://discourse.onlinedegree.iitm.ac.in/t/wrong-marks-in-project-2/160355/9\">#</a></p>\n</blockquote>\n</aside>\n\n---\n**23f2001286** *(created: 2025-02-27T16:59:38.492Z)*\n\n<p>Great! a nice post sir, I accept it is hard and I am harder than this too.</p>\n\n---\n**namanshyamsukha** *(created: 2025-02-27T18:13:51.518Z)*\n\n<p>Truly agree with your point. It is hard. If the marking scheme is unpredictable, why not remove the whole grading syst"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_46", "text": "our point. It is hard. If the marking scheme is unpredictable, why not remove the whole grading system from this course. This is punishment even when you do learn. Hopefully, I would like a better grading system in future, even the course is designed very well!</p>\n\n---\n**22f1000120** *(created: 2025-02-28T13:31:40.672Z)*\n\n<p>Seeing the difficulty of TDS I feel like appying to Anand Sir\u2019s company lol. I am barely surviving but enjoying every moment of it. But seriously though remembering everyth"}
{"source": "topics_md/168476.md", "chunk_id": "168476.md_part_47", "text": "lol. I am barely surviving but enjoying every moment of it. But seriously though remembering everything is super difficult.</p>\n\n---\n**carlton** *(created: 2025-02-28T13:48:45.642Z)*\n\n<p>You will survive. Just watch tonight\u2019s session.  and prepare and practise.</p>"}
